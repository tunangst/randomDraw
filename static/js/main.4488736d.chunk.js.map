{"version":3,"sources":["codeBank/utilities.js","codeBank/mandalaDrawing/functionPool/_getDrawType.js","components/head/sequence/card/Card.js","components/head/sequence/Sequence.js","components/head/Head.js","functions/functions.js","components/codeInjector/CodeInjector.js","components/main/controls/boxDropdownMarkUp/BoxDropDownMarkUp.js","components/main/controls/mandalaDropDownMarkUp/mandalaCustomDrawOptions/MandalaCustomDrawOptions.js","components/main/controls/mandalaDropDownMarkUp/mandalaDetailsOptions/MandalaDetailOptions.js","components/main/controls/mandalaDropDownMarkUp/MandalaDropDownMarkUp.js","components/main/controls/Controls.js","components/main/mainDisplay/MainDisplay.js","codeBank/boxDrawing/boxDrawingUtilities.js","codeBank/boxDrawing/singles/clone.js","codeBank/boxDrawing/specials/fullClone.js","codeBank/boxDrawing/singles/rotate.js","codeBank/boxDrawing/specials/fullRotate.js","codeBank/boxDrawing/singles/reflect.js","codeBank/boxDrawing/specials/fullReflect.js","codeBank/boxDrawing/specials/halfReflect.js","codeBank/boxDrawing/specials/noPattern.js","codeBank/boxDrawing/specials/specials.js","codeBank/boxDrawing/singles/singles.js","codeBank/boxDrawing/doubles/doubles.js","codeBank/boxDrawing/BoxDrawing.js","codeBank/mandalaDrawing/functionPool/_getStrokeWidth.js","codeBank/mandalaDrawing/functionPool/_getColorType.js","codeBank/mandalaDrawing/functionPool/_checkIndividualSwitches.js","codeBank/mandalaDrawing/functionPool/draw/drawLine.js","codeBank/mandalaDrawing/functionPool/draw/clearLoop.js","codeBank/mandalaDrawing/functionPool/draw/fillLoop.js","codeBank/mandalaDrawing/functionPool/draw/strokeLoop.js","codeBank/mandalaDrawing/special/loop.js","codeBank/mandalaDrawing/functionPool/draw/clearDrawingArea.js","codeBank/mandalaDrawing/functionPool/draw/drawBackground.js","codeBank/mandalaDrawing/functionPool/_getBackgroundLoopStats.js","codeBank/mandalaDrawing/functionPool/_checkLoopSwitches.js","codeBank/mandalaDrawing/functionPool/_checkShapeSpacing.js","codeBank/mandalaDrawing/functionPool/_getFollowingLoopStats.js","codeBank/mandalaDrawing/functionPool/draw/drawSquare.js","codeBank/mandalaDrawing/functionPool/draw/drawEllipse.js","codeBank/mandalaDrawing/functionPool/_getShapeFunction.js","codeBank/mandalaDrawing/functionPool/_getShapeArr.js","codeBank/mandalaDrawing/functionPool/_checkBackgroundSwitches.js","codeBank/mandalaDrawing/runMandalaDraw.js","codeBank/mandalaDrawing/mandalaDrawingUtilities.js","codeBank/mandalaDrawing/functionPool/_getBlendMode.js","codeBank/mandalaDrawing/functionPool/_getInputStats.js","codeBank/mandalaDrawing/MandalaDrawing.js","codeBank/randomInterface.js","codeBank/randomDrawing.js","randomDraw.js","App.js","index.js"],"names":["roll","range","Math","floor","random","rollRange","min","max","coinFlip","createCanvasTemplate","width","height","old","document","querySelector","remove","canvasTemplate","createElement","id","ctx","getContext","createCanvasDraw","parentSpace","innerHTML","canvasDraw","ctx2","appendChild","clear","inputObj","matrix","clearRect","canvasWidth","canvasHeight","randomColor","randomR","randomG","randomB","lightColor","shapeCount","randomL","randomH","randomS","darkColor","getDrawType","inputs","forceType","drawType","loopCycle","word","eval","chaos","fillSwitch","strokeSwitch","strokeOnly","clearIndividual","strokeAll","custom","fillOnly","clearAll","fillAll","fillAndStroke","individual","fillIndividual","fillColorIndividual","strokeIndividual","strokeColorIndividual","strokeWidthIndividual","outline","customBackgroundSwitch","customBackgroundColor","customStrokeColor","blendMode","maxShapeCount","customShape","strokeColorAll","strokeWidthAll","dice","console","log","Card","image","className","onClick","event","src","alt","Sequence","sequence","handleMouseEnter","relatedTarget","target","handleMouseLeave","onMouseEnter","onMouseLeave","map","card","index","key","Head","useState","showSequence","setShowSequence","cloneObj","obj","JSON","parse","stringify","clearEmpties","Object","keys","length","undefined","CodeInjector","state","displayCode","writeInputCode","initialState","boxCount","choosePrimaryColor","chooseSecondaryColor","chooseBackgroundColor","BoxDropDownMarkUp","adjustBoxState","input","setInput","activePrimary","setActivePrimary","activeSecondary","setActiveSecondary","activeBackground","setActiveBackground","activeStyle","setActiveStyle","handleChange","value","keyName","Number","handleBtns","primaryToggle","primaryColor","secondaryToggle","secondaryColor","backgroundToggle","backgroundColor","handleStyleBtns","innerText","convertedWord","charAt","toLowerCase","replace","slice","drawStyle","name","type","step","onChange","clearRandomLoops","fill","fillRandomLoops","fillColor","fillColorAll","fillColorRandomLoops","stroke","strokeRandomLoops","strokeColor","strokeColorRandomLoops","strokeWidth","strokeWidthRandomLoops","MandalaCustomDrawOptions","adjustMandalaState","useEffect","collapseState","collapsedState","lvl1Key","lvl2Key","stopPropagation","checked","htmlFor","loopCount","minShapeSize","maxShapeSize","minShapeCount","minPathRadius","maxPathRadius","MandalaDetailOptions","placeholder","MandalaDropDownMarkUp","showDrawOptions","setShowDrawOptions","activeShapeType","setActiveShapeType","shapeType","handleTypeBtns","initialInputState","Controls","draw","dropDownMarkUp","adjustState","adjustDimensions","active","setActive","dropDown","setDropDown","whichDropDown","setWhichDropDown","handleBtnClick","typeOfDrawer","MainDisplay","boxDraw","boxDrawObj","xCoord","yCoord","usingMatrix","matrixRow","matrixColumn","pixel","calcX","xStart","calcY","yStart","fillStyle","color","fillRect","pixelWidth","pixelHeight","strokeStyle","strokeRect","PixelNode","this","InputNode","whatToPlace","rollColor","createPixelMap","patternOverride","newMatrix","y","row","x","push","drawSectionHeight","drawSectionWidth","combineMatrixTopHalf","matrix1","matrix2","combinedMatrix","i","combine","combineMatrixLeftHalf","clone","xOffset","yOffset","xPos","yPos","tempMatrix","rowArr","newPixel","fullClone","cloneMatrix1","cloneMatrix2","cloneMatrix3","inputNode","rotateClockwise","useMatrix","column","rotateCounterClockwise","fullRotate","rotatedMatrix1","rotatedMatrix2","rotatedMatrix3","reflectVerticalAxis","reflectHorizontalAxis","fullReflect","adjustedMatrix","reflectedMatrix","halfReflect","clonedMatrix","noPattern","getMatrix","specials","singles","quadrantDice","order","quadrantArray","test","includes","quadrant","findQuadrantOrder","forEach","number","doubles","styleDice","doubleDice","quadrantDouble","rotatedMatrix","BoxDrawing","forceDesignObj","dimensions","inputColor","alert","toDataURL","getStrokeWidth","getColorType","clearSwitch","checkIndividualSwitches","starburst","save","moveTo","pathRadius","shapeSize","lineTo","restore","slant","clearLoop","shapeFunction","shapeArr","currentLoop","clearShape","globalCompositeOperation","beginPath","closePath","rotate","PI","fillLoop","fillShape","strokeLoop","strokeShape","lineWidth","loop","translate","halfWidth","halfHeight","clearDrawingArea","drawBackground","rect","getBackgroundStats","maxFullPath","backgroundLoopSwitch","checkLoopSwitches","FillRandomLoops","checkShapeSpacing","newPath","improperSpacing","getFollowingLoopStats","definedShapeRange","percent","square","diamond","circle","arc","oval","ellipse","getShapeFunction","shapeNumber","getShapeArr","shapeStyleDice","sameShape","checkResetBackgroundSwitches","runMandalaDraw","inputStats","ceil","useHalfSize","getBackgroundLoopStats","checkBackgroundSwitches","findHypotenuse","hypotenuse","sqrt","pow","round","getBlendMode","blend","getInputStats","mandalaDrawObj","initLoopSwitch","useSize","MandalaDrawing","mandalaInput","randomInterface","RandomDrawing","returnRandomDrawing","pushSequence","design","shift","randomDraw","box","mandala","App","designState","setDesignState","setSequence","clearIndividualLoops","fillIndividualLoops","fillColorIndividualLoops","strokeIndividualLoops","strokeColorIndividualLoops","strokeWidthIndividualLoops","resetDefaults","maxSize","adjustedArr","checkSequenceSize","grabImg","getImage","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4488736d.chunk.js","sourcesContent":["const roll = (range) => {\r\n\t// 1 - range\r\n\treturn Math.floor(Math.random() * range + 1);\r\n};\r\nconst rollRange = (min, max) => {\r\n\tconst answer = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\treturn answer;\r\n};\r\n\r\nconst coinFlip = () => {\r\n\tconst coin = roll(2);\r\n\tconst face = coin === 1 ? true : false;\r\n\treturn face;\r\n};\r\nconst createCanvasTemplate = (width, height) => {\r\n\t//remove old canvas\r\n\tconst old = document.querySelector('#canvasTemplate');\r\n\tif (old) {\r\n\t\told.remove();\r\n\t}\r\n\t//create new canvas\r\n\tlet canvasTemplate = document.createElement('canvas');\r\n\tcanvasTemplate.id = 'canvasTemplate';\r\n\tcanvasTemplate.width = width;\r\n\tcanvasTemplate.height = height;\r\n\tconst ctx = canvasTemplate.getContext('2d');\r\n\r\n\treturn [canvasTemplate, ctx];\r\n};\r\nconst createCanvasDraw = (width, height) => {\r\n\t//find user defined space for canvas\r\n\tconst parentSpace =\r\n\t\tdocument.querySelector('.randomDraw') ||\r\n\t\tdocument.querySelector('#randomDraw');\r\n\t//remove old canvas\r\n\tparentSpace.innerHTML = '';\r\n\t//create new canvas\r\n\tlet canvasDraw = document.createElement('canvas');\r\n\tcanvasDraw.id = 'canvasDraw';\r\n\tcanvasDraw.width = width;\r\n\tcanvasDraw.height = height;\r\n\tconst ctx2 = canvasDraw.getContext('2d');\r\n\r\n\t//place canvas\r\n\tparentSpace.appendChild(canvasDraw);\r\n\r\n\treturn [canvasDraw, ctx2];\r\n};\r\n\r\nconst clear = (inputObj) => {\r\n\tinputObj.matrix = [];\r\n\tinputObj.ctx &&\r\n\t\tinputObj.ctx.clearRect(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tinputObj.canvasWidth,\r\n\t\t\tinputObj.canvasHeight\r\n\t\t);\r\n\tinputObj.ctx2 &&\r\n\t\tinputObj.ctx2.clearRect(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tinputObj.canvasWidth,\r\n\t\t\tinputObj.canvasHeight\r\n\t\t);\r\n\treturn inputObj.matrix;\r\n};\r\n\r\nconst randomColor = () => {\r\n\tconst randomR = roll(256);\r\n\tconst randomG = roll(256);\r\n\tconst randomB = roll(256);\r\n\treturn `rgb(${randomR},${randomG},${randomB})`;\r\n};\r\n\r\nconst lightColor = (shapeCount) => {\r\n\tconst randomH = rollRange(0, 360);\r\n\tconst randomS = rollRange(0, 100);\r\n\tlet randomL;\r\n\tif (shapeCount > 150) {\r\n\t\trandomL = 99;\r\n\t} else if (shapeCount > 100) {\r\n\t\trandomL = rollRange(95, 99); //0=black 50=normal 100=white\r\n\t} else if (shapeCount > 50) {\r\n\t\trandomL = rollRange(90, 99); //0=black 50=normal 100=white\r\n\t} else {\r\n\t\trandomL = rollRange(80, 99); //0=black 50=normal 100=white\r\n\t}\r\n\treturn `hsl(${randomH},${randomS}%,${randomL}%)`;\r\n};\r\n\r\nconst darkColor = (shapeCount) => {\r\n\tconst randomH = rollRange(0, 360);\r\n\tconst randomS = rollRange(0, 100);\r\n\tlet randomL;\r\n\t// debugger;\r\n\tif (shapeCount > 150) {\r\n\t\trandomL = 1;\r\n\t} else if (shapeCount > 100) {\r\n\t\trandomL = rollRange(5, 1); //0=black 50=normal 100=white\r\n\t} else if (shapeCount > 50) {\r\n\t\trandomL = rollRange(10, 1); //0=black 50=normal 100=white\r\n\t} else {\r\n\t\trandomL = rollRange(20, 1); //0=black 50=normal 100=white\r\n\t}\r\n\treturn `hsl(${randomH},${randomS}%,${randomL}%)`;\r\n};\r\n\r\n//rotate image functions\r\n//rotate image functions\r\n//rotate image functions\r\n//rotate image functions\r\n\r\n// const img = new Image();\r\n// img.src = \"https://i.stack.imgur.com/C7qq2.png?s=328&g=1\";\r\n// img.onload = () => { requestAnimationFrame(mainLoop) } // start when loaded\r\n// const ctx = canvas.getContext(\"2d\");\r\n\r\n// function drawImageRotated(img, x, y, scale, rot) {\r\n//   ctx.setTransform(scale, 0, 0, scale, x, y);\r\n//   ctx.rotate(rot);\r\n//   ctx.drawImage(img, -img.width / 2, -img.height / 2);\r\n//   ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n// }\r\n\r\n// function mainLoop(time) {\r\n//   ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n//   drawImageRotated(img,canvas.width / 2, canvas.height / 2, 0.5, time / 500);\r\n//   requestAnimationFrame(mainLoop);\r\n// }\r\n\r\n//rotate image functions\r\n//rotate image functions\r\n//rotate image functions\r\n//rotate image functions\r\n\r\nexport {\r\n\troll,\r\n\trollRange,\r\n\tcoinFlip,\r\n\tcreateCanvasTemplate,\r\n\tcreateCanvasDraw,\r\n\tclear,\r\n\trandomColor,\r\n\tlightColor,\r\n\tdarkColor,\r\n};\r\n","import { roll, coinFlip } from '../../utilities.js';\r\n\r\nconst getDrawType = (inputs) => {\r\n\tconst forceType = inputs.drawType ? inputs.drawType : null;\r\n\tconst loopCycle = (word) => {\r\n\t\teval(`inputs.${word}All = ${coinFlip()}`);\r\n\r\n\t\tif (!eval(`inputs.${word}All`)) {\r\n\t\t\teval(`inputs.${word}RandomLoops = ${coinFlip()}`);\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!eval(`inputs.${word}RandomLoops`)) {\r\n\t\t\teval(`inputs.${word}Individual = ${coinFlip()}`);\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!eval(`inputs.${word}Individual`)) {\r\n\t\t\tloopCycle(word);\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\tconst chaos = () => {\r\n\t\tinputs.fillSwitch = true;\r\n\t\tinputs.strokeSwitch = true;\r\n\t\tloopCycle('clear');\r\n\t\tloopCycle('fill');\r\n\t\tloopCycle('fillColor');\r\n\t\tloopCycle('stroke');\r\n\t\tloopCycle('strokeColor');\r\n\t\tloopCycle('strokeWidth');\r\n\t};\r\n\tconst strokeOnly = () => {\r\n\t\tinputs.fillSwitch = true;\r\n\t\tinputs.strokeSwitch = true;\r\n\t\t// loopCycle('clear');\r\n\t\tinputs.clearIndividual = true;\r\n\t\tinputs.strokeAll = true;\r\n\t\tloopCycle('strokeColor');\r\n\t\tloopCycle('strokeWidth');\r\n\t};\r\n\tconst custom = () => {};\r\n\tconst fillOnly = () => {\r\n\t\tinputs.fillSwitch = true;\r\n\t\tinputs.clearAll = true;\r\n\t\tinputs.fillAll = true;\r\n\t\tloopCycle('fillColor');\r\n\t\t// fillColorRandomLoops = true;\r\n\t};\r\n\tconst fillAndStroke = () => {\r\n\t\tinputs.fillSwitch = true;\r\n\t\tinputs.strokeSwitch = true;\r\n\t\tinputs.fillAll = true;\r\n\t\tinputs.strokeAll = true;\r\n\t\tloopCycle('clear');\r\n\t\tloopCycle('strokeColor');\r\n\t\tloopCycle('fillColor');\r\n\t};\r\n\tconst individual = () => {\r\n\t\tinputs.fillSwitch = true;\r\n\t\tinputs.strokeSwitch = true;\r\n\t\tinputs.clearIndividual = true;\r\n\t\tinputs.fillIndividual = true;\r\n\t\tinputs.fillColorIndividual = true;\r\n\t\tinputs.strokeIndividual = true;\r\n\t\tinputs.strokeColorIndividual = true;\r\n\t\tinputs.strokeWidthIndividual = true;\r\n\t};\r\n\tconst outline = () => {\r\n\t\tinputs.customBackgroundSwitch = true;\r\n\t\tinputs.customBackgroundColor = '#fff';\r\n\t\tinputs.customStrokeColor = '#000';\r\n\t\tinputs.blendMode = 'source-over';\r\n\t\tinputs.maxShapeCount = 50;\r\n\t\tinputs.customShape = 'noLine';\r\n\r\n\t\tinputs.strokeSwitch = true;\r\n\t\tinputs.fillSwitch = false;\r\n\t\tinputs.fillAll = true;\r\n\t\tinputs.strokeAll = true;\r\n\t\tinputs.clearAll = true;\r\n\t\t// inputs.clearRandomLoops = true;\r\n\t\tinputs.strokeColorAll = true;\r\n\t\tinputs.strokeWidthAll = true;\r\n\t};\r\n\tif (forceType && forceType !== 'random') {\r\n\t\tif (forceType === 'custom') return inputs;\r\n\t\teval(`${forceType}()`);\r\n\t} else {\r\n\t\tconst dice = roll(5);\r\n\t\tswitch (dice) {\r\n\t\t\tcase 1:\r\n\t\t\t\tstrokeOnly();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tfillOnly();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tfillAndStroke();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tindividual();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tchaos();\r\n\t\t\t\tbreak;\r\n\t\t\t// case 6:\r\n\t\t\t// \toutline();\r\n\t\t\t// \tbreak;\r\n\t\t\t// case 7:\r\n\t\t\t// \tcustom();\r\n\t\t\t// \tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('error in getDrawType');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn inputs;\r\n};\r\n\r\nexport default getDrawType;\r\n","import React from 'react';\r\n\r\nconst Card = ({ image }) => {\r\n\tconst handleClick = (event) => {\r\n\t\tconsole.log('clicked');\r\n\t\t//open modal with large image\r\n\t};\r\n\treturn (\r\n\t\t<figure className='card' onClick={handleClick}>\r\n\t\t\t<img src={image} alt='generated design image' />\r\n\t\t</figure>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Card from './card/Card';\r\n\r\nconst Sequence = ({ sequence }) => {\r\n\tconst handleMouseEnter = (event) => {\r\n\t\tconsole.log(event.relatedTarget);\r\n\t\tconsole.log(event);\r\n\t\tconst id = event.target.id;\r\n\t\tswitch (id) {\r\n\t\t\tcase 'sequenceLeft':\r\n\t\t\t\tconsole.log('sequence left, mouse enter');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sequenceRight':\r\n\t\t\t\tconsole.log('sequence right, mouse enter');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('default in sequence case');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tconsole.log();\r\n\t};\r\n\tconst handleMouseLeave = (event) => {\r\n\t\tconst id = event.target.id;\r\n\t\tswitch (id) {\r\n\t\t\tcase 'sequenceLeft':\r\n\t\t\t\tconsole.log('sequence left, mouse leave');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sequenceRight':\r\n\t\t\t\tconsole.log('sequence right, mouse leave');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('default in sequence case');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tconsole.log();\r\n\t};\r\n\t// const handleLeftHover = (event) => {\r\n\t// \tconsole.log('leftHover');\r\n\t// };\r\n\t// const handleRightHover = (event) => {\r\n\t// \tconsole.log('rightHover');\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<section id='sequence'>\r\n\t\t\t<div\r\n\t\t\t\tid='sequenceLeft'\r\n\t\t\t\tclassName='sequenceScrolls'\r\n\t\t\t\tonMouseEnter={handleMouseEnter}\r\n\t\t\t\tonMouseLeave={handleMouseLeave}\r\n\t\t\t>\r\n\t\t\t\t<span className='arrow'></span>\r\n\t\t\t</div>\r\n\t\t\t<div className='cardContainer'>\r\n\t\t\t\t{sequence.map((card, index) => (\r\n\t\t\t\t\t<Card key={`card${index}`} image={card} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tid='sequenceRight'\r\n\t\t\t\tclassName='sequenceScrolls'\r\n\t\t\t\tonMouseEnter={handleMouseEnter}\r\n\t\t\t\tonMouseLeave={handleMouseLeave}\r\n\t\t\t>\r\n\t\t\t\t<span className='arrow'></span>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Sequence;\r\n// create a none overflow\r\n// add hover areas to scroll through\r\n","import React, { useState } from 'react';\r\nimport Sequence from './sequence/Sequence';\r\n\r\nconst Head = ({ sequence }) => {\r\n\tconst [showSequence, setShowSequence] = useState(false);\r\n\r\n\tconst handleSequence = (event) => {\r\n\t\tsetShowSequence(!showSequence);\r\n\t};\r\n\treturn (\r\n\t\t<header id='head'>\r\n\t\t\t<section className='headContainer'>\r\n\t\t\t\t<h1>randomDraw</h1>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='btns toggleSequence'\r\n\t\t\t\t\tonClick={handleSequence}\r\n\t\t\t\t>\r\n\t\t\t\t\tsequence\r\n\t\t\t\t</button>\r\n\t\t\t\t<img id='randomDrawSequence' />\r\n\t\t\t</section>\r\n\t\t\t{showSequence && <Sequence sequence={sequence} />}\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Head;\r\n","const cloneObj = (obj) => {\r\n\treturn JSON.parse(JSON.stringify(obj));\r\n};\r\nconst clearEmpties = (obj) => {\r\n\tfor (let key in obj) {\r\n\t\tif (!obj[key] || typeof obj[key] !== 'object') {\r\n\t\t\t//remove strings null and undefined\r\n\t\t\tif (\r\n\t\t\t\tobj[key] === undefined ||\r\n\t\t\t\tobj[key] === null ||\r\n\t\t\t\tobj[key] === false ||\r\n\t\t\t\tobj[key] === ''\r\n\t\t\t) {\r\n\t\t\t\tdelete obj[key];\r\n\t\t\t}\r\n\t\t\tcontinue; // If null or not an object, skip to the next iteration\r\n\t\t}\r\n\t\t// The property is an object\r\n\t\tclearEmpties(obj[key]); // <-- Make a recursive call on the nested object\r\n\t\tif (Object.keys(obj[key]).length === 0) {\r\n\t\t\tdelete obj[key]; // The object had no properties, so delete that property\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n};\r\nconst writeInputCode = (obj) => {\r\n\tclearEmpties(obj);\r\n\tconst tab = `  `;\r\n\tlet html = `randomDraw(${JSON.stringify(obj, null, tab)});`;\r\n\treturn html;\r\n};\r\n\r\nconst resetDefaults = (\r\n\tstate,\r\n\tadjustState,\r\n\tadjustDimensions,\r\n\tadjustBoxState,\r\n\tadjustMandalaState\r\n) => {\r\n\t// const state = cloneObj(inputState);\r\n\tconsole.log('in resetDefaults');\r\n\tconsole.log('testing for infinite loop');\r\n\t// ======= dimensions adjustments\r\n\t// ~~~~~~~~~~~~~~~ reset default values of typeOfDrawer\r\n\tif (state.typeOfDrawer && state.typeOfDrawer === 'random') {\r\n\t\tadjustState({ typeOfDrawer: null });\r\n\t}\r\n\t// ~~~~~~~~~~~~~~~ reset default values of typeOfDrawer\r\n\t// ~~~~~~~~~~~~~~~ reset default values of width and height\r\n\tif (state.dimensions) {\r\n\t\tif (state.dimensions.width === 500) {\r\n\t\t\tadjustDimensions({ width: null });\r\n\t\t}\r\n\t\tif (state.dimensions.height === 500) {\r\n\t\t\tadjustDimensions({ height: null });\r\n\t\t}\r\n\t}\r\n\t// ~~~~~~~~~~~~~~~ reset default values of width and height\r\n\t// ======= dimensions adjustments\r\n\t// ======= boxDrawObj adjustments\r\n\tif (state.boxDrawObj) {\r\n\t\tif (state.boxDrawObj.boxCount && state.boxDrawObj.boxCount === 10) {\r\n\t\t\tadjustBoxState({ boxCount: null });\r\n\t\t}\r\n\t\t// ~~~~~~~~~~~~~~~ off 'choose' toggle remove color value\r\n\t\tif (state.boxDrawObj.primaryToggle) {\r\n\t\t\tif (\r\n\t\t\t\tstate.boxDrawObj.primaryToggle === 'default' ||\r\n\t\t\t\tstate.boxDrawObj.primaryToggle === 'random'\r\n\t\t\t) {\r\n\t\t\t\t//remove toggle\r\n\t\t\t\tif (state.boxDrawObj.primaryToggle === 'default') {\r\n\t\t\t\t\tadjustBoxState({ primaryToggle: null });\r\n\t\t\t\t}\r\n\t\t\t\t//remove color\r\n\t\t\t\tif (state.boxDrawObj.primaryColor) {\r\n\t\t\t\t\tadjustBoxState({ primaryColor: null });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (state.boxDrawObj.secondaryToggle) {\r\n\t\t\tif (\r\n\t\t\t\tstate.boxDrawObj.secondaryToggle === 'default' ||\r\n\t\t\t\tstate.boxDrawObj.secondaryToggle === 'random'\r\n\t\t\t) {\r\n\t\t\t\t//remove toggle\r\n\t\t\t\tif (state.boxDrawObj.secondaryToggle === 'default') {\r\n\t\t\t\t\tadjustBoxState({ secondaryToggle: null });\r\n\t\t\t\t}\r\n\t\t\t\t//remove color\r\n\t\t\t\tif (state.boxDrawObj.secondaryColor) {\r\n\t\t\t\t\tadjustBoxState({ secondaryColor: null });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (state.boxDrawObj.backgroundToggle) {\r\n\t\t\tif (\r\n\t\t\t\tstate.boxDrawObj.backgroundToggle === 'default' ||\r\n\t\t\t\tstate.boxDrawObj.backgroundToggle === 'random'\r\n\t\t\t) {\r\n\t\t\t\t//remove toggle\r\n\t\t\t\tif (state.boxDrawObj.backgroundToggle === 'default') {\r\n\t\t\t\t\tadjustBoxState({ backgroundToggle: null });\r\n\t\t\t\t}\r\n\t\t\t\t//remove color\r\n\t\t\t\tif (state.boxDrawObj.backgroundColor) {\r\n\t\t\t\t\tadjustBoxState({ backgroundColor: null });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// ~~~~~~~~~~~~~~~ off 'choose' toggle remove color value\r\n\t\t// ~~~~~~~~~~~~~~~ if color is same as default, remove property\r\n\t\tif (\r\n\t\t\tstate.boxDrawObj.primaryColor &&\r\n\t\t\tstate.boxDrawObj.primaryColor === '#000000'\r\n\t\t) {\r\n\t\t\tadjustBoxState({ primaryColor: null });\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.boxDrawObj.secondaryColor &&\r\n\t\t\tstate.boxDrawObj.secondaryColor === '#8C00FF'\r\n\t\t) {\r\n\t\t\tadjustBoxState({ secondaryColor: null });\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.boxDrawObj.backgroundColor &&\r\n\t\t\tstate.boxDrawObj.backgroundColor === '#FFFFFF00'\r\n\t\t) {\r\n\t\t\tadjustBoxState({ backgroundColor: null });\r\n\t\t}\r\n\t\t// ~~~~~~~~~~~~~~~ if color is same as default, remove property\r\n\t\t// ~~~~~~~~~~~~~~~ reset drawStyle default\r\n\t\tif (state.boxDrawObj.drawStyle === 'random') {\r\n\t\t\tadjustBoxState({ drawStyle: null });\r\n\t\t}\r\n\t\t// ======= boxDrawObj adjustments\r\n\t}\r\n\t// ======= mandalaDrawObj adjustments\r\n\tif (state.mandalaDrawObj) {\r\n\t\t// ~~~~~~~~~~~~~~~ reset drawType\r\n\t\tif (state.mandalaDrawObj.drawType) {\r\n\t\t\tif (state.mandalaDrawObj.drawType === 'random') {\r\n\t\t\t\tadjustMandalaState({ drawType: null });\r\n\t\t\t} else if (state.mandalaDrawObj.drawType !== 'custom') {\r\n\t\t\t\t//delete all mods in <MandalaCustomDrawOptions />\r\n\t\t\t\tstate.mandalaDrawObj.clearAll &&\r\n\t\t\t\t\tadjustMandalaState({ clearAll: false });\r\n\t\t\t\tstate.mandalaDrawObj.clearRandomLoops &&\r\n\t\t\t\t\tadjustMandalaState({ clearRandomLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.clearIndividualLoops &&\r\n\t\t\t\t\tadjustMandalaState({ clearIndividualLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.fillAll &&\r\n\t\t\t\t\tadjustMandalaState({ fillAll: false });\r\n\t\t\t\tstate.mandalaDrawObj.fillRandomLoops &&\r\n\t\t\t\t\tadjustMandalaState({ fillRandomLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.fillIndividualLoops &&\r\n\t\t\t\t\tadjustMandalaState({ fillIndividualLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.fillColorAll &&\r\n\t\t\t\t\tadjustMandalaState({ fillColorAll: false });\r\n\t\t\t\tstate.mandalaDrawObj.fillColorRandomLoops &&\r\n\t\t\t\t\tadjustMandalaState({ fillColorRandomLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.fillColorIndividualLoops &&\r\n\t\t\t\t\tadjustMandalaState({ fillColorIndividualLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeAll &&\r\n\t\t\t\t\tadjustMandalaState({ strokeAll: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeRandomLoops &&\r\n\t\t\t\t\tadjustMandalaState({ strokeRandomLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeIndividualLoops &&\r\n\t\t\t\t\tadjustMandalaState({ strokeIndividualLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeColorAll &&\r\n\t\t\t\t\tadjustMandalaState({ strokeColorAll: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeColorRandomLoops &&\r\n\t\t\t\t\tadjustMandalaState({ strokeColorRandomLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeColorIndividualLoops &&\r\n\t\t\t\t\tadjustMandalaState({ strokeColorIndividualLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeWidthAll &&\r\n\t\t\t\t\tadjustMandalaState({ strokeWidthAll: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeWidthRandomLoops &&\r\n\t\t\t\t\tadjustMandalaState({ strokeWidthRandomLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeWidthIndividualLoops &&\r\n\t\t\t\t\tadjustMandalaState({ strokeWidthIndividualLoops: false });\r\n\t\t\t\t// ~~~~~~~~~~~~~~~ reset drawType\r\n\t\t\t\t// ~~~~~~~~~~~~~~~ reset drawType insides\r\n\t\t\t} else if (state.mandalaDrawObj.drawType === 'custom') {\r\n\t\t\t\tif (state.mandalaDrawObj.customBackgroundSwitch === false) {\r\n\t\t\t\t\tadjustMandalaState({\r\n\t\t\t\t\t\tcustomBackgroundSwitch: null,\r\n\t\t\t\t\t\tchooseBackgroundColor: null,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// ~~~~~~~~~~~~~~~ reset drawType insides\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.mandalaDrawObj.shapeType &&\r\n\t\t\tstate.mandalaDrawObj.shapeType === 'random'\r\n\t\t) {\r\n\t\t\tadjustMandalaState({ shapeType: null });\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.mandalaDrawObj.blendMode &&\r\n\t\t\tstate.mandalaDrawObj.blendMode === 'default'\r\n\t\t) {\r\n\t\t\tadjustMandalaState({ blendMode: null });\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.mandalaDrawObj.loopCount &&\r\n\t\t\tstate.mandalaDrawObj.loopCount === 5\r\n\t\t) {\r\n\t\t\tadjustMandalaState({ loopCount: null });\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.mandalaDrawObj.minShapeSize &&\r\n\t\t\tstate.mandalaDrawObj.minShapeSize === 20\r\n\t\t) {\r\n\t\t\tadjustMandalaState({ minShapeSize: null });\r\n\t\t}\r\n\t\t// if (\r\n\t\t// \tstate.mandalaDrawObj.maxShapeSize &&\r\n\t\t// \tstate.mandalaDrawObj.maxShapeSize === 200\r\n\t\t// ) {\r\n\t\t// \tadjustMandalaState({ maxShapeSize: null });\r\n\t\t// }\r\n\t\tif (\r\n\t\t\tstate.mandalaDrawObj.minShapeCount &&\r\n\t\t\tstate.mandalaDrawObj.minShapeCount === 4\r\n\t\t) {\r\n\t\t\tadjustMandalaState({ minShapeCount: null });\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.mandalaDrawObj.maxShapeCount &&\r\n\t\t\tstate.mandalaDrawObj.maxShapeCount === 200\r\n\t\t) {\r\n\t\t\tadjustMandalaState({ maxShapeCount: null });\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.mandalaDrawObj.minPathRadius &&\r\n\t\t\tstate.mandalaDrawObj.minPathRadius === 20\r\n\t\t) {\r\n\t\t\tadjustMandalaState({ minPathRadius: null });\r\n\t\t}\r\n\t\t// if (\r\n\t\t// \tstate.mandalaDrawObj.maxPathRadius &&\r\n\t\t// \tstate.mandalaDrawObj.maxPathRadius === 200\r\n\t\t// ) {\r\n\t\t// \tadjustMandalaState({ maxPathRadius: null });\r\n\t\t// }\r\n\r\n\t\t// ~~~~~~~~~~~~~~~ reset loopCount\r\n\r\n\t\t// ======= mandalaDrawObj adjustments\r\n\t}\r\n\t// return state;\r\n};\r\n\r\nconst checkSequenceSize = (sequence, setSequence, maxSize = 20) => {\r\n\tif (sequence.length > maxSize - 1) {\r\n\t\tconst adjustedArr = [...sequence];\r\n\t\tsequence.shift();\r\n\t\tsetSequence([...adjustedArr]);\r\n\t}\r\n};\r\nexport {\r\n\tcloneObj,\r\n\tclearEmpties,\r\n\twriteInputCode,\r\n\tresetDefaults,\r\n\tcheckSequenceSize,\r\n};\r\n","import React from 'react';\r\nimport { cloneObj, writeInputCode } from '../../functions/functions.js';\r\n\r\nconst CodeInjector = ({ state }) => {\r\n\t//get code\r\n\tlet displayCode = cloneObj(state);\r\n\t// clearEmpties(displayCode);\r\n\tdisplayCode = writeInputCode(displayCode);\r\n\t// console.log(displayCode);\r\n\r\n\treturn (\r\n\t\t<section id='codeInjectionContainer'>\r\n\t\t\t<pre>\r\n\t\t\t\t<code className='codeInjection'>{displayCode}</code>\r\n\t\t\t</pre>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default CodeInjector;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nconst initialState = {\r\n\tboxCount: 10,\r\n\tchoosePrimaryColor: '#000000',\r\n\tchooseSecondaryColor: '#8C00FF',\r\n\tchooseBackgroundColor: '#FFFFFF00',\r\n};\r\n\r\nconst BoxDropDownMarkUp = ({ adjustBoxState }) => {\r\n\tconst [input, setInput] = useState(initialState);\r\n\tconst [activePrimary, setActivePrimary] = useState(\r\n\t\t'defaultPrimaryColorBtn'\r\n\t);\r\n\tconst [activeSecondary, setActiveSecondary] = useState(\r\n\t\t'defaultSecondaryColorBtn'\r\n\t);\r\n\tconst [activeBackground, setActiveBackground] = useState(\r\n\t\t'defaultBackgroundColorBtn'\r\n\t);\r\n\tconst [activeStyle, setActiveStyle] = useState('random');\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('refresh dropdown');\r\n\t// \t//prevent input state refreshing component,\r\n\t// }, []);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\t// debugger;\r\n\t\tlet value = event.target.value;\r\n\t\tlet keyName = event.target.id;\r\n\t\tif (keyName === 'boxCount') {\r\n\t\t\tvalue = Number(value);\r\n\t\t\tadjustBoxState({ [keyName]: value });\r\n\t\t}\r\n\t\tsetInput({\r\n\t\t\t...input,\r\n\t\t\t[keyName]: value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleBtns = (event) => {\r\n\t\t// adjustBoxState([event.target.name], event.target.value);\r\n\t\tconst id = event.target.id;\r\n\t\t// let colorInput = null;\r\n\t\tswitch (id) {\r\n\t\t\tcase 'defaultPrimaryColorBtn':\r\n\t\t\t\tsetActivePrimary(id);\r\n\t\t\t\tadjustBoxState({ primaryToggle: 'default' });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'randomPrimaryColorBtn':\r\n\t\t\t\tsetActivePrimary(id);\r\n\t\t\t\tadjustBoxState({ primaryToggle: 'random' });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'choosePrimaryColorBtn':\r\n\t\t\t\tsetActivePrimary(id);\r\n\t\t\t\tadjustBoxState({\r\n\t\t\t\t\tprimaryToggle: 'choose',\r\n\t\t\t\t\tprimaryColor: input.choosePrimaryColor,\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'defaultSecondaryColorBtn':\r\n\t\t\t\tsetActiveSecondary(id);\r\n\t\t\t\tadjustBoxState({ secondaryToggle: 'default' });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'chooseSecondaryColorBtn':\r\n\t\t\t\tsetActiveSecondary(id);\r\n\t\t\t\tadjustBoxState({\r\n\t\t\t\t\tsecondaryToggle: 'choose',\r\n\t\t\t\t\tsecondaryColor: input.chooseSecondaryColor,\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'defaultBackgroundColorBtn':\r\n\t\t\t\tsetActiveBackground(id);\r\n\t\t\t\tadjustBoxState({ backgroundToggle: 'default' });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'randomBackgroundColorBtn':\r\n\t\t\t\tsetActiveBackground(id);\r\n\t\t\t\tadjustBoxState({ backgroundToggle: 'random' });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'chooseBackgroundColorBtn':\r\n\t\t\t\tsetActiveBackground(id);\r\n\t\t\t\tadjustBoxState({\r\n\t\t\t\t\tbackgroundToggle: 'choose',\r\n\t\t\t\t\tbackgroundColor: input.chooseBackgroundColor,\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('error in handleBtns');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleStyleBtns = (event) => {\r\n\t\tconst word = event.target.innerText;\r\n\t\t// let colorInput = null;\r\n\t\tconst convertedWord =\r\n\t\t\tword.charAt(0).toLowerCase() + word.replace(/\\s/g, '').slice(1);\r\n\t\tsetActiveStyle(convertedWord);\r\n\t\tadjustBoxState({ drawStyle: convertedWord });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section id='boxSubControls'>\r\n\t\t\t<div className='separatorContainer'>\r\n\t\t\t\t<div className='separators boxCountSeparator'>\r\n\t\t\t\t\t<p>Box Count:</p>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='boxCount'\r\n\t\t\t\t\t\tclassName='inputField'\r\n\t\t\t\t\t\tname='boxCount'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.boxCount}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tstep='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='separators'>\r\n\t\t\t\t\t<p>Primary Color:</p>\r\n\t\t\t\t\t<div className='primaryColorContainer btnContainer'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='defaultPrimaryColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactivePrimary === 'defaultPrimaryColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDefault\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='randomPrimaryColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactivePrimary === 'randomPrimaryColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tRandom\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='choosePrimaryColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactivePrimary === 'choosePrimaryColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tChoose\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='choosePrimaryColor'\r\n\t\t\t\t\t\t\t\tname='choosePrimaryColor'\r\n\t\t\t\t\t\t\t\tclassName='colorInput'\r\n\t\t\t\t\t\t\t\ttype='color'\r\n\t\t\t\t\t\t\t\tvalue={input.choosePrimaryColor}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='separators'>\r\n\t\t\t\t\t<p>Secondary Color:</p>\r\n\t\t\t\t\t<div className='secondaryColorContainer btnContainer'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='defaultSecondaryColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveSecondary === 'defaultSecondaryColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDefault Random\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='chooseSecondaryColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveSecondary === 'chooseSecondaryColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tChoose\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='chooseSecondaryColor'\r\n\t\t\t\t\t\t\t\tclassName='colorInput'\r\n\t\t\t\t\t\t\t\ttype='color'\r\n\t\t\t\t\t\t\t\tvalue={input.chooseSecondaryColor}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='separators'>\r\n\t\t\t\t\t<p>Background Color:</p>\r\n\t\t\t\t\t<div className='backgroundColorContainer btnContainer'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='defaultBackgroundColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveBackground === 'defaultBackgroundColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDefault\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='randomBackgroundColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveBackground === 'randomBackgroundColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tRandom\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='chooseBackgroundColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveBackground === 'chooseBackgroundColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tChoose\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='chooseBackgroundColor'\r\n\t\t\t\t\t\t\t\tclassName='colorInput'\r\n\t\t\t\t\t\t\t\ttype='color'\r\n\t\t\t\t\t\t\t\tvalue={input.chooseBackgroundColor}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='styleContainer btnContainer'>\r\n\t\t\t\t<p>Styles</p>\r\n\t\t\t\t<div className='btnContainer'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='randomBtn'\r\n\t\t\t\t\t\tclassName={`btns boxPatternBtns ${\r\n\t\t\t\t\t\t\tactiveStyle === 'random' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleStyleBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRandom\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='fullCloneBtn'\r\n\t\t\t\t\t\tclassName={`btns boxPatternBtns ${\r\n\t\t\t\t\t\t\tactiveStyle === 'fullClone' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleStyleBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tFull Clone\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='fullReflectBtn'\r\n\t\t\t\t\t\tclassName={`btns boxPatternBtns ${\r\n\t\t\t\t\t\t\tactiveStyle === 'fullReflect' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleStyleBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tFull Reflect\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='fullRotateBtn'\r\n\t\t\t\t\t\tclassName={`btns boxPatternBtns ${\r\n\t\t\t\t\t\t\tactiveStyle === 'fullRotate' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleStyleBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tFull Rotate\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='halfReflectBtn'\r\n\t\t\t\t\t\tclassName={`btns boxPatternBtns ${\r\n\t\t\t\t\t\t\tactiveStyle === 'halfReflect' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleStyleBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tHalf Reflect\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='noPatternBtn'\r\n\t\t\t\t\t\tclassName={`btns boxPatternBtns ${\r\n\t\t\t\t\t\t\tactiveStyle === 'noPattern' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleStyleBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNo Pattern\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default BoxDropDownMarkUp;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nconst initialState = {\r\n\tclear: {\r\n\t\tclearAll: false,\r\n\t\tclearRandomLoops: false,\r\n\t\tclearIndividual: false,\r\n\t},\r\n\tfill: {\r\n\t\tfillAll: false,\r\n\t\tfillRandomLoops: false,\r\n\t\tfillIndividual: false,\r\n\t},\r\n\tfillColor: {\r\n\t\tfillColorAll: false,\r\n\t\tfillColorRandomLoops: false,\r\n\t\tfillColorIndividual: false,\r\n\t},\r\n\tstroke: {\r\n\t\tstrokeAll: false,\r\n\t\tstrokeRandomLoops: false,\r\n\t\tstrokeIndividual: false,\r\n\t},\r\n\tstrokeColor: {\r\n\t\tstrokeColorAll: false,\r\n\t\tstrokeColorRandomLoops: false,\r\n\t\tstrokeColorIndividual: false,\r\n\t},\r\n\tstrokeWidth: {\r\n\t\tstrokeWidthAll: false,\r\n\t\tstrokeWidthRandomLoops: false,\r\n\t\tstrokeWidthIndividual: false,\r\n\t},\r\n};\r\n\r\nconst MandalaCustomDrawOptions = ({ adjustMandalaState }) => {\r\n\tconst [input, setInput] = useState(initialState);\r\n\tconst [showBackgroundOptions, setShowBackgroundOptions] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\r\n\t\t\t'refresh on input change so it does not take two submits to show'\r\n\t\t);\r\n\t\tadjustMandalaState({ ...collapseState(input) });\r\n\t\t//prevent input state refreshing component,\r\n\t}, [input]);\r\n\r\n\tconst collapseState = (state) => {\r\n\t\tlet collapsedState = {};\r\n\t\tfor (let lvl1Key in state) {\r\n\t\t\tfor (let lvl2Key in state[lvl1Key]) {\r\n\t\t\t\t// if (state[lvl1Key][lvl2Key]) {\r\n\t\t\t\tcollapsedState[lvl2Key] = state[lvl1Key][lvl2Key];\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn collapsedState;\r\n\t};\r\n\tconst handleChange = (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tlet id = event.target.id;\r\n\t\tlet name = event.target.name;\r\n\r\n\t\tif (event.target.checked && input[name][id]) {\r\n\t\t\tevent.target.checked = false;\r\n\t\t\tsetInput({\r\n\t\t\t\t...input,\r\n\t\t\t\t[name]: {\r\n\t\t\t\t\t...initialState[name],\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// //update this state\r\n\t\t\tsetInput({\r\n\t\t\t\t...input,\r\n\t\t\t\t[name]: {\r\n\t\t\t\t\t...initialState[name],\r\n\t\t\t\t\t[id]: true,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section id='customContainer'>\r\n\t\t\t<section className='customInputs'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='clearAll'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='clear'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='all'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='clearRandomLoops'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='clear'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='random'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='clearIndividual'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='clear'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='individual'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='fillAll'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='fill'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='all'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='fillRandomLoops'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='fill'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='random'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='fillIndividual'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='fill'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='individual'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='fillColorAll'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='fillColor'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='all'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='fillColorRandomLoops'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='fillColor'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='random'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='fillColorIndividual'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='fillColor'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='individual'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeAll'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='stroke'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='all'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeRandomLoops'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='stroke'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='random'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeIndividual'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='stroke'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='individual'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeColorAll'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='strokeColor'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='all'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeColorRandomLoops'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='strokeColor'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='random'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeColorIndividual'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='strokeColor'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='individual'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeWidthAll'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='strokeWidth'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='all'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeWidthRandomLoops'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='strokeWidth'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='random'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeWidthIndividual'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='strokeWidth'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='individual'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t<section className='customLabels'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor='clearAll'>Clear All Loops:</label>\r\n\t\t\t\t\t<label htmlFor='clearRandomLoops'>\r\n\t\t\t\t\t\tClear Random Loops:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor='clearIndividual'>Clear Individual:</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor='fillAll'>Fill All Loops:</label>\r\n\t\t\t\t\t<label htmlFor='fillRandomLoops'>Fill Random Loops:</label>\r\n\t\t\t\t\t<label htmlFor='fillIndividual'>Fill Individual:</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor='fillColorAll'>Fill Color All Loops:</label>\r\n\t\t\t\t\t<label htmlFor='fillColorRandomLoops'>\r\n\t\t\t\t\t\tFill Color Random Loops:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor='fillColorIndividual'>\r\n\t\t\t\t\t\tFill Color Individual:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor='strokeAll'>Stroke All Loops:</label>\r\n\t\t\t\t\t<label htmlFor='strokeRandomLoops'>\r\n\t\t\t\t\t\tStroke Random Loops:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor='strokeIndividual'>Stroke Individual:</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor='strokeColorAll'>\r\n\t\t\t\t\t\tStroke Color All Loops:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor='strokeColorRandomLoops'>\r\n\t\t\t\t\t\tStroke Color Random Loops:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor='strokeColorIndividual'>\r\n\t\t\t\t\t\tStroke Color Individual:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor='strokeWidthAll'>\r\n\t\t\t\t\t\tStroke Width All Loops:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor='strokeWidthRandomLoops'>\r\n\t\t\t\t\t\tStroke Width Random Loops:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor='strokeWidthIndividual'>\r\n\t\t\t\t\t\tStroke Width Individual:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default MandalaCustomDrawOptions;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nconst initialState = {\r\n\tloopCount: 5,\r\n\tminShapeSize: 20,\r\n\tmaxShapeSize: '',\r\n\tminShapeCount: 4,\r\n\tmaxShapeCount: 200,\r\n\tminPathRadius: 20,\r\n\tmaxPathRadius: '',\r\n\tblendMode: 'random',\r\n\tchooseBackgroundColor: '#8C00FF',\r\n};\r\n\r\nconst MandalaDetailOptions = ({ adjustMandalaState }) => {\r\n\tconst [input, setInput] = useState(initialState);\r\n\tconst [showBackgroundOptions, setShowBackgroundOptions] = useState(false);\r\n\r\n\tconst handleReset = (event) => {\r\n\t\tsetInput({\r\n\t\t\t...initialState,\r\n\t\t});\r\n\t\tadjustMandalaState({\r\n\t\t\tloopCount: '',\r\n\t\t\tminShapeSize: '',\r\n\t\t\tmaxShapeSize: '',\r\n\t\t\tminShapeCount: '',\r\n\t\t\tmaxShapeCount: '',\r\n\t\t\tminPathRadius: '',\r\n\t\t\tmaxPathRadius: '',\r\n\t\t\tblendMode: '',\r\n\t\t\tchooseBackgroundColor: '',\r\n\t\t});\r\n\t};\r\n\tconst handleChange = (event) => {\r\n\t\tlet keyName = event.target.id;\r\n\t\tlet value = event.target.value;\r\n\t\t//defaults\r\n\r\n\t\tif (initialState[keyName] === value) {\r\n\t\t\tadjustMandalaState({ [keyName]: null });\r\n\t\t\tsetInput({\r\n\t\t\t\t...input,\r\n\t\t\t\t[keyName]: value,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//custom\r\n\t\tif (keyName === 'customBackgroundSwitch') {\r\n\t\t\tconst checked = event.target.checked;\r\n\t\t\tadjustMandalaState({\r\n\t\t\t\t[keyName]: checked,\r\n\t\t\t\tchooseBackgroundColor: input.chooseBackgroundColor,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//update this state\r\n\t\tif (keyName !== 'blendMode') {\r\n\t\t\tvalue = Number(value);\r\n\t\t}\r\n\t\tsetInput({\r\n\t\t\t...input,\r\n\t\t\t[keyName]: value,\r\n\t\t});\r\n\r\n\t\tif (keyName === 'chooseBackgroundColor') return;\r\n\t\t//update main state\r\n\t\tadjustMandalaState({ [keyName]: value });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section id='detailsContainer'>\r\n\t\t\t<header>\r\n\t\t\t\tDetails: <span>(some of these values are calculated)</span>\r\n\t\t\t</header>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<section className='detailsInputs'>\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tname='blendMode'\r\n\t\t\t\t\t\tid='blendMode'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value='random'>random</option>\r\n\t\t\t\t\t\t<option value='difference'>difference</option>\r\n\t\t\t\t\t\t<option value='screen'>screen</option>\r\n\t\t\t\t\t\t<option value='multiply'>multiply</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='loopCount'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='loopCount'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.loopCount}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='minShapeSize'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='minShapeSize'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.minShapeSize}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='maxShapeSize'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='maxShapeSize'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.maxShapeSize}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tplaceholder='200'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='minShapeCount'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='minShapeCount'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.minShapeCount}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='maxShapeCount'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='maxShapeCount'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.maxShapeCount}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='minPathRadius'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='minPathRadius'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.minPathRadius}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='maxPathRadius'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='maxPathRadius'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.maxPathRadius}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tplaceholder='500'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid='chooseBackgroundColor'\r\n\t\t\t\t\t\t\tname='chooseBackgroundColor'\r\n\t\t\t\t\t\t\ttype='color'\r\n\t\t\t\t\t\t\tvalue={input.chooseBackgroundColor}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid='customBackgroundSwitch'\r\n\t\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\t\tname='customBackgroundSwitch'\r\n\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section className='detailsLabels'>\r\n\t\t\t\t\t<label htmlFor='blendMode'>Blend Mode</label>\r\n\t\t\t\t\t<label htmlFor='loopCount'>Loop Count</label>\r\n\t\t\t\t\t<label htmlFor='minShapeSize'>Min Shape Size</label>\r\n\t\t\t\t\t<label htmlFor='maxShapeSize'>Max Shape Size</label>\r\n\t\t\t\t\t<label htmlFor='minShapeCount'>Min Shape Count</label>\r\n\t\t\t\t\t<label htmlFor='maxShapeCount'>Max Shape Count</label>\r\n\t\t\t\t\t<label htmlFor='minPathRadius'>Min Path Radius</label>\r\n\t\t\t\t\t<label htmlFor='maxPathRadius'>Max Path Radius</label>\r\n\t\t\t\t\t<label htmlFor='backgroundColor'>Background Color</label>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section className='detailsReset'>\r\n\t\t\t\t\t<button className='resetBtn' onClick={handleReset}>\r\n\t\t\t\t\t\tReset\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default MandalaDetailOptions;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport MandalaCustomDrawOptions from './mandalaCustomDrawOptions/MandalaCustomDrawOptions';\r\nimport MandalaDetailOptions from './mandalaDetailsOptions/MandalaDetailOptions';\r\nconst initialState = {\r\n\tdrawType: 'random',\r\n};\r\n\r\nconst MandalaDropDownMarkUp = ({ adjustMandalaState }) => {\r\n\tconst [input, setInput] = useState({});\r\n\tconst [showDrawOptions, setShowDrawOptions] = useState(false);\r\n\tconst [activeStyle, setActiveStyle] = useState('random');\r\n\r\n\tconst [activeShapeType, setActiveShapeType] = useState('shapeTypeRandom');\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('mandalaDropDownMarkUp useEffect');\r\n\t// }, [input]);\r\n\r\n\tconst handleBtns = (event) => {\r\n\t\t// adjustBoxState([event.target.name], event.target.value);\r\n\t\tconst id = event.target.id;\r\n\t\t// let colorInput = null;\r\n\t\tswitch (id) {\r\n\t\t\tcase 'shapeTypeRandom':\r\n\t\t\t\tsetActiveShapeType(id);\r\n\t\t\t\tadjustMandalaState({ shapeType: null });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'shapeTypeSame':\r\n\t\t\t\tsetActiveShapeType(id);\r\n\t\t\t\tadjustMandalaState({ shapeType: 'same' });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'shapeTypeIncrement':\r\n\t\t\t\tsetActiveShapeType(id);\r\n\t\t\t\tadjustMandalaState({ shapeType: 'increment' });\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\tconst handleTypeBtns = (event) => {\r\n\t\tconst name = event.target.name;\r\n\t\tlet id = event.target.id;\r\n\r\n\t\tif (name === 'drawType' && id === 'mandalaCustom') {\r\n\t\t\tid = 'custom';\r\n\t\t\tsetShowDrawOptions(true);\r\n\t\t} else {\r\n\t\t\tsetShowDrawOptions(false);\r\n\t\t}\r\n\t\tif (id === 'random') id = null;\r\n\t\tsetInput({\r\n\t\t\t...input,\r\n\t\t\tdrawType: id === 'random' ? null : id,\r\n\t\t});\r\n\t\tsetActiveStyle(id);\r\n\t\t//place as default;\r\n\t\tadjustMandalaState({ drawType: id });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section id='mandalaSubControls'>\r\n\t\t\t<div className='separatorContainer'>\r\n\t\t\t\t<div className='separators'>\r\n\t\t\t\t\t<MandalaDetailOptions\r\n\t\t\t\t\t\tadjustMandalaState={adjustMandalaState}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='separators drawTypeSeparator'>\r\n\t\t\t\t\t<p>Draw Type:</p>\r\n\t\t\t\t\t<div className='btnContainer'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='random'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns boxPatternBtns ${\r\n\t\t\t\t\t\t\t\tactiveStyle === 'random' ? 'active' : ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tRandom\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='strokeOnly'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveStyle === 'strokeOnly' ? 'active' : ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tStroke Only\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='fillOnly'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveStyle === 'fillOnly' ? 'active' : ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tFill Only\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='fillAndStroke'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveStyle === 'fillAndStroke' ? 'active' : ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tFill and Stroke\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='individual'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveStyle === 'individual' ? 'active' : ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tIndividual\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='chaos'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveStyle === 'chaos' ? 'active' : ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tChaos\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='outline'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveStyle === 'outline' ? 'active' : ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tOutline\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='mandalaCustom'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns custom ${\r\n\t\t\t\t\t\t\t\tactiveStyle === 'custom' ? 'active' : ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<p>Custom</p>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='separators  customSeparator'>\r\n\t\t\t\t\t{showDrawOptions ? (\r\n\t\t\t\t\t\t<MandalaCustomDrawOptions\r\n\t\t\t\t\t\t\tadjustMandalaState={adjustMandalaState}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='separators closingSeparator'>\r\n\t\t\t\t<p>Shape Type:</p>\r\n\t\t\t\t<div className='shapeType btnContainer'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='shapeTypeRandom'\r\n\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\tactiveShapeType === 'shapeTypeRandom'\r\n\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRandom\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='shapeTypeSame'\r\n\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\tactiveShapeType === 'shapeTypeSame' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSame\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='shapeTypeIncrement'\r\n\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\tactiveShapeType === 'shapeTypeIncrement'\r\n\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tIncrement\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default MandalaDropDownMarkUp;\r\n// <div className='separators'>\r\n// \t<p>\r\n// \t\tDraw Type:\r\n// \t\t<select\r\n// \t\t\tid='drawType'\r\n// \t\t\tclassName='mandalaInputs'\r\n// \t\t\tname='drawType'\r\n// \t\t\tonChange={handleSelectionChange}\r\n// \t\t>\r\n// \t\t\t<option value='random'>Random</option>\r\n// \t\t\t<option value='strokeOnly'>Stroke Only</option>\r\n// \t\t\t<option value='fillOnly'>Fill Only</option>\r\n// \t\t\t<option value='fillAndStroke'>Fill And Stroke</option>\r\n// \t\t\t<option value='individual'>Individual</option>\r\n// \t\t\t<option value='chaos'>Chaos</option>\r\n// \t\t\t<option value='outline'>Outline</option>\r\n// \t\t\t<option value='custom'>Custom</option>\r\n// \t\t</select>\r\n// \t</p>\r\n// </div>;\r\n\r\n// <div className='styleContainer btnContainer'>\r\n// \t<p>Styles</p>\r\n// \t<div className='btnContainer'>\r\n// \t\t<button\r\n// \t\t\tid='randomBtn'\r\n// \t\t\tclassName={`btns boxPatternBtns ${\r\n// \t\t\t\tactiveStyle === 'random' ? 'active' : ''\r\n// \t\t\t}`}\r\n// \t\t\tonClick={handleStyleBtns}\r\n// \t\t>\r\n// \t\t\tRandom\r\n// \t\t</button>\r\n// \t\t<button\r\n// \t\t\tid='fullCloneBtn'\r\n// \t\t\tclassName={`btns boxPatternBtns ${\r\n// \t\t\t\tactiveStyle === 'fullClone' ? 'active' : ''\r\n// \t\t\t}`}\r\n// \t\t\tonClick={handleStyleBtns}\r\n// \t\t>\r\n// \t\t\tFull Clone\r\n// \t\t</button>\r\n// \t\t<button\r\n// \t\t\tid='fullReflectBtn'\r\n// \t\t\tclassName={`btns boxPatternBtns ${\r\n// \t\t\t\tactiveStyle === 'fullReflect' ? 'active' : ''\r\n// \t\t\t}`}\r\n// \t\t\tonClick={handleStyleBtns}\r\n// \t\t>\r\n// \t\t\tFull Reflect\r\n// \t\t</button>\r\n// \t\t<button\r\n// \t\t\tid='fullRotateBtn'\r\n// \t\t\tclassName={`btns boxPatternBtns ${\r\n// \t\t\t\tactiveStyle === 'fullRotate' ? 'active' : ''\r\n// \t\t\t}`}\r\n// \t\t\tonClick={handleStyleBtns}\r\n// \t\t>\r\n// \t\t\tFull Rotate\r\n// \t\t</button>\r\n// \t\t<button\r\n// \t\t\tid='halfReflectBtn'\r\n// \t\t\tclassName={`btns boxPatternBtns ${\r\n// \t\t\t\tactiveStyle === 'halfReflect' ? 'active' : ''\r\n// \t\t\t}`}\r\n// \t\t\tonClick={handleStyleBtns}\r\n// \t\t>\r\n// \t\t\tHalf Reflect\r\n// \t\t</button>\r\n// \t\t<button\r\n// \t\t\tid='noPatternBtn'\r\n// \t\t\tclassName={`btns boxPatternBtns ${\r\n// \t\t\t\tactiveStyle === 'noPattern' ? 'active' : ''\r\n// \t\t\t}`}\r\n// \t\t\tonClick={handleStyleBtns}\r\n// \t\t>\r\n// \t\t\tNo Pattern\r\n// \t\t</button>\r\n// \t</div>\r\n// </div>;\r\n","import React, { useState, Fragment } from 'react';\r\nimport BoxDropDownMarkUp from './boxDropdownMarkUp/BoxDropDownMarkUp';\r\nimport MandalaDropDownMarkUp from './mandalaDropDownMarkUp/MandalaDropDownMarkUp';\r\n// import { randomDraw } from '../../randomDraw';\r\n\r\nconst initialInputState = {\r\n\twidth: 500,\r\n\theight: 500,\r\n};\r\n\r\nconst Controls = ({\r\n\tdraw,\r\n\tstate,\r\n\tadjustState,\r\n\tadjustDimensions,\r\n\tadjustBoxState,\r\n\tadjustMandalaState,\r\n}) => {\r\n\tconst [input, setInput] = useState(initialInputState);\r\n\tconst [active, setActive] = useState('randomDrawerBtn');\r\n\tconst [dropDown, setDropDown] = useState(false);\r\n\tconst [whichDropDown, setWhichDropDown] = useState(''); //'draw', 'mandala'\r\n\r\n\tconst handleBtnClick = (event) => {\r\n\t\tlet id = event.target.id;\r\n\t\tswitch (id) {\r\n\t\t\tcase 'boxDrawerBtn':\r\n\t\t\t\tsetActive(id);\r\n\t\t\t\tadjustState({ typeOfDrawer: 'boxDraw' });\r\n\t\t\t\tsetDropDown(true);\r\n\t\t\t\tsetWhichDropDown('box');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mandalaDrawerBtn':\r\n\t\t\t\tsetActive(id);\r\n\t\t\t\tadjustState({ typeOfDrawer: 'mandalaDraw' });\r\n\t\t\t\tsetDropDown(true);\r\n\t\t\t\tsetWhichDropDown('mandala');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tsetActive('randomDrawerBtn');\r\n\t\t\t\tadjustState({ typeOfDrawer: 'random' });\r\n\t\t\t\tsetDropDown(false);\r\n\t\t\t\tconsole.log('error in handleBtnClick', id);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\tconst handleChange = (event) => {\r\n\t\tsetInput({\r\n\t\t\t...input,\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t});\r\n\t\tadjustDimensions({ [event.target.name]: Number(event.target.value) });\r\n\t};\r\n\r\n\tlet dropDownMarkUp;\r\n\tswitch (whichDropDown) {\r\n\t\tcase 'box':\r\n\t\t\tdropDownMarkUp = (\r\n\t\t\t\t<BoxDropDownMarkUp adjustBoxState={adjustBoxState} />\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'mandala':\r\n\t\t\tdropDownMarkUp = (\r\n\t\t\t\t<MandalaDropDownMarkUp\r\n\t\t\t\t\tadjustMandalaState={adjustMandalaState}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tdropDownMarkUp = null;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<section id='controls'>\r\n\t\t\t<section className='mainControls'>\r\n\t\t\t\t<div className='drawerContainer btnContainer'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='randomDrawerBtn'\r\n\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\tactive === 'randomDrawerBtn' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleBtnClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRandom Draw\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='boxDrawerBtn'\r\n\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\tactive === 'boxDrawerBtn' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleBtnClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBox Draw\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='mandalaDrawerBtn'\r\n\t\t\t\t\t\tclassName='btns'\r\n\t\t\t\t\t\tonClick={handleBtnClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tMandala Draw\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tDimensions:\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='dimensionWidth'\r\n\t\t\t\t\t\tname='width'\r\n\t\t\t\t\t\tclassName='inputField'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.width}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tstep='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\tx\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='dimensionHeight'\r\n\t\t\t\t\t\tname='height'\r\n\t\t\t\t\t\tclassName='inputField'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.height}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tstep='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</p>\r\n\t\t\t</section>\r\n\t\t\t{dropDown ? dropDownMarkUp : null}\r\n\t\t</section>\r\n\t);\r\n};\r\nexport default Controls;\r\n","import React from 'react';\r\n\r\nconst MainDisplay = () => {\r\n\treturn <section id='randomDraw'>Drawing will go here</section>;\r\n};\r\nexport default MainDisplay;\r\n","import { roll } from '../utilities.js';\r\n\r\nconst boxDraw = (boxDrawObj, xCoord = 0, yCoord = 0) => {\r\n\tconst usingMatrix = boxDrawObj.matrix;\r\n\r\n\tif (xCoord === null && yCoord === null) {\r\n\t\tfor (let matrixRow = 0; matrixRow < usingMatrix.length; matrixRow++) {\r\n\t\t\tfor (\r\n\t\t\t\tlet matrixColumn = 0;\r\n\t\t\t\tmatrixColumn < usingMatrix[matrixRow].length;\r\n\t\t\t\tmatrixColumn++\r\n\t\t\t) {\r\n\t\t\t\tconst pixel = usingMatrix[matrixRow][matrixColumn];\r\n\t\t\t\tconst calcX = pixel.xStart + xCoord;\r\n\t\t\t\tconst calcY = pixel.yStart + yCoord;\r\n\r\n\t\t\t\tboxDrawObj.ctx.fillStyle = pixel.color;\r\n\t\t\t\tboxDrawObj.ctx.fillRect(\r\n\t\t\t\t\tcalcX,\r\n\t\t\t\t\tcalcY,\r\n\t\t\t\t\tboxDrawObj.pixelWidth,\r\n\t\t\t\t\tboxDrawObj.pixelHeight\r\n\t\t\t\t);\r\n\t\t\t\tboxDrawObj.ctx.strokeStyle = `rgb(255, 255, 255)`;\r\n\t\t\t\tboxDrawObj.ctx.strokeRect(\r\n\t\t\t\t\tcalcX,\r\n\t\t\t\t\tcalcY,\r\n\t\t\t\t\tboxDrawObj.pixelWidth,\r\n\t\t\t\t\tboxDrawObj.pixelHeight\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tfor (let matrixRow = 0; matrixRow < usingMatrix.length; matrixRow++) {\r\n\t\tfor (\r\n\t\t\tlet matrixColumn = 0;\r\n\t\t\tmatrixColumn < usingMatrix[matrixRow].length;\r\n\t\t\tmatrixColumn++\r\n\t\t) {\r\n\t\t\tconst pixel = usingMatrix[matrixRow][matrixColumn];\r\n\t\t\tconst calcX = pixel.xStart + xCoord;\r\n\t\t\tconst calcY = pixel.yStart + yCoord;\r\n\r\n\t\t\tif (xCoord === null && yCoord === null) {\r\n\t\t\t\tboxDrawObj.ctx.fillStyle = pixel.color;\r\n\t\t\t\tboxDrawObj.ctx.fillRect(\r\n\t\t\t\t\tcalcX,\r\n\t\t\t\t\tcalcY,\r\n\t\t\t\t\tboxDrawObj.pixelWidth,\r\n\t\t\t\t\tboxDrawObj.pixelHeight\r\n\t\t\t\t);\r\n\t\t\t\tboxDrawObj.ctx.strokeStyle = `rgb(255, 255, 255)`;\r\n\t\t\t\tboxDrawObj.ctx.strokeRect(\r\n\t\t\t\t\tcalcX,\r\n\t\t\t\t\tcalcY,\r\n\t\t\t\t\tboxDrawObj.pixelWidth,\r\n\t\t\t\t\tboxDrawObj.pixelHeight\r\n\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tboxDrawObj.ctx2.fillStyle = pixel.color;\r\n\t\t\tboxDrawObj.ctx2.fillRect(\r\n\t\t\t\tcalcX,\r\n\t\t\t\tcalcY,\r\n\t\t\t\tboxDrawObj.pixelWidth,\r\n\t\t\t\tboxDrawObj.pixelHeight\r\n\t\t\t);\r\n\t\t\tboxDrawObj.ctx2.strokeStyle = `rgb(255, 255, 255)`;\r\n\t\t\tboxDrawObj.ctx2.strokeRect(\r\n\t\t\t\tcalcX,\r\n\t\t\t\tcalcY,\r\n\t\t\t\tboxDrawObj.pixelWidth,\r\n\t\t\t\tboxDrawObj.pixelHeight\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn usingMatrix;\r\n};\r\nclass PixelNode {\r\n\tconstructor(xStart, yStart, color = '#020') {\r\n\t\tthis.xStart = xStart;\r\n\t\tthis.yStart = yStart;\r\n\t\tthis.color = color;\r\n\t}\r\n}\r\nclass InputNode {\r\n\tconstructor(ctx, ctx2, matrix, pixelWidth, pixelHeight) {\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.ctx2 = ctx2;\r\n\t\tthis.matrix = matrix;\r\n\t\tthis.pixelWidth = pixelWidth;\r\n\t\tthis.pixelHeight = pixelHeight;\r\n\t}\r\n}\r\n\r\nconst whatToPlace = (boxDrawObj, xStart, yStart) => {\r\n\tconst rollColor = roll(3);\r\n\tlet pixel = new PixelNode(xStart, yStart);\r\n\tswitch (rollColor) {\r\n\t\tcase 1:\r\n\t\t\tpixel.color = boxDrawObj.backgroundColor;\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tpixel.color = boxDrawObj.primaryColor;\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tpixel.color = boxDrawObj.secondaryColor;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error, sorry');\r\n\t}\r\n\treturn pixel;\r\n};\r\n\r\nconst createPixelMap = (boxDrawObj, patternOverride) => {\r\n\tconst newMatrix = [];\r\n\tif (patternOverride === 'noPattern') {\r\n\t\t//this will cycle through y axis on pixel height\r\n\t\tfor (\r\n\t\t\tlet y = 0;\r\n\t\t\ty < boxDrawObj.canvasHeight;\r\n\t\t\ty += boxDrawObj.pixelHeight\r\n\t\t) {\r\n\t\t\tlet row = [];\r\n\t\t\t//this will cycle through x axis on pixel width\r\n\t\t\tfor (\r\n\t\t\t\tlet x = 0;\r\n\t\t\t\tx < boxDrawObj.canvasWidth;\r\n\t\t\t\tx += boxDrawObj.pixelWidth\r\n\t\t\t) {\r\n\t\t\t\t// console.log(`${x} starting pixel draw,`);\r\n\t\t\t\tconst pixel = whatToPlace(boxDrawObj, x, y);\r\n\t\t\t\trow.push(pixel);\r\n\t\t\t}\r\n\t\t\tnewMatrix.push(row);\r\n\t\t}\r\n\t} else {\r\n\t\t//this will cycle through y axis on pixel height\r\n\t\tfor (\r\n\t\t\tlet y = 0;\r\n\t\t\ty < boxDrawObj.drawSectionHeight;\r\n\t\t\ty += boxDrawObj.pixelHeight\r\n\t\t) {\r\n\t\t\tlet row = [];\r\n\t\t\t//this will cycle through x axis on pixel width\r\n\t\t\tfor (\r\n\t\t\t\tlet x = 0;\r\n\t\t\t\tx < boxDrawObj.drawSectionWidth;\r\n\t\t\t\tx += boxDrawObj.pixelWidth\r\n\t\t\t) {\r\n\t\t\t\t// console.log(`${x} starting pixel draw,`);\r\n\t\t\t\tconst pixel = whatToPlace(boxDrawObj, x, y);\r\n\t\t\t\trow.push(pixel);\r\n\t\t\t}\r\n\t\t\tnewMatrix.push(row);\r\n\t\t}\r\n\t}\r\n\treturn newMatrix;\r\n};\r\n\r\nconst combineMatrixTopHalf = (matrix1, matrix2) => {\r\n\tlet combinedMatrix = [];\r\n\tfor (let i = 0; i < matrix1.length; i++) {\r\n\t\tconst combine = [...matrix1[i], ...matrix2[i]];\r\n\t\tcombinedMatrix.push(combine);\r\n\t}\r\n\treturn combinedMatrix;\r\n};\r\nconst combineMatrixLeftHalf = (matrix1, matrix2) => {\r\n\treturn [...matrix1, ...matrix2];\r\n};\r\n\r\nconst findQuadrantOrder = (boxDrawObj) => {\r\n\t// console.log(boxDrawObj);\r\n\tlet order = [];\r\n\tlet quadrantArray = [];\r\n\r\n\twhile (order.length < 4) {\r\n\t\tlet test = roll(4);\r\n\t\tif (!order.includes(test)) {\r\n\t\t\tlet quadrant = {};\r\n\t\t\tswitch (test) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tquadrant.x = 0;\r\n\t\t\t\t\tquadrant.y = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tquadrant.x = boxDrawObj.drawSectionWidth;\r\n\t\t\t\t\tquadrant.y = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tquadrant.x = boxDrawObj.drawSectionWidth;\r\n\t\t\t\t\tquadrant.y = boxDrawObj.drawSectionHeight;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tquadrant.x = 0;\r\n\t\t\t\t\tquadrant.y = boxDrawObj.drawSectionHeight;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log('error in findQuadrantOrder');\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\torder.push(test);\r\n\t\t\tquadrantArray.push(quadrant);\r\n\t\t}\r\n\t}\r\n\treturn quadrantArray;\r\n};\r\n\r\nexport {\r\n\tboxDraw,\r\n\tPixelNode,\r\n\tInputNode,\r\n\tcreatePixelMap,\r\n\tcombineMatrixTopHalf,\r\n\tcombineMatrixLeftHalf,\r\n\tfindQuadrantOrder,\r\n};\r\n","import { PixelNode } from '../boxDrawingUtilities.js';\r\n\r\nconst clone = (boxDrawObj, xOffset = 0, yOffset = 0) => {\r\n\tconst usingMatrix = boxDrawObj.matrix;\r\n\tlet xPos = xOffset;\r\n\tlet yPos = yOffset;\r\n\tlet tempMatrix = [];\r\n\r\n\tfor (let matrixRow = 0; matrixRow < usingMatrix.length; matrixRow++) {\r\n\t\tlet rowArr = [];\r\n\t\tfor (\r\n\t\t\tlet matrixColumn = 0;\r\n\t\t\tmatrixColumn < usingMatrix[matrixRow].length;\r\n\t\t\tmatrixColumn++\r\n\t\t) {\r\n\t\t\tconst pixel = usingMatrix[matrixRow][matrixColumn];\r\n\t\t\tconst newPixel = new PixelNode(xPos, yPos, pixel.color);\r\n\r\n\t\t\trowArr.push(newPixel);\r\n\t\t\txPos += boxDrawObj.pixelWidth;\r\n\t\t}\r\n\t\ttempMatrix.push(rowArr);\r\n\t\txPos = xOffset;\r\n\t\tyPos += boxDrawObj.pixelHeight;\r\n\t}\r\n\tyPos = yOffset;\r\n\r\n\treturn tempMatrix;\r\n};\r\n\r\nexport default clone;\r\n","import { boxDraw, InputNode } from '../boxDrawingUtilities.js';\r\nimport clone from '../singles/clone.js';\r\n\r\nconst fullClone = (boxDrawObj) => {\r\n\tlet cloneMatrix1 = [];\r\n\tlet cloneMatrix2 = [];\r\n\tlet cloneMatrix3 = [];\r\n\r\n\tlet inputNode = new InputNode(\r\n\t\tboxDrawObj.ctx,\r\n\t\tboxDrawObj.ctx2,\r\n\t\tboxDrawObj.matrix,\r\n\t\tboxDrawObj.pixelWidth,\r\n\t\tboxDrawObj.pixelHeight\r\n\t);\r\n\r\n\tboxDraw(boxDrawObj);\r\n\r\n\tcloneMatrix1 = clone(boxDrawObj, boxDrawObj.drawSectionWidth, 0);\r\n\r\n\tinputNode.matrix = cloneMatrix1;\r\n\r\n\tboxDraw(inputNode);\r\n\r\n\tcloneMatrix2 = clone(\r\n\t\tboxDrawObj,\r\n\t\tboxDrawObj.drawSectionWidth,\r\n\t\tboxDrawObj.drawSectionHeight\r\n\t);\r\n\r\n\tinputNode.matrix = cloneMatrix2;\r\n\r\n\tboxDraw(inputNode);\r\n\r\n\tcloneMatrix3 = clone(boxDrawObj, 0, boxDrawObj.drawSectionHeight);\r\n\r\n\tinputNode.matrix = cloneMatrix3;\r\n\r\n\tboxDraw(inputNode);\r\n};\r\n\r\nexport default fullClone;\r\n","import { PixelNode } from '../boxDrawingUtilities.js';\r\n\r\nconst rotateClockwise = (boxDrawObj, xOffset = 0, yOffset = 0) => {\r\n\tconst useMatrix = boxDrawObj.matrix;\r\n\tlet xPos = xOffset;\r\n\tlet yPos = yOffset;\r\n\tlet tempMatrix = [];\r\n\tlet rotatedMatrix = [];\r\n\r\n\tfor (let column = 0; column < useMatrix[0].length; column++) {\r\n\t\tlet rowArr = [];\r\n\r\n\t\tfor (let row = useMatrix.length - 1; row >= 0; row--) {\r\n\t\t\tconst pixel = useMatrix[row][column];\r\n\t\t\tconst newPixel = new PixelNode(xPos, yPos, pixel.color);\r\n\r\n\t\t\trowArr.push(newPixel);\r\n\t\t\txPos += boxDrawObj.pixelWidth;\r\n\t\t}\r\n\t\ttempMatrix.push(rowArr);\r\n\t\txPos = xOffset;\r\n\t\tyPos += boxDrawObj.pixelHeight;\r\n\t}\r\n\tyPos = yOffset;\r\n\trotatedMatrix = [...tempMatrix];\r\n\r\n\treturn rotatedMatrix;\r\n};\r\n\r\nconst rotateCounterClockwise = (boxDrawObj, xOffset = 0, yOffset = 0) => {\r\n\tconst useMatrix = boxDrawObj.matrix;\r\n\t//loop columns reverse\r\n\t//loop over rows in order\r\n\tlet xPos = xOffset;\r\n\tlet yPos = yOffset;\r\n\tlet tempMatrix = [];\r\n\tlet rotatedMatrix = [];\r\n\r\n\tfor (let column = useMatrix[0].length - 1; column >= 0; column--) {\r\n\t\tlet rowArr = [];\r\n\r\n\t\tfor (let row = 0; row < useMatrix.length; row++) {\r\n\t\t\tconst pixel = useMatrix[row][column];\r\n\t\t\tconst newPixel = new PixelNode(xPos, yPos, pixel.color);\r\n\r\n\t\t\trowArr.push(newPixel);\r\n\t\t\txPos += boxDrawObj.pixelWidth;\r\n\t\t}\r\n\t\ttempMatrix.push(rowArr);\r\n\t\txPos = xOffset;\r\n\t\tyPos += boxDrawObj.pixelHeight;\r\n\t}\r\n\tyPos = yOffset;\r\n\trotatedMatrix = [...tempMatrix];\r\n\r\n\treturn rotatedMatrix;\r\n};\r\n\r\nexport { rotateClockwise, rotateCounterClockwise };\r\n","import { rotateClockwise } from '../singles/rotate.js';\r\nimport { boxDraw, InputNode } from '../boxDrawingUtilities.js';\r\n\r\nconst fullRotate = (boxDrawObj) => {\r\n\tlet rotatedMatrix1 = [];\r\n\tlet rotatedMatrix2 = [];\r\n\tlet rotatedMatrix3 = [];\r\n\r\n\tboxDraw(boxDrawObj);\r\n\r\n\tlet inputNode = new InputNode(\r\n\t\tboxDrawObj.ctx,\r\n\t\tboxDrawObj.ctx2,\r\n\t\tboxDrawObj.matrix,\r\n\t\tboxDrawObj.pixelWidth,\r\n\t\tboxDrawObj.pixelHeight\r\n\t);\r\n\r\n\trotatedMatrix1 = rotateClockwise(boxDrawObj);\r\n\r\n\tinputNode.matrix = rotatedMatrix1;\r\n\r\n\tboxDraw(inputNode, boxDrawObj.drawSectionWidth, 0);\r\n\r\n\trotatedMatrix2 = rotateClockwise(inputNode);\r\n\r\n\tinputNode.matrix = rotatedMatrix2;\r\n\r\n\tboxDraw(\r\n\t\tinputNode,\r\n\t\tboxDrawObj.drawSectionWidth,\r\n\t\tboxDrawObj.drawSectionHeight\r\n\t);\r\n\r\n\trotatedMatrix3 = rotateClockwise(inputNode);\r\n\r\n\tinputNode.matrix = rotatedMatrix3;\r\n\r\n\tboxDraw(inputNode, 0, boxDrawObj.drawSectionHeight);\r\n};\r\n\r\nexport default fullRotate;\r\n","import { PixelNode } from '../boxDrawingUtilities.js';\r\n\r\nconst reflectVerticalAxis = (boxDrawObj, xOffset = 0, yOffset = 0) => {\r\n\tconst useMatrix = boxDrawObj.matrix;\r\n\tlet xPos = xOffset;\r\n\tlet yPos = yOffset;\r\n\tlet tempMatrix = [];\r\n\tfor (let row = 0; row < useMatrix.length; row++) {\r\n\t\tlet rowArr = [];\r\n\t\tfor (let column = useMatrix[row].length - 1; column >= 0; column--) {\r\n\t\t\tconst pixel = useMatrix[row][column];\r\n\t\t\tconst newPixel = new PixelNode(xPos, yPos, pixel.color);\r\n\r\n\t\t\trowArr.push(newPixel);\r\n\t\t\txPos += boxDrawObj.pixelWidth;\r\n\t\t}\r\n\t\ttempMatrix.push(rowArr);\r\n\t\txPos = xOffset;\r\n\t\tyPos += boxDrawObj.pixelHeight;\r\n\t}\r\n\tyPos = yOffset;\r\n\r\n\treturn tempMatrix;\r\n};\r\n\r\nconst reflectHorizontalAxis = (boxDrawObj, xOffset = 0, yOffset = 0) => {\r\n\tconst useMatrix = boxDrawObj.matrix;\r\n\tlet xPos = xOffset;\r\n\tlet yPos = yOffset;\r\n\tlet tempMatrix = [];\r\n\tfor (let row = useMatrix.length - 1; row >= 0; row--) {\r\n\t\tlet rowArr = [];\r\n\t\tfor (let column = 0; column < useMatrix[row].length; column++) {\r\n\t\t\tconst pixel = useMatrix[row][column];\r\n\t\t\tconst newPixel = new PixelNode(xPos, yPos, pixel.color);\r\n\r\n\t\t\trowArr.push(newPixel);\r\n\t\t\txPos += boxDrawObj.pixelWidth;\r\n\t\t}\r\n\t\ttempMatrix.push(rowArr);\r\n\t\txPos = xOffset;\r\n\t\tyPos += boxDrawObj.pixelHeight;\r\n\t}\r\n\tyPos = yOffset;\r\n\r\n\treturn tempMatrix;\r\n};\r\n\r\nexport { reflectVerticalAxis, reflectHorizontalAxis };\r\n","import {\r\n\treflectVerticalAxis,\r\n\treflectHorizontalAxis,\r\n} from '../singles/reflect.js';\r\nimport {\r\n\tboxDraw,\r\n\tInputNode,\r\n\tcombineMatrixTopHalf,\r\n} from '../boxDrawingUtilities.js';\r\n\r\nconst fullReflect = (boxDrawObj) => {\r\n\tlet adjustedMatrix = [];\r\n\tlet combinedMatrix = [];\r\n\tlet reflectedMatrix = [];\r\n\r\n\tlet inputNode = new InputNode(\r\n\t\tboxDrawObj.ctx,\r\n\t\tboxDrawObj.ctx2,\r\n\t\tboxDrawObj.matrix,\r\n\t\tboxDrawObj.pixelWidth,\r\n\t\tboxDrawObj.pixelHeight\r\n\t);\r\n\r\n\tboxDraw(inputNode);\r\n\r\n\tadjustedMatrix = reflectVerticalAxis(\r\n\t\tboxDrawObj,\r\n\t\tboxDrawObj.drawSectionWidth,\r\n\t\t0\r\n\t);\r\n\r\n\tinputNode.matrix = adjustedMatrix;\r\n\r\n\tboxDraw(inputNode);\r\n\r\n\tcombinedMatrix = combineMatrixTopHalf(boxDrawObj.matrix, adjustedMatrix);\r\n\r\n\tinputNode.matrix = combinedMatrix;\r\n\r\n\treflectedMatrix = reflectHorizontalAxis(\r\n\t\tinputNode,\r\n\t\t0,\r\n\t\tboxDrawObj.drawSectionHeight\r\n\t);\r\n\r\n\tinputNode.matrix = reflectedMatrix;\r\n\r\n\tboxDraw(inputNode);\r\n};\r\n\r\nexport default fullReflect;\r\n","import { roll } from '../../utilities.js';\r\nimport {\r\n\tboxDraw,\r\n\tInputNode,\r\n\tcombineMatrixLeftHalf,\r\n\tcombineMatrixTopHalf,\r\n} from '../boxDrawingUtilities.js';\r\nimport clone from '../singles/clone.js';\r\nimport {\r\n\treflectVerticalAxis,\r\n\treflectHorizontalAxis,\r\n} from '../singles/reflect.js';\r\n\r\nconst halfReflect = (boxDrawObj) => {\r\n\tboxDraw(boxDrawObj);\r\n\tlet clonedMatrix = [];\r\n\tlet combinedMatrix = [];\r\n\tlet reflectedMatrix = [];\r\n\r\n\tlet inputNode = new InputNode(\r\n\t\tboxDrawObj.ctx,\r\n\t\tboxDrawObj.ctx2,\r\n\t\tboxDrawObj.matrix,\r\n\t\tboxDrawObj.pixelWidth,\r\n\t\tboxDrawObj.pixelHeight\r\n\t);\r\n\r\n\tconst quadrantDice = roll(2);\r\n\tswitch (quadrantDice) {\r\n\t\tcase 1:\r\n\t\t\t//horizontal reflect\r\n\t\t\tclonedMatrix = clone(boxDrawObj, boxDrawObj.drawSectionWidth, 0);\r\n\r\n\t\t\tinputNode.matrix = clonedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\r\n\t\t\tcombinedMatrix = combineMatrixTopHalf(\r\n\t\t\t\tboxDrawObj.matrix,\r\n\t\t\t\tclonedMatrix\r\n\t\t\t);\r\n\r\n\t\t\tinputNode.matrix = combinedMatrix;\r\n\r\n\t\t\treflectedMatrix = reflectHorizontalAxis(\r\n\t\t\t\tinputNode,\r\n\t\t\t\t0,\r\n\t\t\t\tboxDrawObj.drawSectionHeight\r\n\t\t\t);\r\n\r\n\t\t\tinputNode.matrix = reflectedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\t//vertical reflect\r\n\t\t\tclonedMatrix = clone(boxDrawObj, 0, boxDrawObj.drawSectionHeight);\r\n\r\n\t\t\tinputNode.matrix = clonedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\r\n\t\t\tcombinedMatrix = combineMatrixLeftHalf(\r\n\t\t\t\tboxDrawObj.matrix,\r\n\t\t\t\tclonedMatrix\r\n\t\t\t);\r\n\r\n\t\t\tinputNode.matrix = combinedMatrix;\r\n\r\n\t\t\treflectedMatrix = reflectVerticalAxis(\r\n\t\t\t\tinputNode,\r\n\t\t\t\tboxDrawObj.drawSectionWidth,\r\n\t\t\t\t0\r\n\t\t\t);\r\n\r\n\t\t\tinputNode.matrix = reflectedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in halfReflect switch');\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nexport default halfReflect;\r\n","import { boxDraw, InputNode, createPixelMap } from '../boxDrawingUtilities.js';\r\n\r\nconst noPattern = (boxDrawObj) => {\r\n\tlet inputNode = new InputNode(\r\n\t\tboxDrawObj.ctx,\r\n\t\tboxDrawObj.ctx2,\r\n\t\tboxDrawObj.matrix,\r\n\t\tboxDrawObj.pixelWidth,\r\n\t\tboxDrawObj.pixelHeight\r\n\t);\r\n\r\n\tlet getMatrix = createPixelMap(boxDrawObj, 'noPattern');\r\n\tinputNode.matrix = getMatrix;\r\n\r\n\tboxDraw(inputNode);\r\n};\r\n\r\nexport default noPattern;\r\n","import { roll } from '../../utilities.js';\r\nimport fullClone from './fullClone.js';\r\nimport fullRotate from './fullRotate.js';\r\nimport fullReflect from './fullReflect.js';\r\nimport halfReflect from './halfReflect.js';\r\nimport noPattern from './noPattern.js';\r\n\r\nconst specials = (boxDrawObj) => {\r\n\tif (!boxDrawObj.drawStyle || boxDrawObj.drawStyle === 'random') {\r\n\t\tconst dice = roll(5);\r\n\t\tswitch (dice) {\r\n\t\t\tcase 1:\r\n\t\t\t\tfullClone(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tfullRotate(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tfullReflect(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\thalfReflect(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tnoPattern(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('error in layout variable');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t} else {\r\n\t\tswitch (boxDrawObj.drawStyle) {\r\n\t\t\tcase 'fullClone':\r\n\t\t\t\tfullClone(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'fullReflect':\r\n\t\t\t\tfullReflect(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'fullRotate':\r\n\t\t\t\tfullRotate(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'halfReflect':\r\n\t\t\t\thalfReflect(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'noPattern':\r\n\t\t\t\tnoPattern(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('error in forcedraw of specials');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default specials;\r\n","import { roll } from '../../utilities.js';\r\nimport {\r\n\tfindQuadrantOrder,\r\n\tboxDraw,\r\n\tInputNode,\r\n} from '../boxDrawingUtilities.js';\r\nimport clone from './clone.js';\r\nimport { reflectVerticalAxis, reflectHorizontalAxis } from './reflect.js';\r\nimport { rotateClockwise, rotateCounterClockwise } from './rotate.js';\r\n\r\nconst singles = (boxDrawObj) => {\r\n\tconst quadrantDice = findQuadrantOrder(boxDrawObj);\r\n\tconst styleDice = [1, roll(3), roll(3), roll(3)];\r\n\r\n\tstyleDice.forEach((number, index) => {\r\n\t\tconst xPos = quadrantDice[index].x;\r\n\t\tconst yPos = quadrantDice[index].y;\r\n\t\tlet adjustedMatrix = [];\r\n\r\n\t\tlet inputNode = new InputNode(\r\n\t\t\tboxDrawObj.ctx,\r\n\t\t\tboxDrawObj.ctx2,\r\n\t\t\tboxDrawObj.matrix,\r\n\t\t\tboxDrawObj.pixelWidth,\r\n\t\t\tboxDrawObj.pixelHeight\r\n\t\t);\r\n\r\n\t\tswitch (number) {\r\n\t\t\tcase 1:\r\n\t\t\t\t//clone\r\n\t\t\t\tadjustedMatrix = clone(boxDrawObj, xPos, yPos);\r\n\r\n\t\t\t\tinputNode.matrix = adjustedMatrix;\r\n\r\n\t\t\t\tboxDraw(inputNode);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\t//reflect\r\n\t\t\t\tconst directionDiceReflect = roll(2); // 1 = vertical axis reflect. 2 = horizontal axis reflect\r\n\r\n\t\t\t\tdirectionDiceReflect === 1\r\n\t\t\t\t\t? (adjustedMatrix = reflectVerticalAxis(\r\n\t\t\t\t\t\t\tboxDrawObj,\r\n\t\t\t\t\t\t\txPos,\r\n\t\t\t\t\t\t\tyPos\r\n\t\t\t\t\t  ))\r\n\t\t\t\t\t: (adjustedMatrix = reflectHorizontalAxis(\r\n\t\t\t\t\t\t\tboxDrawObj,\r\n\t\t\t\t\t\t\txPos,\r\n\t\t\t\t\t\t\tyPos\r\n\t\t\t\t\t  ));\r\n\r\n\t\t\t\tinputNode.matrix = adjustedMatrix;\r\n\r\n\t\t\t\tboxDraw(inputNode);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\t//rotate\r\n\t\t\t\tconst directionDiceRotate = roll(2); // 1 = clockwise rotate. 2 = counter clockwise rotate\r\n\r\n\t\t\t\tdirectionDiceRotate === 1\r\n\t\t\t\t\t? (adjustedMatrix = rotateClockwise(boxDrawObj, xPos, yPos))\r\n\t\t\t\t\t: (adjustedMatrix = rotateCounterClockwise(\r\n\t\t\t\t\t\t\tboxDrawObj,\r\n\t\t\t\t\t\t\txPos,\r\n\t\t\t\t\t\t\tyPos\r\n\t\t\t\t\t  ));\r\n\r\n\t\t\t\tinputNode.matrix = adjustedMatrix;\r\n\r\n\t\t\t\tboxDraw(inputNode);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('error in number variable');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default singles;\r\n","import { roll } from '../../utilities.js';\r\nimport { InputNode } from '../boxDrawingUtilities.js';\r\nimport {\r\n\tboxDraw,\r\n\tcombineMatrixTopHalf,\r\n\tcombineMatrixLeftHalf,\r\n} from '../boxDrawingUtilities.js';\r\nimport clone from '../singles/clone.js';\r\nimport {\r\n\treflectHorizontalAxis,\r\n\treflectVerticalAxis,\r\n} from '../singles/reflect.js';\r\nimport { rotateClockwise, rotateCounterClockwise } from '../singles/rotate.js';\r\n\r\nconst doubles = (boxDrawObj) => {\r\n\tboxDraw(boxDrawObj);\r\n\tconst quadrantDice = roll(2); // 1 = q2. 2 = q3\r\n\tconst styleDice = roll(3); // 1= clone, 2= rotate, 3= reflect\r\n\tconst doubleDice = roll(3); // 1= clone, 2= rotate x2, 3= reflect\r\n\tlet directionDice = 0;\r\n\tlet adjustedMatrix = [];\r\n\r\n\tconst quadrant =\r\n\t\tquadrantDice === 1\r\n\t\t\t? { x: boxDrawObj.drawSectionWidth, y: 0 }\r\n\t\t\t: { x: 0, y: boxDrawObj.drawSectionHeight };\r\n\tconst quadrantDouble =\r\n\t\tquadrantDice === 1\r\n\t\t\t? { x: 0, y: boxDrawObj.drawSectionHeight }\r\n\t\t\t: { x: boxDrawObj.drawSectionWidth, y: 0 };\r\n\r\n\tlet inputNode = new InputNode(\r\n\t\tboxDrawObj.ctx,\r\n\t\tboxDrawObj.ctx2,\r\n\t\tboxDrawObj.matrix,\r\n\t\tboxDrawObj.pixelWidth,\r\n\t\tboxDrawObj.pixelHeight\r\n\t);\r\n\r\n\tswitch (styleDice) {\r\n\t\tcase 1:\r\n\t\t\t//clone\r\n\t\t\tadjustedMatrix = clone(boxDrawObj, quadrant.x, quadrant.y);\r\n\r\n\t\t\tinputNode.matrix = adjustedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\t//rotate\r\n\t\t\tdirectionDice = roll(2); // 1 = clockwise. 2 = counter clockwise\r\n\t\t\tdirectionDice === 1\r\n\t\t\t\t? (adjustedMatrix = rotateClockwise(\r\n\t\t\t\t\t\tinputNode,\r\n\t\t\t\t\t\tquadrant.x,\r\n\t\t\t\t\t\tquadrant.y\r\n\t\t\t\t  ))\r\n\t\t\t\t: (adjustedMatrix = rotateCounterClockwise(\r\n\t\t\t\t\t\tinputNode,\r\n\t\t\t\t\t\tquadrant.x,\r\n\t\t\t\t\t\tquadrant.y\r\n\t\t\t\t  ));\r\n\r\n\t\t\tinputNode.matrix = adjustedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\t//reflect\r\n\r\n\t\t\tdirectionDice = roll(2); // 1 = vertical axis reflect. 2 = horizontal axis reflect\r\n\t\t\tdirectionDice === 1\r\n\t\t\t\t? (adjustedMatrix = reflectVerticalAxis(\r\n\t\t\t\t\t\tinputNode,\r\n\t\t\t\t\t\tquadrant.x,\r\n\t\t\t\t\t\tquadrant.y\r\n\t\t\t\t  ))\r\n\t\t\t\t: (adjustedMatrix = reflectHorizontalAxis(\r\n\t\t\t\t\t\tinputNode,\r\n\t\t\t\t\t\tquadrant.x,\r\n\t\t\t\t\t\tquadrant.y\r\n\t\t\t\t  ));\r\n\r\n\t\t\tinputNode.matrix = adjustedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in style dice variable');\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tlet combinedMatrix = [];\r\n\tquadrantDice === 1\r\n\t\t? (combinedMatrix = combineMatrixTopHalf(\r\n\t\t\t\tboxDrawObj.matrix,\r\n\t\t\t\tadjustedMatrix\r\n\t\t  ))\r\n\t\t: (combinedMatrix = combineMatrixLeftHalf(\r\n\t\t\t\tboxDrawObj.matrix,\r\n\t\t\t\tadjustedMatrix\r\n\t\t  ));\r\n\tlet rotatedMatrix = [];\r\n\tlet reflectedMatrix = [];\r\n\r\n\tinputNode.matrix = combinedMatrix;\r\n\r\n\tswitch (doubleDice) {\r\n\t\tcase 1:\r\n\t\t\t//clone\r\n\r\n\t\t\tboxDraw(inputNode, quadrantDouble.x, quadrantDouble.y);\r\n\t\t\tbreak;\r\n\t\tcase 2: //quadrantDice === 1, combine top\r\n\t\t\t//rotate\r\n\r\n\t\t\trotatedMatrix = rotateClockwise(inputNode);\r\n\t\t\tinputNode.matrix = rotatedMatrix;\r\n\t\t\trotatedMatrix = rotateClockwise(\r\n\t\t\t\tinputNode,\r\n\t\t\t\tquadrantDouble.x,\r\n\t\t\t\tquadrantDouble.y\r\n\t\t\t); // rotate twice\r\n\r\n\t\t\tinputNode.matrix = rotatedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\t\t\tbreak;\r\n\t\tcase 3: // quadrantDice === 1, reflect horizontal : reflect vertical\r\n\t\t\t//reflect\r\n\t\t\treflectedMatrix =\r\n\t\t\t\tquadrantDice === 1\r\n\t\t\t\t\t? reflectHorizontalAxis(\r\n\t\t\t\t\t\t\tinputNode,\r\n\t\t\t\t\t\t\tquadrantDouble.x,\r\n\t\t\t\t\t\t\tquadrantDouble.y\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t: reflectVerticalAxis(\r\n\t\t\t\t\t\t\tinputNode,\r\n\t\t\t\t\t\t\tquadrantDouble.x,\r\n\t\t\t\t\t\t\tquadrantDouble.y\r\n\t\t\t\t\t  );\r\n\r\n\t\t\tinputNode.matrix = reflectedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in style dice variable');\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nexport default doubles;\r\n","import specials from './specials/specials.js';\r\nimport singles from './singles/singles.js';\r\nimport doubles from './doubles/doubles.js';\r\nimport { roll, clear, randomColor } from '../utilities.js';\r\nimport { boxDraw, createPixelMap } from './boxDrawingUtilities.js';\r\n\r\nimport { createCanvasTemplate, createCanvasDraw } from '../utilities.js';\r\n\r\nconst BoxDrawing = (forceDesignObj) => {\r\n\t// if(forceDesignObj)\r\n\tlet { dimensions, boxDrawObj } = forceDesignObj;\r\n\tlet width, height;\r\n\tif (dimensions) {\r\n\t\twidth = dimensions.width;\r\n\t\theight = dimensions.height;\r\n\t}\r\n\r\n\tconst canvasWidth = width ? width : 500;\r\n\tconst canvasHeight = height ? height : 500;\r\n\tconst matrix = [];\r\n\tconst boxCount = boxDrawObj.boxCount || 10;\r\n\tconst pixelWidth = canvasWidth / boxCount || 250;\r\n\tconst pixelHeight = canvasHeight / boxCount || 250;\r\n\tconst drawSectionWidth = Math.floor(canvasWidth / 2);\r\n\tconst drawSectionHeight = Math.floor(canvasHeight / 2);\r\n\r\n\tconst primaryToggle = boxDrawObj.primaryToggle || 'default';\r\n\tconst secondaryToggle = boxDrawObj.secondaryToggle || 'default';\r\n\tconst backgroundToggle = boxDrawObj.backgroundToggle || 'default';\r\n\r\n\tconst [canvasTemplate, ctx] = createCanvasTemplate(\r\n\t\tdrawSectionWidth,\r\n\t\tdrawSectionHeight\r\n\t);\r\n\tconst [canvasDraw, ctx2] = createCanvasDraw(canvasWidth, canvasHeight);\r\n\r\n\tswitch (primaryToggle) {\r\n\t\tcase 'default':\r\n\t\t\tboxDrawObj.primaryColor = '#000000';\r\n\t\t\tbreak;\r\n\t\tcase 'random':\r\n\t\t\tboxDrawObj.primaryColor = randomColor();\r\n\t\t\tbreak;\r\n\t\tcase 'choose':\r\n\t\t\tlet inputColor;\r\n\t\t\tif (!boxDrawObj.primaryColor) {\r\n\t\t\t\tinputColor = '#000000';\r\n\t\t\t} else {\r\n\t\t\t\tinputColor = boxDrawObj.primaryColor;\r\n\t\t\t}\r\n\t\t\tboxDrawObj.primaryColor = inputColor;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in primarytoggle');\r\n\t\t\tboxDrawObj.primaryColor = '#000000';\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tswitch (secondaryToggle) {\r\n\t\tcase 'default':\r\n\t\tcase 'random':\r\n\t\t\tboxDrawObj.secondaryColor = randomColor(); //new color seed on refresh;\r\n\t\t\tbreak;\r\n\t\tcase 'choose':\r\n\t\t\tlet inputColor;\r\n\t\t\tif (!boxDrawObj.secondaryColor) {\r\n\t\t\t\tinputColor = '#8C00FF';\r\n\t\t\t} else {\r\n\t\t\t\tinputColor = boxDrawObj.secondaryColor;\r\n\t\t\t}\r\n\t\t\tboxDrawObj.secondaryColor = inputColor;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in secondaryToggle');\r\n\t\t\tboxDrawObj.secondaryColor = randomColor();\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tswitch (backgroundToggle) {\r\n\t\tcase 'default':\r\n\t\t\tboxDrawObj.backgroundColor = '#ffffff00';\r\n\t\t\tbreak;\r\n\t\tcase 'random':\r\n\t\t\tboxDrawObj.backgroundColor = randomColor();\r\n\t\t\tbreak;\r\n\t\tcase 'choose':\r\n\t\t\tlet inputColor;\r\n\t\t\tif (!boxDrawObj.backgroundColor) {\r\n\t\t\t\tinputColor = '#ffffff00';\r\n\t\t\t} else {\r\n\t\t\t\tinputColor = boxDrawObj.backgroundColor;\r\n\t\t\t}\r\n\t\t\tboxDrawObj.backgroundColor = inputColor;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in backgroundToggle');\r\n\t\t\tboxDrawObj.backgroundColor = '#ffffff00';\r\n\t\t\tbreak;\r\n\t}\r\n\t//build up input obj\r\n\tboxDrawObj = {\r\n\t\t...boxDrawObj,\r\n\t\tcanvasWidth,\r\n\t\tcanvasHeight,\r\n\t\tmatrix,\r\n\t\tboxCount,\r\n\t\tpixelWidth,\r\n\t\tpixelHeight,\r\n\t\tdrawSectionWidth,\r\n\t\tdrawSectionHeight,\r\n\t\tcanvasTemplate,\r\n\t\tctx,\r\n\t\tcanvasDraw,\r\n\t\tctx2,\r\n\t};\r\n\r\n\tif (boxDrawObj.canvasDraw.getContext) {\r\n\t\t//clear previous matrix\r\n\t\tboxDrawObj.matrix = clear(boxDrawObj);\r\n\t\t//create new matrix\r\n\t\tboxDrawObj.matrix = [...createPixelMap(boxDrawObj)];\r\n\r\n\t\tboxDraw(boxDrawObj); // draw on ctx not ctx2\r\n\r\n\t\tswitch (boxDrawObj.drawStyle || 'random') {\r\n\t\t\tcase 'random':\r\n\t\t\t\tlet dice = roll(3);\r\n\t\t\t\tswitch (dice) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tspecials(boxDrawObj);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tsingles(boxDrawObj);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tdoubles(boxDrawObj);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.log('error in layout variable no dice');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tspecials(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t} else {\r\n\t\talert('You need Safari or Firefox 1.5+ to see this demo.');\r\n\t}\r\n\t//convert canvas to an image\r\n\t//return image\r\n\t// return ctx2;\r\n\r\n\tconst dataURL = boxDrawObj.canvasDraw.toDataURL('image/png');\r\n\treturn dataURL;\r\n};\r\n\r\nexport { BoxDrawing };\r\n","import { roll } from '../../utilities.js';\r\nconst getStrokeWidth = (shapeCount) => {\r\n    let dice;\r\n    switch (shapeCount) {\r\n        case shapeCount > 100:\r\n            dice = 1;\r\n            break;\r\n        case shapeCount > 90:\r\n            dice = roll(2);\r\n            break;\r\n        case shapeCount > 60:\r\n            dice = roll(3);\r\n            break;\r\n        case shapeCount > 40:\r\n            dice = roll(4);\r\n            break;\r\n        default:\r\n            dice = roll(5);\r\n            break;\r\n    }\r\n    return dice;\r\n};\r\n\r\nexport default getStrokeWidth;\r\n","import { randomColor, lightColor, darkColor } from '../../utilities.js';\r\n\r\nconst getColorType = (inputs) => {\r\n    if (inputs.clearSwitch) {\r\n        return randomColor();\r\n    }\r\n\r\n    if (inputs.blendMode === 'screen') {\r\n        return darkColor(inputs.shapeCount);\r\n    } else if (inputs.blendMode === 'multiply') {\r\n        return lightColor(inputs.shapeCount);\r\n    } else {\r\n        return randomColor();\r\n    }\r\n    // return inputs;\r\n};\r\nexport default getColorType;\r\n","import { coinFlip } from '../../utilities.js';\r\nimport getStrokeWidth from './_getStrokeWidth.js';\r\nimport getColorType from './_getColorType.js';\r\n\r\nconst checkIndividualSwitches = (type, inputs) => {\r\n    if (!type) {\r\n        console.log('error in checkIndividual switch, no type');\r\n        return inputs;\r\n    }\r\n    if (type === 'clear') {\r\n        if (inputs.clearIndividual) {\r\n            inputs.clearSwitch = coinFlip();\r\n        }\r\n    }\r\n    if (type === 'fill') {\r\n        // if (inputs.fillIndividual) {\r\n        //     inputs.fillSwitch = coinFlip();\r\n        // }\r\n        if (inputs.fillSwitch) {\r\n            if (inputs.fillColorIndividual) {\r\n                inputs.fillColor = getColorType(inputs);\r\n            }\r\n        }\r\n    }\r\n    if (type === 'stroke') {\r\n        // if (inputs.strokeIndividual) {\r\n        //     inputs.strokeSwitch = coinFlip();\r\n        // }\r\n        if (inputs.strokeSwitch) {\r\n            if (inputs.strokeColorIndividual) {\r\n                inputs.strokeColor = getColorType(inputs);\r\n            }\r\n            if (inputs.strokeWidthIndividual) {\r\n                inputs.strokeWidth = getStrokeWidth(inputs.shapeCount);\r\n            }\r\n        }\r\n    }\r\n\r\n    return inputs;\r\n};\r\nexport default checkIndividualSwitches;\r\n","// import { ctx2 } from '../../MandalaDrawing.js';\r\n// import { roll } from '../../../utilities.js';\r\n\r\nconst starburst = (inputs) => {\r\n\t//starburst\r\n\tinputs.ctx2.save();\r\n\tinputs.ctx2.moveTo(inputs.pathRadius - inputs.shapeSize, 0);\r\n\tinputs.ctx2.lineTo(inputs.shapeSize, 0);\r\n\tinputs.ctx2.restore();\r\n\t//starburst\r\n};\r\nconst slant = (inputs) => {\r\n\t//slant\r\n\tinputs.ctx2.save();\r\n\tinputs.ctx2.moveTo(\r\n\t\tinputs.pathRadius - inputs.shapeSize,\r\n\t\tinputs.pathRadius - inputs.shapeSize\r\n\t);\r\n\tinputs.ctx2.lineTo(-inputs.shapeSize / 2, inputs.shapeSize / 2);\r\n\tinputs.ctx2.restore();\r\n\t// ctx2.stroke();\r\n\t//slant\r\n};\r\n\r\nexport { starburst, slant };\r\n","// import { ctx2 } from '../../mandalaDrawing.js';\r\nimport checkIndividualSwitches from '../_checkIndividualSwitches.js';\r\nimport { slant, starburst } from './drawLine.js';\r\n\r\nconst clearLoop = (inputs) => {\r\n\tconst shapeFunction = inputs.shapeArr[inputs.currentLoop - 1];\r\n\tif (shapeFunction === slant || shapeFunction === starburst) return;\r\n\r\n\tfor (let clearShape = 1; clearShape <= inputs.shapeCount; clearShape++) {\r\n\t\tinputs = checkIndividualSwitches('clear', inputs);\r\n\r\n\t\tinputs.ctx2.globalCompositeOperation = 'destination-out';\r\n\t\tinputs.ctx2.beginPath();\r\n\t\tshapeFunction(inputs);\r\n\t\tinputs.ctx2.fillStyle = inputs.color;\r\n\t\tinputs.ctx2.fill();\r\n\t\tinputs.ctx2.closePath();\r\n\t\tinputs.ctx2.globalCompositeOperation = 'source-over';\r\n\t\tinputs.ctx2.rotate((2 * Math.PI) / inputs.shapeCount);\r\n\t}\r\n};\r\n\r\nexport default clearLoop;\r\n","// import { ctx2 } from '../../mandalaDrawing.js';\r\nimport checkIndividualSwitches from '../_checkIndividualSwitches.js';\r\nimport { slant, starburst } from './drawLine.js';\r\n\r\nconst fillLoop = (inputs) => {\r\n\tconst shapeFunction = inputs.shapeArr[inputs.currentLoop - 1];\r\n\tif (shapeFunction === slant || shapeFunction === starburst) return;\r\n\tfor (let fillShape = 1; fillShape <= inputs.shapeCount; fillShape++) {\r\n\t\tinputs = checkIndividualSwitches('fill', inputs);\r\n\r\n\t\tinputs.ctx2.globalCompositeOperation = inputs.blendMode; // great for clear first\r\n\t\t// ctx2.globalCompositeOperation = 'multiply'; // great for clear first\r\n\t\t// ctx2.globalCompositeOperation = 'screen'; // also good option for both\r\n\t\t// ctx2.globalCompositeOperation = 'difference'; // cool chaos option both ways\r\n\t\t// ctx2.globalCompositeOperation = inputs.blendMode || 'source-over';\r\n\t\t// ctx2.globalCompositeOperation = 'source-over';\r\n\t\tinputs.ctx2.beginPath();\r\n\t\tshapeFunction(inputs);\r\n\t\tinputs.ctx2.fillStyle = inputs.fillColor;\r\n\t\tinputs.ctx2.fill();\r\n\t\tinputs.ctx2.closePath();\r\n\t\tinputs.ctx2.globalCompositeOperation = 'source-over';\r\n\t\tinputs.ctx2.rotate((2 * Math.PI) / inputs.shapeCount);\r\n\t}\r\n};\r\n\r\nexport default fillLoop;\r\n","// import { ctx2 } from '../../mandalaDrawing.js';\r\nimport checkIndividualSwitches from '../_checkIndividualSwitches.js';\r\n\r\nconst strokeLoop = (inputs) => {\r\n\tconst shapeFunction = inputs.shapeArr[inputs.currentLoop - 1];\r\n\r\n\tfor (let strokeShape = 1; strokeShape <= inputs.shapeCount; strokeShape++) {\r\n\t\tinputs = checkIndividualSwitches('stroke', inputs);\r\n\r\n\t\tinputs.ctx2.globalCompositeOperation = 'source-over';\r\n\t\tinputs.ctx2.beginPath();\r\n\t\tshapeFunction(inputs);\r\n\r\n\t\tinputs.ctx2.lineWidth = inputs.strokeWidth;\r\n\t\tinputs.ctx2.strokeStyle = inputs.strokeColor;\r\n\t\tinputs.ctx2.stroke();\r\n\t\tinputs.ctx2.closePath();\r\n\t\tinputs.ctx2.globalCompositeOperation = 'source-over';\r\n\t\tinputs.ctx2.rotate((2 * Math.PI) / inputs.shapeCount);\r\n\t}\r\n};\r\n// ctx2.beginPath();\r\n// drawCircle(shapeSize, pathRadius);\r\n// ctx2.lineWidth = 1;\r\n// ctx2.strokeStyle = randomColorValue;\r\n// ctx2.stroke();\r\n// ctx2.closePath();\r\n// ctx2.rotate((2 * Math.PI) / inputs.shapeCount);\r\n\r\nexport default strokeLoop;\r\n","import { roll, rollRange, randomColor, lightColor } from '../../utilities.js';\r\n\r\nimport checkIndividualSwitches from '../functionPool/_checkIndividualSwitches.js';\r\n\r\n// import { ctx2, halfWidth, halfHeight } from '../mandalaDrawing.js';\r\n\r\nimport clearLoop from '../functionPool/draw/clearLoop.js';\r\nimport fillLoop from '../functionPool/draw/fillLoop.js';\r\nimport strokeLoop from '../functionPool/draw/strokeLoop.js';\r\n\r\nconst loop = (inputs) => {\r\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ check clear fill stroke ~~~~~~~~~~~\r\n\r\n\tinputs.ctx2.save();\r\n\tinputs.ctx2.translate(inputs.halfWidth, inputs.halfHeight); // move to center\r\n\r\n\tinputs.clearSwitch && clearLoop(inputs);\r\n\r\n\tinputs.fillSwitch && fillLoop(inputs);\r\n\r\n\tinputs.strokeSwitch && strokeLoop(inputs);\r\n\r\n\tinputs.ctx2.restore();\r\n\t//******MOVE CENTER POINT BACK*********** */\r\n\t//******ENDING DRAW*********** */\r\n\t//******ENDING DRAW*********** */\r\n\t//******ENDING DRAW*********** */\r\n\t//******ENDING DRAW*********** */\r\n\treturn inputs;\r\n};\r\n\r\nexport default loop;\r\n","// import { ctx2, width, height } from '../../mandalaDrawing.js';\r\n\r\nconst clearDrawingArea = (inputs) => {\r\n\tinputs.ctx2.clearRect(0, 0, inputs.width, inputs.height);\r\n};\r\n\r\nexport default clearDrawingArea;\r\n","// import { ctx2, width, height } from '../../mandalaDrawing.js';\r\nconst drawBackground = (inputs) => {\r\n\tinputs.ctx2.rect(0, 0, inputs.width, inputs.height);\r\n\tinputs.ctx2.fillStyle = '#fff';\r\n\tinputs.ctx2.fill();\r\n};\r\nexport default drawBackground;\r\n","import { rollRange } from '../../utilities.js';\r\nimport drawBackground from './draw/drawBackground.js';\r\nimport getColorType from './_getColorType.js';\r\n\r\nconst getBackgroundStats = (inputs) => {\r\n\tinputs.shapeCount = rollRange(inputs.minShapeCount, inputs.maxShapeCount);\r\n\tinputs.pathRadius = rollRange(inputs.maxPathRadius, inputs.maxFullPath);\r\n\tinputs.shapeSize = inputs.pathRadius;\r\n\t// //****************INSIDE FIRST ROLL****************\r\n\t// //****************INSIDE FIRST ROLL****************\r\n\t// console.log(inputs);\r\n\t// force white background\r\n\tif (inputs.drawType === 'outline') {\r\n\t\tdrawBackground(inputs);\r\n\t}\r\n\tif (inputs.customBackgroundSwitch) {\r\n\t\tinputs.fillColor = inputs.customBackgroundColor;\r\n\t\tinputs.strokeColor = inputs.customStrokeColor;\r\n\t} else {\r\n\t\tinputs.fillColor = getColorType(inputs);\r\n\t\tinputs.strokeColor = getColorType(inputs);\r\n\t}\r\n\r\n\tinputs.fillSwitch = true;\r\n\tinputs.backgroundLoopSwitch = false; // switch off\r\n\treturn inputs;\r\n};\r\nexport default getBackgroundStats;\r\n","import { lightColor, coinFlip, roll } from '../../utilities.js';\r\nimport getStrokeWidth from './_getStrokeWidth.js';\r\nimport getColorType from './_getColorType.js';\r\n\r\nconst checkLoopSwitches = (inputs) => {\r\n    //clear\r\n    if (inputs.clearRandomLoops) {\r\n        inputs.clearSwitch = coinFlip();\r\n    }\r\n    //clear\r\n    //fill\r\n    if (inputs.FillRandomLoops) {\r\n        inputs.fillSwitch = coinFlip();\r\n    }\r\n    if (inputs.fillSwitch) {\r\n        if (inputs.fillColorRandomLoops) {\r\n            inputs.fillColor = getColorType(inputs);\r\n        }\r\n    }\r\n    //fill\r\n    //stroke\r\n    if (inputs.strokeRandomLoops) {\r\n        inputs.strokeSwitch = coinFlip();\r\n    }\r\n    if (inputs.strokeSwitch) {\r\n        if (inputs.strokeColorRandomLoops) {\r\n            inputs.strokeColor = getColorType(inputs);\r\n            //chance for randomIndividual color to be a single loop choice\r\n            inputs.strokeColorIndividual = roll(10) === 1 ? true : false;\r\n        }\r\n        if (inputs.strokeWidthRandomLoops) {\r\n            inputs.strokeWidth = getStrokeWidth(inputs.shapeCount);\r\n            //chance for randomIndividual width to be a single loop choice\r\n            inputs.strokeWidthIndividual = roll(10) === 1 ? true : false;\r\n        }\r\n    }\r\n    //stroke\r\n    //individual\r\n    if (inputs.strokeIndividual) {\r\n        inputs.strokeSwitch = true;\r\n    }\r\n    if (inputs.fillIndividual) {\r\n        inputs.fillSwitch = true;\r\n    }\r\n    //individual\r\n\r\n    return inputs;\r\n};\r\nexport default checkLoopSwitches;\r\n","import { rollRange } from '../../utilities.js';\r\n\r\nconst checkShapeSpacing = (inputs) => {\r\n    let newPath = inputs.pathRadius;\r\n    let improperSpacing = inputs.shapeSize - inputs.pathRadius;\r\n\r\n    while (improperSpacing >= -5 && improperSpacing <= 5) {\r\n        console.log('improperspacing while loop, changing pathRadius variable');\r\n\r\n        newPath = rollRange(inputs.minPathRadius, inputs.maxPathRadius);\r\n        improperSpacing = newPath - inputs.pathRadius;\r\n    }\r\n    inputs.pathRadius = newPath;\r\n    return inputs;\r\n};\r\n\r\nexport default checkShapeSpacing;\r\n","import { rollRange, lightColor, coinFlip } from '../../utilities.js';\r\nimport checkLoopSwitches from './_checkLoopSwitches.js';\r\n\r\nimport checkShapeSpacing from './_checkShapeSpacing.js';\r\n\r\nconst getFollowingLoopStats = (inputs) => {\r\n\t//****************INSIDE OTHER ROLLS****************\r\n\t//          things changing per loop\r\n\t//****************INSIDE OTHER ROLLS****************\r\n\t//default\r\n\tlet definedShapeRange = inputs.maxShapeSize * inputs.percent;\r\n\t//if user selected a min shape size\r\n\tif (inputs.minShapeSize) {\r\n\t\tdefinedShapeRange = rollRange(inputs.minShapeSize, inputs.maxShapeSize);\r\n\t}\r\n\r\n\tinputs.pathRadius = rollRange(inputs.minPathRadius, inputs.maxPathRadius);\r\n\tinputs.shapeSize = definedShapeRange;\r\n\tinputs.shapeCount = rollRange(inputs.minShapeCount, inputs.maxShapeCount);\r\n\tinputs = checkShapeSpacing(inputs);\r\n\r\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ check clear fill stroke ~~~~~~~~~~~\r\n\tinputs = checkLoopSwitches(inputs);\r\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ check clear fill stroke ~~~~~~~~~~~\r\n\tif (inputs.customBackgroundSwitch) {\r\n\t\tinputs.fillColor = inputs.customBackgroundColor;\r\n\t\tinputs.strokeColor = inputs.customStrokeColor;\r\n\t}\r\n\r\n\treturn inputs;\r\n};\r\n\r\nexport default getFollowingLoopStats;\r\n","// import { ctx2 } from '../../MandalaDrawing.js';\r\n\r\nconst square = (inputs) => {\r\n\t// ctx.rect(x, y, width, height);\r\n\tinputs.ctx2.rect(\r\n\t\tinputs.shapeSize / 2,\r\n\t\tinputs.pathRadius,\r\n\t\t-inputs.shapeSize,\r\n\t\t-inputs.shapeSize\r\n\t);\r\n};\r\nconst diamond = (inputs) => {\r\n\tinputs.ctx2.save();\r\n\tinputs.ctx2.rotate(Math.PI / 4);\r\n\tinputs.ctx2.rect(\r\n\t\tinputs.pathRadius,\r\n\t\tinputs.pathRadius,\r\n\t\t-inputs.shapeSize,\r\n\t\t-inputs.shapeSize\r\n\t);\r\n\tinputs.ctx2.restore();\r\n};\r\n\r\nexport { square, diamond };\r\n","// import { ctx2 } from '../../MandalaDrawing.js';\r\n\r\nconst circle = (inputs) => {\r\n\tinputs.ctx2.arc(\r\n\t\t0,\r\n\t\tinputs.pathRadius,\r\n\t\tinputs.shapeSize,\r\n\t\t0,\r\n\t\t2 * Math.PI,\r\n\t\tfalse\r\n\t);\r\n};\r\n\r\nconst oval = (inputs) => {\r\n\t// ctx.ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle [, anticlockwise]);\r\n\tinputs.ctx2.ellipse(\r\n\t\t0,\r\n\t\tinputs.pathRadius,\r\n\t\tinputs.shapeSize / 5,\r\n\t\tinputs.shapeSize,\r\n\t\t0,\r\n\t\t0,\r\n\t\t2 * Math.PI\r\n\t);\r\n};\r\n\r\nexport { circle, oval };\r\n","import { roll } from '../../utilities.js';\r\nimport { slant, starburst } from './draw/drawLine.js';\r\nimport { square, diamond } from './draw/drawSquare.js';\r\nimport { circle, oval } from './draw/drawEllipse.js';\r\n\r\nconst getShapeFunction = (inputs) => {\r\n\tconst diceRange = 3; // length of cases when ready\r\n\tlet dice;\r\n\t//forceNumber should increment, lets the invoke call the case\r\n\tif (inputs.shapeNumber) {\r\n\t\twhile (inputs.shapeNumber && inputs.shapeNumber > diceRange) {\r\n\t\t\tinputs.shapeNumber = inputs.shapeNumber - diceRange;\r\n\t\t}\r\n\t\tdice = inputs.shapeNumber;\r\n\t} else if (inputs.customShape) {\r\n\t\t// debugger;\r\n\t\tswitch (inputs.customShape) {\r\n\t\t\tcase 'circle':\r\n\t\t\t\treturn circle;\r\n\t\t\tcase 'oval':\r\n\t\t\t\treturn oval;\r\n\t\t\tcase 'square':\r\n\t\t\t\treturn square;\r\n\t\t\tcase 'diamond':\r\n\t\t\t\treturn diamond;\r\n\t\t\tcase 'starburst':\r\n\t\t\t\treturn starburst;\r\n\t\t\tcase 'slant':\r\n\t\t\t\treturn slant;\r\n\t\t\tcase 'noLine':\r\n\t\t\t\tdice = roll(2);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('default in customshape, get shapefunction');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t} else {\r\n\t\tdice = roll(3);\r\n\t}\r\n\r\n\tswitch (dice) {\r\n\t\tcase 1: // draw ellipse\r\n\t\t\tconst ellipseDice = roll(2);\r\n\t\t\t// ellipseDice = 2;\r\n\t\t\tswitch (ellipseDice) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\treturn circle;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\treturn oval;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log('error in getShapeFunction ellipse');\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t// return drawCircle;\r\n\t\tcase 2: // draw square\r\n\t\t\tlet squareDice = roll(2);\r\n\t\t\tswitch (squareDice) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\treturn square;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\treturn diamond;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log('error in getShapeFunction square');\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\tcase 3: // draw line\r\n\t\t\tlet lineDice = roll(2);\r\n\t\t\tswitch (lineDice) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\treturn starburst;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\treturn slant;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log('error in getShapeFunction line');\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in getShapeType');\r\n\t\t\treturn;\r\n\t}\r\n};\r\nexport default getShapeFunction;\r\n","import { roll } from '../../utilities.js';\r\nimport getShapeFunction from './_getShapeFunction.js';\r\n\r\nconst getShapeArr = (inputs) => {\r\n\tlet shapeStyleDice;\r\n\r\n\tif (inputs.shapeType) {\r\n\t\tif (inputs.shapeType === 'random') shapeStyleDice = 1;\r\n\t\tif (inputs.shapeType === 'same') shapeStyleDice = 2;\r\n\t\tif (inputs.shapeType === 'increment') shapeStyleDice = 3;\r\n\t} else {\r\n\t\tshapeStyleDice = roll(3);\r\n\t}\r\n\tlet shapeArr = [];\r\n\tswitch (shapeStyleDice) {\r\n\t\tcase 1:\r\n\t\t\tfor (let loop = 0; loop < inputs.loopCount; loop++) {\r\n\t\t\t\tshapeArr.push(getShapeFunction(inputs));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tconst sameShape = getShapeFunction(inputs);\r\n\t\t\tfor (let loop = 0; loop < inputs.loopCount; loop++) {\r\n\t\t\t\tshapeArr.push(sameShape);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tfor (let loop = 0; loop < inputs.loopCount; loop++) {\r\n\t\t\t\tinputs.shapeNumber = loop + 1;\r\n\t\t\t\tshapeArr.push(getShapeFunction(inputs));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in getShapeArr');\r\n\t\t\tbreak;\r\n\t}\r\n\treturn shapeArr;\r\n};\r\n\r\nexport default getShapeArr;\r\n","import getColorType from './_getColorType.js';\r\n\r\nconst checkResetBackgroundSwitches = (inputs) => {\r\n    if (inputs.clearAll) {\r\n        inputs.clearSwitch = true;\r\n    } else {\r\n        inputs.clearSwitch = false;\r\n    }\r\n    if (inputs.fillAll) {\r\n        inputs.fillSwitch = true;\r\n\r\n        if (inputs.fillColorAll) {\r\n            inputs.fillColor = getColorType(inputs);\r\n        }\r\n    } else {\r\n        inputs.fillSwitch = false;\r\n    }\r\n    if (inputs.strokeAll) {\r\n        inputs.strokeSwitch = true;\r\n\r\n        if (inputs.strokeColorAll) {\r\n            inputs.strokeColor = getColorType(inputs);\r\n        }\r\n        if (inputs.strokeWidthAll) {\r\n            inputs.strokeWidth = 1;\r\n            //stroke all needs 1 because some loops may have high shape count\r\n        }\r\n    } else {\r\n        inputs.strokeSwitch = false;\r\n    }\r\n\r\n    return inputs;\r\n};\r\nexport default checkResetBackgroundSwitches;\r\n","import loop from './special/loop.js';\r\n// import getInputStats from './functionPool/_getInputStats.js';\r\nimport clearDrawingArea from './functionPool/draw/clearDrawingArea.js';\r\nimport getBackgroundLoopStats from './functionPool/_getBackgroundLoopStats.js';\r\n// import getInitLoopStats from '../functionPool/_getInitLoopStats.js';\r\nimport getFollowingLoopStats from './functionPool/_getFollowingLoopStats.js';\r\nimport getShapeArr from './functionPool/_getShapeArr.js';\r\n// import getDrawType from './functionPool/_getDrawType.js';\r\nimport checkBackgroundSwitches from './functionPool/_checkBackgroundSwitches.js';\r\n// import getBlendMode from './functionPool/_getBlendMode.js';\r\n\r\nconst runMandalaDraw = (inputStats) => {\r\n\t// clear canvas\r\n\tclearDrawingArea(inputStats);\r\n\t// clear canvas\r\n\t//|||||||||||||||||||||||||||||||||stats|||||||||||||||||||\r\n\t//init stats\r\n\r\n\t// let inputStats = getInputStats();\r\n\r\n\t//'strokeOnly','fillOnly','fillAndStroke','individual','chaos','outline'\r\n\t// inputStats = getBlendMode(inputStats);\r\n\t//overrides\r\n\t// inputStats = getDrawType(inputStats, 'outline');\r\n\t// inputStats = getDrawType(inputStats);\r\n\t//build arr\r\n\t// inputStats.shapeArr = getShapeArr(inputStats);\r\n\r\n\t//start looping\r\n\tfor (\r\n\t\tlet currentLoop = inputStats.loopCount;\r\n\t\tcurrentLoop > 0;\r\n\t\tcurrentLoop--\r\n\t) {\r\n\t\tinputStats.currentLoop = currentLoop;\r\n\t\tinputStats.percent = currentLoop / inputStats.loopCount;\r\n\t\tif (!inputStats.customShape) {\r\n\t\t\tinputStats.maxShapeCount = Math.ceil(\r\n\t\t\t\tinputStats.useHalfSize * inputStats.percent\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (inputStats.backgroundLoopSwitch) {\r\n\t\t\tinputStats = getBackgroundLoopStats(inputStats);\r\n\t\t\t// } else if (inputStats.initLoopSwitch) {\r\n\t\t\t//     inputStats = getInitLoopStats(inputStats);\r\n\t\t} else {\r\n\t\t\tinputStats = getFollowingLoopStats(inputStats);\r\n\t\t}\r\n\t\t//call loop\r\n\t\t// console.log({ ...inputStats });\r\n\t\t// console.log(inputStats.pathRadius, inputStats.shapeSize);\r\n\t\t// debugger;\r\n\t\tinputStats = loop(inputStats);\r\n\t\t//reset loop stats\r\n\t\tif (inputStats.percent === 1) {\r\n\t\t\tinputStats = checkBackgroundSwitches(inputStats);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default runMandalaDraw;\r\n","// #################################### idea ######################################\r\n// stacking effect when you use rollRange(0, threshRadius50) for every pass\r\n\r\n// move this to edges for one of the effects being on the sides off center\r\n// ctx2.translate(halfWidth, halfHeight)\r\n\r\n// outer circle\r\n// ctx2.translate(halfWidth, halfHeight);\r\n// drawCircle(width, halfHeight);\r\n// drawCircle(halfWidth, height);\r\n//\r\n// top left is center inside begin path, bot right web outside of beginpath\r\n// ctx2.translate(0, 0);\r\n// drawCircle(width, height);\r\n// #################################### idea ######################################\r\n\r\nclass PointNode {\r\n\tconstructor(x, y) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n}\r\n\r\n// const randomStartingPoint = () => {\r\n// \tconst dice = roll(halfWidth);\r\n// \treturn new PointNode(dice, halfWidth);\r\n// };\r\n\r\nconst findHypotenuse = (width, height) => {\r\n\tconst hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\r\n\treturn Math.round(hypotenuse);\r\n};\r\n\r\n// const mandalaDraw = () => {\r\n// \t// const mandalaType = roll(5);\r\n// \tconst mandalaType = 1;\r\n// \tswitch (mandalaType) {\r\n// \t\tcase 1:\r\n// \t\t\tspecialShape();\r\n// \t\t\tbreak;\r\n// \t\tcase 2:\r\n// \t\t\toneShape();\r\n// \t\t\tbreak;\r\n// \t\tcase 3:\r\n// \t\t\tmultiShapes();\r\n// \t\t\tbreak;\r\n// \t\tdefault:\r\n// \t\t\tbreak;\r\n// \t}\r\n\r\n// };\r\n\r\nexport {\r\n\tPointNode,\r\n\t// mandalaDraw,\r\n\tfindHypotenuse,\r\n};\r\n","import { roll } from '../../utilities.js';\r\n\r\nconst getBlendMode = () => {\r\n\t// debugger;\r\n\t// const blends = ['source-over', 'screen', 'difference', 'multiply'];\r\n\t// if (inputs.blendMode && blends.includes(inputs.blendMode)) return;\r\n\r\n\tlet blend;\r\n\tconst dice = roll(3);\r\n\tswitch (dice) {\r\n\t\tcase 1:\r\n\t\t\tblend = 'difference';\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tblend = 'screen';\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tblend = 'multiply';\r\n\t\t\tbreak;\r\n\t\t// case 4:\r\n\t\t//     blend = 'source-over';\r\n\t\t//     break;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in getBlendMode');\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn blend;\r\n};\r\n\r\nexport default getBlendMode;\r\n","// import { roll, randomColor, lightColor } from '../../utilities.js';\r\n// import { halfWidth, halfHeight, height, width } from '../mandalaDrawing.js';\r\nimport { findHypotenuse } from '../mandalaDrawingUtilities.js';\r\nimport getBlendMode from './_getBlendMode.js';\r\nimport getShapeArr from './_getShapeArr.js';\r\n\r\nconst getInputStats = (mandalaDrawObj) => {\r\n\t//|||||||||||||||||||||||||||||||||stats|||||||||||||||||||\r\n\t// console.log(mandalaDrawObj);\r\n\tconst { canvasWidth, canvasHeight } = mandalaDrawObj;\r\n\tlet inputObj = {\r\n\t\twidth: canvasWidth || 500,\r\n\t\theight: canvasHeight || 500,\r\n\t\thalfWidth: Math.floor(canvasWidth / 2) || 250,\r\n\t\thalfHeight: Math.floor(canvasHeight / 2) || 250,\r\n\r\n\t\tloopCount: 5, //roll(5)\r\n\t\tcurrentLoop: null,\r\n\t\tpercent: null, // created in loop\r\n\r\n\t\tbackgroundLoopSwitch: true,\r\n\t\tinitLoopSwitch: false,\r\n\r\n\t\tcustomBackgroundSwitch: false,\r\n\t\tcustomBackgroundColor: null,\r\n\t\tcustomStrokeColor: null,\r\n\t\tcustomShape: null,\r\n\r\n\t\tclearSwitch: false,\r\n\t\tclearAll: false,\r\n\t\tclearRandomLoops: false,\r\n\t\tclearIndividual: false,\r\n\r\n\t\tdrawType: null,\r\n\r\n\t\tfillSwitch: false,\r\n\t\tfillAll: false,\r\n\t\tfillRandomLoops: false,\r\n\t\tfillIndividual: false,\r\n\t\tfillColor: null,\r\n\t\tfillColorAll: false,\r\n\t\tfillColorRandomLoops: false,\r\n\t\tfillColorIndividual: false,\r\n\r\n\t\tstrokeSwitch: false,\r\n\t\tstrokeAll: false,\r\n\t\tstrokeRandomLoops: false,\r\n\t\tstrokeIndividual: false,\r\n\t\tstrokeColor: null,\r\n\t\tstrokeColorAll: false,\r\n\t\tstrokeColorRandomLoops: false,\r\n\t\tstrokeColorIndividual: false,\r\n\t\tstrokeWidth: 1,\r\n\t\tstrokeWidthAll: false,\r\n\t\tstrokeWidthRandomLoops: false,\r\n\t\tstrokeWidthIndividual: false,\r\n\r\n\t\tuseSize: canvasWidth > canvasHeight ? canvasWidth : canvasHeight,\r\n\t\tuseHalfSize: null,\r\n\t\tmaxFullPath: findHypotenuse(canvasWidth, canvasHeight),\r\n\r\n\t\tpathRadius: null,\r\n\t\tminPathRadius: 20,\r\n\t\tmaxPathRadius: null,\r\n\t\tminShapeCount: 4,\r\n\t\tmaxShapeCount: 200,\r\n\t\tmaxShapeSize: 200,\r\n\r\n\t\tshapeCount: null, // default, randomize\r\n\t\tshapeSize: null, //default, shape size needs to be adjusted based on path\r\n\t\tshapeArr: null,\r\n\r\n\t\tshapeType: null,\r\n\t\tshapeNumber: null,\r\n\t\tblendMode: getBlendMode(), // have to find in loop\r\n\r\n\t\t...mandalaDrawObj, // override input stats\r\n\t};\r\n\tinputObj.useHalfSize = inputObj.useSize / 2;\r\n\tinputObj.maxPathRadius = findHypotenuse(\r\n\t\tinputObj.halfWidth,\r\n\t\tinputObj.halfHeight\r\n\t);\r\n\tinputObj.shapeArr = getShapeArr(inputObj);\r\n\r\n\t// console.log(inputObj.shapeArr);\r\n\t// debugger;\r\n\treturn inputObj;\r\n};\r\n\r\nexport default getInputStats;\r\n","import { createCanvasDraw } from '../utilities.js';\r\nimport runMandalaDraw from './runMandalaDraw.js';\r\nimport getInputStats from './functionPool/_getInputStats.js';\r\nimport getDrawType from './functionPool/_getDrawType.js';\r\n\r\nconst MandalaDrawing = (forceDesignObj) => {\r\n\tlet { dimensions, mandalaDrawObj } = forceDesignObj;\r\n\tlet width, height;\r\n\tif (dimensions) {\r\n\t\twidth = dimensions.width;\r\n\t\theight = dimensions.height;\r\n\t}\r\n\r\n\tconst canvasWidth = width ? width : 500;\r\n\tconst canvasHeight = height ? height : 500;\r\n\tconst [canvasDraw, ctx2] = createCanvasDraw(canvasWidth, canvasHeight);\r\n\tlet mandalaInput = {\r\n\t\t...mandalaDrawObj,\r\n\t\tcanvasWidth,\r\n\t\tcanvasHeight,\r\n\t\tcanvasDraw,\r\n\t\tctx2,\r\n\t};\r\n\t//get and place stats\r\n\tmandalaInput = getInputStats(mandalaInput);\r\n\t// debugger;\r\n\tmandalaInput = getDrawType(mandalaInput);\r\n\r\n\trunMandalaDraw(mandalaInput);\r\n\r\n\t//convert canvas to an image\r\n\t//return image\r\n\t// return ctx2;\r\n\tconst dataURL = mandalaInput.canvasDraw.toDataURL('image/png');\r\n\treturn dataURL;\r\n};\r\n\r\nexport { MandalaDrawing };\r\n","import RandomDrawing from './randomDrawing.js';\r\nimport { BoxDrawing } from './boxDrawing/BoxDrawing.js';\r\nimport { MandalaDrawing } from './mandalaDrawing/MandalaDrawing.js';\r\n\r\nconst randomInterface = {\r\n    RandomDrawing,\r\n    BoxDrawing,\r\n    MandalaDrawing,\r\n};\r\n\r\nexport default randomInterface;\r\n","import { roll } from './utilities.js';\r\nimport { BoxDrawing } from './boxDrawing/BoxDrawing.js';\r\nimport { MandalaDrawing } from './mandalaDrawing/MandalaDrawing.js';\r\n\r\nconst RandomDrawing = (forceDesignObj) => {\r\n\tconst dice = roll(2);\r\n\tlet returnRandomDrawing;\r\n\tswitch (dice) {\r\n\t\tcase 1:\r\n\t\t\treturnRandomDrawing = BoxDrawing;\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\treturnRandomDrawing = MandalaDrawing;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in randomDraw random dice');\r\n\t\t\tbreak;\r\n\t}\r\n\treturn returnRandomDrawing(forceDesignObj);\r\n};\r\n\r\nexport default RandomDrawing;\r\n","import randomInterface from './codeBank/randomInterface.js';\r\n\r\nconst BoxDrawing = randomInterface.BoxDrawing;\r\nconst MandalaDrawing = randomInterface.MandalaDrawing;\r\nconst RandomDrawing = randomInterface.RandomDrawing;\r\n\r\nlet max = 20;\r\nlet sequence = [];\r\n\r\nconst pushSequence = (design) => {\r\n\tsequence.push(design);\r\n\twhile (sequence.length > max) {\r\n\t\tsequence.shift();\r\n\t}\r\n};\r\nconst getSequence = (suggestMax) => {\r\n\t// debugger;\r\n\tmax = suggestMax;\r\n\twhile (sequence.length > max) {\r\n\t\tsequence.shift();\r\n\t}\r\n\treturn sequence;\r\n};\r\nconst getImage = () => {\r\n\tlet image;\r\n\tif (sequence.length > 0) image = sequence[sequence.length - 1];\r\n\t// const image = sequence[sequence.length - 1];\r\n\tconsole.log(image);\r\n\treturn image;\r\n};\r\n\r\nconst randomDraw = (forceDesignObj = {}) => {\r\n\tconst { typeOfDrawer } = forceDesignObj;\r\n\tif (!forceDesignObj.boxDrawObj) {\r\n\t\tforceDesignObj.boxDrawObj = {};\r\n\t}\r\n\tif (!forceDesignObj.mandalaDrawObj) {\r\n\t\tforceDesignObj.mandalaDrawObj = {};\r\n\t}\r\n\tswitch (typeOfDrawer) {\r\n\t\tcase 'boxDraw':\r\n\t\t\tconst box = BoxDrawing(forceDesignObj);\r\n\t\t\tpushSequence(box);\r\n\t\t\treturn;\r\n\t\tcase 'mandalaDraw':\r\n\t\t\tconst mandala = MandalaDrawing(forceDesignObj);\r\n\t\t\tpushSequence(mandala);\r\n\t\t\treturn;\r\n\t\tdefault:\r\n\t\t\tconst random = RandomDrawing(forceDesignObj);\r\n\t\t\tpushSequence(random);\r\n\t\t\treturn;\r\n\t}\r\n};\r\n\r\nexport { randomDraw, getSequence, getImage };\r\n","import React, { useState, useEffect } from 'react';\nimport Head from './components/head/Head';\nimport Sequence from './components/head/sequence/Sequence';\nimport CodeInjector from './components/codeInjector/CodeInjector';\nimport Controls from './components/main/controls/Controls';\nimport MainDisplay from './components/main/mainDisplay/MainDisplay';\n\nimport { randomDraw, getImage } from './randomDraw.js';\nimport {\n\tcloneObj,\n\twriteInputCode,\n\tresetDefaults,\n\tclearEmpties,\n\tcheckSequenceSize,\n} from './functions/functions.js';\n\nfunction App() {\n\t// let forceDesignObj = {\n\t// \t\ttypeOfDrawer: 'random',\n\t// \t\t\tdimensions: {\n\t// \t\t\t\twidth: null,\n\t// \t\t\t\theight: null,\n\t// \t\t\t},\n\t// \t\ttestStr: '',\n\t// \t\tboxDrawObj: {},\n\t// \t\tmandalaDrawObj: {},\n\t// };\n\t// let forceDesignObj = {};\n\tconst [designState, setDesignState] = useState({});\n\tconst [sequence, setSequence] = useState([]);\n\n\tuseEffect(() => {\n\t\tconsole.log(designState);\n\t\t//reset defaults\n\t\t// debugger;\n\n\t\t//updates the state then runs again\n\t\tresetDefaults(\n\t\t\tdesignState,\n\t\t\tadjustState,\n\t\t\tadjustDimensions,\n\t\t\tadjustBoxState,\n\t\t\tadjustMandalaState\n\t\t);\n\t\t//clear clone state and clear empty regions\n\t\tlet inputObj = clearEmpties(cloneObj(designState));\n\n\t\t//draw\n\t\trandomDraw(inputObj);\n\n\t\t//getImg\n\t\tcheckSequenceSize(sequence, setSequence);\n\t\tconst grabImg = getImage();\n\t\t// debugger;\n\t\tsetSequence([...sequence, grabImg]);\n\t}, [designState]);\n\n\tconst adjustState = (obj) => {\n\t\tsetDesignState({\n\t\t\t...designState,\n\t\t\t...obj,\n\t\t});\n\t};\n\n\tconst adjustDimensions = (obj) => {\n\t\tsetDesignState({\n\t\t\t...designState,\n\t\t\tdimensions: {\n\t\t\t\t...designState.dimensions,\n\t\t\t\t...obj,\n\t\t\t},\n\t\t});\n\t};\n\tconst adjustBoxState = (obj) => {\n\t\tsetDesignState({\n\t\t\t...designState,\n\t\t\tboxDrawObj: {\n\t\t\t\t...designState.boxDrawObj,\n\t\t\t\t...obj,\n\t\t\t},\n\t\t});\n\t};\n\tconst adjustMandalaState = (obj) => {\n\t\tsetDesignState({\n\t\t\t...designState,\n\t\t\tmandalaDrawObj: {\n\t\t\t\t...designState.mandalaDrawObj,\n\t\t\t\t...obj,\n\t\t\t},\n\t\t});\n\t};\n\n\tconst draw = () => {\n\t\trandomDraw(designState);\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Head sequence={sequence} />\n\t\t\t<CodeInjector state={designState} />\n\t\t\t<main>\n\t\t\t\t<Controls\n\t\t\t\t\tdraw={draw}\n\t\t\t\t\tstate={designState}\n\t\t\t\t\tadjustState={adjustState}\n\t\t\t\t\tadjustDimensions={adjustDimensions}\n\t\t\t\t\tadjustBoxState={adjustBoxState}\n\t\t\t\t\tadjustMandalaState={adjustMandalaState}\n\t\t\t\t/>\n\t\t\t\t<MainDisplay />\n\t\t\t</main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n\n//maybe add fractals\n//maybe add pixel trails\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/App.scss';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}