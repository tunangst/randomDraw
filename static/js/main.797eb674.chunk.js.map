{"version":3,"sources":["codeBank/utilities.js","codeBank/mandalaDrawing/functionPool/_getDrawType.js","components/head/sequence/card/Card.js","components/head/sequence/Sequence.js","codeBank/boxDrawing/boxDrawingUtilities.js","codeBank/boxDrawing/singles/clone.js","codeBank/boxDrawing/specials/fullClone.js","codeBank/boxDrawing/singles/rotate.js","codeBank/boxDrawing/specials/fullRotate.js","codeBank/boxDrawing/singles/reflect.js","codeBank/boxDrawing/specials/fullReflect.js","codeBank/boxDrawing/specials/halfReflect.js","codeBank/boxDrawing/specials/noPattern.js","codeBank/boxDrawing/specials/specials.js","codeBank/boxDrawing/singles/singles.js","codeBank/boxDrawing/doubles/doubles.js","codeBank/boxDrawing/BoxDrawing.js","codeBank/mandalaDrawing/functionPool/_getStrokeWidth.js","codeBank/mandalaDrawing/functionPool/_getColorType.js","codeBank/mandalaDrawing/functionPool/_checkIndividualSwitches.js","codeBank/mandalaDrawing/functionPool/draw/drawLine.js","codeBank/mandalaDrawing/functionPool/draw/clearLoop.js","codeBank/mandalaDrawing/functionPool/draw/fillLoop.js","codeBank/mandalaDrawing/functionPool/draw/strokeLoop.js","codeBank/mandalaDrawing/special/loop.js","codeBank/mandalaDrawing/functionPool/draw/clearDrawingArea.js","codeBank/mandalaDrawing/functionPool/draw/drawBackground.js","codeBank/mandalaDrawing/functionPool/_getBackgroundLoopStats.js","codeBank/mandalaDrawing/functionPool/_checkLoopSwitches.js","codeBank/mandalaDrawing/functionPool/_checkShapeSpacing.js","codeBank/mandalaDrawing/functionPool/_getFollowingLoopStats.js","codeBank/mandalaDrawing/functionPool/draw/drawSquare.js","codeBank/mandalaDrawing/functionPool/draw/drawEllipse.js","codeBank/mandalaDrawing/functionPool/_getShapeFunction.js","codeBank/mandalaDrawing/functionPool/_getShapeArr.js","codeBank/mandalaDrawing/functionPool/_checkBackgroundSwitches.js","codeBank/mandalaDrawing/runMandalaDraw.js","codeBank/mandalaDrawing/mandalaDrawingUtilities.js","codeBank/mandalaDrawing/functionPool/_getBlendMode.js","codeBank/mandalaDrawing/functionPool/_getInputStats.js","codeBank/mandalaDrawing/MandalaDrawing.js","codeBank/randomInterface.js","codeBank/randomDrawing.js","randomDraw.js","components/head/Head.js","functions/functions.js","components/codeInjector/CodeInjector.js","components/main/Main.js","components/main/controls/boxDropdownMarkUp/BoxDropDownMarkUp.js","components/main/controls/mandalaDropDownMarkUp/mandalaCustomDrawOptions/MandalaCustomDrawOptions.js","components/main/controls/mandalaDropDownMarkUp/mandalaDetailsOptions/MandalaDetailOptions.js","components/main/controls/mandalaDropDownMarkUp/MandalaDropDownMarkUp.js","components/main/controls/Controls.js","components/main/mainDisplay/MainDisplay.js","App.js","index.js"],"names":["roll","range","Math","floor","random","rollRange","min","max","coinFlip","createCanvasTemplate","width","height","old","document","querySelector","remove","canvasTemplate","createElement","id","ctx","getContext","createCanvasDraw","parentSpace","innerHTML","canvasDraw","ctx2","appendChild","clear","inputObj","matrix","clearRect","canvasWidth","canvasHeight","randomColor","randomR","randomG","randomB","lightColor","shapeCount","randomL","randomH","randomS","darkColor","getDrawType","inputs","forceType","drawType","loopCycle","word","eval","chaos","fillSwitch","strokeSwitch","strokeOnly","clearIndividual","strokeAll","custom","fillOnly","clearAll","fillAll","fillAndStroke","individual","fillIndividual","fillColorIndividual","strokeIndividual","strokeColorIndividual","strokeWidthIndividual","outline","customBackgroundSwitch","customBackgroundColor","customStrokeColor","blendMode","maxShapeCount","customShape","strokeColorAll","strokeWidthAll","dice","console","log","Card","image","className","onClick","event","src","alt","Sequence","intervalId","cardDeck","sequence","scroll","target","direction","scrollLeft","handleMouseEnter","preventDefault","nextElementSibling","setInterval","previousElementSibling","handleMouseLeave","clearInterval","length","shift","onMouseEnter","onMouseLeave","map","card","index","key","boxDraw","boxDrawObj","xCoord","yCoord","usingMatrix","matrixRow","matrixColumn","pixel","calcX","xStart","calcY","yStart","fillStyle","color","fillRect","pixelWidth","pixelHeight","strokeStyle","strokeRect","PixelNode","this","InputNode","whatToPlace","rollColor","backgroundColor","primaryColor","secondaryColor","createPixelMap","patternOverride","newMatrix","y","row","x","push","drawSectionHeight","drawSectionWidth","combineMatrixTopHalf","matrix1","matrix2","combinedMatrix","i","combine","combineMatrixLeftHalf","clone","xOffset","yOffset","xPos","yPos","tempMatrix","rowArr","newPixel","fullClone","cloneMatrix1","cloneMatrix2","cloneMatrix3","inputNode","rotateClockwise","useMatrix","column","rotateCounterClockwise","fullRotate","rotatedMatrix1","rotatedMatrix2","rotatedMatrix3","reflectVerticalAxis","reflectHorizontalAxis","fullReflect","adjustedMatrix","reflectedMatrix","halfReflect","clonedMatrix","noPattern","getMatrix","specials","drawStyle","singles","quadrantDice","order","quadrantArray","test","includes","quadrant","findQuadrantOrder","forEach","number","doubles","styleDice","doubleDice","quadrantDouble","rotatedMatrix","BoxDrawing","forceDesignObj","dimensions","boxCount","primaryToggle","secondaryToggle","backgroundToggle","inputColor","alert","toDataURL","getStrokeWidth","getColorType","clearSwitch","checkIndividualSwitches","type","fillColor","strokeColor","strokeWidth","starburst","save","moveTo","pathRadius","shapeSize","lineTo","restore","slant","clearLoop","shapeFunction","shapeArr","currentLoop","clearShape","globalCompositeOperation","beginPath","fill","closePath","rotate","PI","fillLoop","fillShape","strokeLoop","strokeShape","lineWidth","stroke","loop","translate","halfWidth","halfHeight","clearDrawingArea","drawBackground","rect","getBackgroundStats","minShapeCount","maxPathRadius","maxFullPath","backgroundLoopSwitch","checkLoopSwitches","clearRandomLoops","FillRandomLoops","fillColorRandomLoops","strokeRandomLoops","strokeColorRandomLoops","strokeWidthRandomLoops","checkShapeSpacing","newPath","improperSpacing","minPathRadius","getFollowingLoopStats","definedShapeRange","maxShapeSize","percent","minShapeSize","square","diamond","circle","arc","oval","ellipse","getShapeFunction","shapeNumber","getShapeArr","shapeStyleDice","shapeType","loopCount","sameShape","checkResetBackgroundSwitches","fillColorAll","runMandalaDraw","inputStats","ceil","useHalfSize","getBackgroundLoopStats","checkBackgroundSwitches","findHypotenuse","hypotenuse","sqrt","pow","round","getBlendMode","blend","getInputStats","mandalaDrawObj","initLoopSwitch","fillRandomLoops","useSize","MandalaDrawing","mandalaInput","randomInterface","RandomDrawing","returnRandomDrawing","pushSequence","design","getImage","randomDraw","typeOfDrawer","box","mandala","Head","iconImage","useState","showSequence","setShowSequence","sequenceArrow","cloneObj","obj","JSON","parse","stringify","clearEmpties","Object","keys","undefined","CodeInjector","state","displayCode","writeInputCode","Main","children","initialState","choosePrimaryColor","chooseSecondaryColor","chooseBackgroundColor","BoxDropDownMarkUp","adjustBoxState","input","setInput","activePrimary","setActivePrimary","activeSecondary","setActiveSecondary","activeBackground","setActiveBackground","activeStyle","setActiveStyle","handleChange","value","keyName","Number","handleBtns","handleStyleBtns","innerText","convertedWord","charAt","toLowerCase","replace","slice","name","step","onChange","MandalaCustomDrawOptions","adjustMandalaState","useEffect","collapseState","collapsedState","lvl1Key","lvl2Key","stopPropagation","checked","htmlFor","MandalaDetailOptions","placeholder","MandalaDropDownMarkUp","showDrawOptions","setShowDrawOptions","activeDrawType","setActiveDrawType","activeShapeType","setActiveShapeType","handleShapeTypeBtns","handleDrawTypeBtns","initialInputState","Controls","dropDownMarkUp","adjustState","adjustDimensions","active","setActive","dropDown","setDropDown","whichDropDown","setWhichDropDown","handleBtnClick","isScrolling","endX","endY","startX","startY","MainDisplay","setScroll","html","handleMouseUp","onMouseDown","pageX","pageY","onMouseUp","onMouseOut","onMouseMove","windowScrollX","window","scrollX","windowScrollY","scrollY","calcMoveX","calcMoveY","scrollTop","App","designState","setDesignState","setSequence","clearIndividualLoops","fillIndividualLoops","fillColorIndividualLoops","strokeIndividualLoops","strokeColorIndividualLoops","strokeWidthIndividualLoops","resetDefaults","maxSize","adjustedArr","pop","checkSequenceSize","imgURI","grabImg","href","draw","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.797eb674.chunk.js","sourcesContent":["const roll = (range) => {\r\n\t// 1 - range\r\n\treturn Math.floor(Math.random() * range + 1);\r\n};\r\nconst rollRange = (min, max) => {\r\n\tconst answer = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\treturn answer;\r\n};\r\n\r\nconst coinFlip = () => {\r\n\tconst coin = roll(2);\r\n\tconst face = coin === 1 ? true : false;\r\n\treturn face;\r\n};\r\nconst createCanvasTemplate = (width, height) => {\r\n\t//remove old canvas\r\n\tconst old = document.querySelector('#canvasTemplate');\r\n\tif (old) {\r\n\t\told.remove();\r\n\t}\r\n\t//create new canvas\r\n\tlet canvasTemplate = document.createElement('canvas');\r\n\tcanvasTemplate.id = 'canvasTemplate';\r\n\tcanvasTemplate.width = width;\r\n\tcanvasTemplate.height = height;\r\n\tconst ctx = canvasTemplate.getContext('2d');\r\n\r\n\treturn [canvasTemplate, ctx];\r\n};\r\nconst createCanvasDraw = (width, height) => {\r\n\t//find user defined space for canvas\r\n\tconst parentSpace =\r\n\t\tdocument.querySelector('.randomDraw') ||\r\n\t\tdocument.querySelector('#randomDraw');\r\n\t//remove old canvas\r\n\tparentSpace.innerHTML = '';\r\n\t//create new canvas\r\n\tlet canvasDraw = document.createElement('canvas');\r\n\tcanvasDraw.id = 'canvasDraw';\r\n\tcanvasDraw.width = width;\r\n\tcanvasDraw.height = height;\r\n\tconst ctx2 = canvasDraw.getContext('2d');\r\n\r\n\t//place canvas\r\n\tparentSpace.appendChild(canvasDraw);\r\n\r\n\treturn [canvasDraw, ctx2];\r\n};\r\n\r\nconst clear = (inputObj) => {\r\n\tinputObj.matrix = [];\r\n\tinputObj.ctx &&\r\n\t\tinputObj.ctx.clearRect(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tinputObj.canvasWidth,\r\n\t\t\tinputObj.canvasHeight\r\n\t\t);\r\n\tinputObj.ctx2 &&\r\n\t\tinputObj.ctx2.clearRect(\r\n\t\t\t0,\r\n\t\t\t0,\r\n\t\t\tinputObj.canvasWidth,\r\n\t\t\tinputObj.canvasHeight\r\n\t\t);\r\n\treturn inputObj.matrix;\r\n};\r\n\r\nconst randomColor = () => {\r\n\tconst randomR = roll(256);\r\n\tconst randomG = roll(256);\r\n\tconst randomB = roll(256);\r\n\treturn `rgb(${randomR},${randomG},${randomB})`;\r\n};\r\n\r\nconst lightColor = (shapeCount) => {\r\n\tconst randomH = rollRange(0, 360);\r\n\tconst randomS = rollRange(0, 100);\r\n\tlet randomL;\r\n\tif (shapeCount > 150) {\r\n\t\trandomL = 99;\r\n\t} else if (shapeCount > 100) {\r\n\t\trandomL = rollRange(95, 99); //0=black 50=normal 100=white\r\n\t} else if (shapeCount > 50) {\r\n\t\trandomL = rollRange(90, 99); //0=black 50=normal 100=white\r\n\t} else {\r\n\t\trandomL = rollRange(80, 99); //0=black 50=normal 100=white\r\n\t}\r\n\treturn `hsl(${randomH},${randomS}%,${randomL}%)`;\r\n};\r\n\r\nconst darkColor = (shapeCount) => {\r\n\tconst randomH = rollRange(0, 360);\r\n\tconst randomS = rollRange(0, 100);\r\n\tlet randomL;\r\n\t// debugger;\r\n\tif (shapeCount > 150) {\r\n\t\trandomL = 1;\r\n\t} else if (shapeCount > 100) {\r\n\t\trandomL = rollRange(5, 1); //0=black 50=normal 100=white\r\n\t} else if (shapeCount > 50) {\r\n\t\trandomL = rollRange(10, 1); //0=black 50=normal 100=white\r\n\t} else {\r\n\t\trandomL = rollRange(20, 1); //0=black 50=normal 100=white\r\n\t}\r\n\treturn `hsl(${randomH},${randomS}%,${randomL}%)`;\r\n};\r\n\r\n//rotate image functions\r\n//rotate image functions\r\n//rotate image functions\r\n//rotate image functions\r\n\r\n// const img = new Image();\r\n// img.src = \"https://i.stack.imgur.com/C7qq2.png?s=328&g=1\";\r\n// img.onload = () => { requestAnimationFrame(mainLoop) } // start when loaded\r\n// const ctx = canvas.getContext(\"2d\");\r\n\r\n// function drawImageRotated(img, x, y, scale, rot) {\r\n//   ctx.setTransform(scale, 0, 0, scale, x, y);\r\n//   ctx.rotate(rot);\r\n//   ctx.drawImage(img, -img.width / 2, -img.height / 2);\r\n//   ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n// }\r\n\r\n// function mainLoop(time) {\r\n//   ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n//   drawImageRotated(img,canvas.width / 2, canvas.height / 2, 0.5, time / 500);\r\n//   requestAnimationFrame(mainLoop);\r\n// }\r\n\r\n//rotate image functions\r\n//rotate image functions\r\n//rotate image functions\r\n//rotate image functions\r\n\r\nexport {\r\n\troll,\r\n\trollRange,\r\n\tcoinFlip,\r\n\tcreateCanvasTemplate,\r\n\tcreateCanvasDraw,\r\n\tclear,\r\n\trandomColor,\r\n\tlightColor,\r\n\tdarkColor,\r\n};\r\n","import { roll, coinFlip } from '../../utilities.js';\r\n\r\nconst getDrawType = (inputs) => {\r\n\tconst forceType = inputs.drawType ? inputs.drawType : null;\r\n\tconst loopCycle = (word) => {\r\n\t\teval(`inputs.${word}All = ${coinFlip()}`);\r\n\r\n\t\tif (!eval(`inputs.${word}All`)) {\r\n\t\t\teval(`inputs.${word}RandomLoops = ${coinFlip()}`);\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!eval(`inputs.${word}RandomLoops`)) {\r\n\t\t\teval(`inputs.${word}Individual = ${coinFlip()}`);\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!eval(`inputs.${word}Individual`)) {\r\n\t\t\tloopCycle(word);\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\tconst chaos = () => {\r\n\t\tinputs.fillSwitch = true;\r\n\t\tinputs.strokeSwitch = true;\r\n\t\tloopCycle('clear');\r\n\t\tloopCycle('fill');\r\n\t\tloopCycle('fillColor');\r\n\t\tloopCycle('stroke');\r\n\t\tloopCycle('strokeColor');\r\n\t\tloopCycle('strokeWidth');\r\n\t};\r\n\tconst strokeOnly = () => {\r\n\t\tinputs.fillSwitch = true;\r\n\t\tinputs.strokeSwitch = true;\r\n\t\t// loopCycle('clear');\r\n\t\tinputs.clearIndividual = true;\r\n\t\tinputs.strokeAll = true;\r\n\t\tloopCycle('strokeColor');\r\n\t\tloopCycle('strokeWidth');\r\n\t};\r\n\tconst custom = () => {};\r\n\tconst fillOnly = () => {\r\n\t\tinputs.fillSwitch = true;\r\n\t\tinputs.clearAll = true;\r\n\t\tinputs.fillAll = true;\r\n\t\tloopCycle('fillColor');\r\n\t\t// fillColorRandomLoops = true;\r\n\t};\r\n\tconst fillAndStroke = () => {\r\n\t\tinputs.fillSwitch = true;\r\n\t\tinputs.strokeSwitch = true;\r\n\t\tinputs.fillAll = true;\r\n\t\tinputs.strokeAll = true;\r\n\t\tloopCycle('clear');\r\n\t\tloopCycle('strokeColor');\r\n\t\tloopCycle('fillColor');\r\n\t};\r\n\tconst individual = () => {\r\n\t\tinputs.fillSwitch = true;\r\n\t\tinputs.strokeSwitch = true;\r\n\t\tinputs.clearIndividual = true;\r\n\t\tinputs.fillIndividual = true;\r\n\t\tinputs.fillColorIndividual = true;\r\n\t\tinputs.strokeIndividual = true;\r\n\t\tinputs.strokeColorIndividual = true;\r\n\t\tinputs.strokeWidthIndividual = true;\r\n\t};\r\n\tconst outline = () => {\r\n\t\tinputs.customBackgroundSwitch = true;\r\n\t\tinputs.customBackgroundColor = '#fff';\r\n\t\tinputs.customStrokeColor = '#000';\r\n\t\tinputs.blendMode = 'source-over';\r\n\t\tinputs.maxShapeCount = 50;\r\n\t\tinputs.customShape = 'noLine';\r\n\r\n\t\tinputs.strokeSwitch = true;\r\n\t\tinputs.fillSwitch = false;\r\n\t\tinputs.fillAll = true;\r\n\t\tinputs.strokeAll = true;\r\n\t\tinputs.clearAll = true;\r\n\t\t// inputs.clearRandomLoops = true;\r\n\t\tinputs.strokeColorAll = true;\r\n\t\tinputs.strokeWidthAll = true;\r\n\t};\r\n\tif (forceType && forceType !== 'random') {\r\n\t\tif (forceType === 'custom') return inputs;\r\n\t\teval(`${forceType}()`);\r\n\t} else {\r\n\t\tconst dice = roll(5);\r\n\t\tswitch (dice) {\r\n\t\t\tcase 1:\r\n\t\t\t\tstrokeOnly();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tfillOnly();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tfillAndStroke();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\tindividual();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tchaos();\r\n\t\t\t\tbreak;\r\n\t\t\t// case 6:\r\n\t\t\t// \toutline();\r\n\t\t\t// \tbreak;\r\n\t\t\t// case 7:\r\n\t\t\t// \tcustom();\r\n\t\t\t// \tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('error in getDrawType');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\treturn inputs;\r\n};\r\n\r\nexport default getDrawType;\r\n","import React from 'react';\r\n\r\nconst Card = ({ image }) => {\r\n\tconst handleClick = (event) => {\r\n\t\tconsole.log('clicked');\r\n\t\t//open modal with large image\r\n\t};\r\n\treturn (\r\n\t\t<figure className='card' onClick={handleClick}>\r\n\t\t\t<img src={image} alt='generated design image' />\r\n\t\t</figure>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './card/Card';\r\n\r\nconst Sequence = ({ sequence }) => {\r\n\tlet intervalId;\r\n\r\n\tconst scroll = (target, direction) => {\r\n\t\tswitch (direction) {\r\n\t\t\tcase 'left':\r\n\t\t\t\ttarget.scrollLeft -= 10;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'right':\r\n\t\t\t\ttarget.scrollLeft += 10;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('direction in sequence default');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\tconst handleMouseEnter = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst id = event.target.id;\r\n\r\n\t\tlet target;\r\n\t\tswitch (id) {\r\n\t\t\tcase 'sequenceLeft':\r\n\t\t\t\ttarget = event.target.nextElementSibling;\r\n\t\t\t\tintervalId = setInterval(() => scroll(target, 'left'), 10);\r\n\t\t\t\tconsole.log(target, 'target');\r\n\r\n\t\t\t\tconsole.log('sequence left, mouse enter');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sequenceRight':\r\n\t\t\t\ttarget = event.target.previousElementSibling;\r\n\t\t\t\tintervalId = setInterval(() => scroll(target, 'right'), 10);\r\n\t\t\t\tconsole.log(target, 'target');\r\n\r\n\t\t\t\tconsole.log('sequence right, mouse enter');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('default in sequence case');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tconsole.log();\r\n\t};\r\n\tconst handleMouseLeave = (event) => {\r\n\t\tconst id = event.target.id;\r\n\t\tswitch (id) {\r\n\t\t\tcase 'sequenceLeft':\r\n\t\t\t\tclearInterval(intervalId);\r\n\t\t\t\tconsole.log('sequence left, mouse leave');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'sequenceRight':\r\n\t\t\t\tclearInterval(intervalId);\r\n\t\t\t\tconsole.log('sequence right, mouse leave');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('default in sequence case');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tconsole.log();\r\n\t};\r\n\tlet cardDeck;\r\n\tif (sequence.length <= 1) {\r\n\t\tcardDeck = null;\r\n\t} else {\r\n\t\tcardDeck = [...sequence];\r\n\t\tcardDeck.shift();\r\n\t}\r\n\treturn (\r\n\t\t<section id='sequence'>\r\n\t\t\t<div\r\n\t\t\t\tid='sequenceLeft'\r\n\t\t\t\tclassName='sequenceScrolls'\r\n\t\t\t\tonMouseEnter={handleMouseEnter}\r\n\t\t\t\tonMouseLeave={handleMouseLeave}\r\n\t\t\t>\r\n\t\t\t\t<span className='arrow'></span>\r\n\t\t\t</div>\r\n\t\t\t<div className='cardContainer'>\r\n\t\t\t\t{cardDeck &&\r\n\t\t\t\t\tcardDeck.map((card, index) => (\r\n\t\t\t\t\t\t<Card key={`card${index}`} image={card} />\r\n\t\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tid='sequenceRight'\r\n\t\t\t\tclassName='sequenceScrolls'\r\n\t\t\t\tonMouseEnter={handleMouseEnter}\r\n\t\t\t\tonMouseLeave={handleMouseLeave}\r\n\t\t\t>\r\n\t\t\t\t<span className='arrow'></span>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Sequence;\r\n// create a none overflow\r\n// add hover areas to scroll through\r\n","import { roll } from '../utilities.js';\r\n\r\nconst boxDraw = (boxDrawObj, xCoord = 0, yCoord = 0) => {\r\n\tconst usingMatrix = boxDrawObj.matrix;\r\n\r\n\tif (xCoord === null && yCoord === null) {\r\n\t\tfor (let matrixRow = 0; matrixRow < usingMatrix.length; matrixRow++) {\r\n\t\t\tfor (\r\n\t\t\t\tlet matrixColumn = 0;\r\n\t\t\t\tmatrixColumn < usingMatrix[matrixRow].length;\r\n\t\t\t\tmatrixColumn++\r\n\t\t\t) {\r\n\t\t\t\tconst pixel = usingMatrix[matrixRow][matrixColumn];\r\n\t\t\t\tconst calcX = pixel.xStart + xCoord;\r\n\t\t\t\tconst calcY = pixel.yStart + yCoord;\r\n\r\n\t\t\t\tboxDrawObj.ctx.fillStyle = pixel.color;\r\n\t\t\t\tboxDrawObj.ctx.fillRect(\r\n\t\t\t\t\tcalcX,\r\n\t\t\t\t\tcalcY,\r\n\t\t\t\t\tboxDrawObj.pixelWidth,\r\n\t\t\t\t\tboxDrawObj.pixelHeight\r\n\t\t\t\t);\r\n\t\t\t\tboxDrawObj.ctx.strokeStyle = `rgb(255, 255, 255)`;\r\n\t\t\t\tboxDrawObj.ctx.strokeRect(\r\n\t\t\t\t\tcalcX,\r\n\t\t\t\t\tcalcY,\r\n\t\t\t\t\tboxDrawObj.pixelWidth,\r\n\t\t\t\t\tboxDrawObj.pixelHeight\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tfor (let matrixRow = 0; matrixRow < usingMatrix.length; matrixRow++) {\r\n\t\tfor (\r\n\t\t\tlet matrixColumn = 0;\r\n\t\t\tmatrixColumn < usingMatrix[matrixRow].length;\r\n\t\t\tmatrixColumn++\r\n\t\t) {\r\n\t\t\tconst pixel = usingMatrix[matrixRow][matrixColumn];\r\n\t\t\tconst calcX = pixel.xStart + xCoord;\r\n\t\t\tconst calcY = pixel.yStart + yCoord;\r\n\r\n\t\t\tif (xCoord === null && yCoord === null) {\r\n\t\t\t\tboxDrawObj.ctx.fillStyle = pixel.color;\r\n\t\t\t\tboxDrawObj.ctx.fillRect(\r\n\t\t\t\t\tcalcX,\r\n\t\t\t\t\tcalcY,\r\n\t\t\t\t\tboxDrawObj.pixelWidth,\r\n\t\t\t\t\tboxDrawObj.pixelHeight\r\n\t\t\t\t);\r\n\t\t\t\tboxDrawObj.ctx.strokeStyle = `rgb(255, 255, 255)`;\r\n\t\t\t\tboxDrawObj.ctx.strokeRect(\r\n\t\t\t\t\tcalcX,\r\n\t\t\t\t\tcalcY,\r\n\t\t\t\t\tboxDrawObj.pixelWidth,\r\n\t\t\t\t\tboxDrawObj.pixelHeight\r\n\t\t\t\t);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tboxDrawObj.ctx2.fillStyle = pixel.color;\r\n\t\t\tboxDrawObj.ctx2.fillRect(\r\n\t\t\t\tcalcX,\r\n\t\t\t\tcalcY,\r\n\t\t\t\tboxDrawObj.pixelWidth,\r\n\t\t\t\tboxDrawObj.pixelHeight\r\n\t\t\t);\r\n\t\t\tboxDrawObj.ctx2.strokeStyle = `rgb(255, 255, 255)`;\r\n\t\t\tboxDrawObj.ctx2.strokeRect(\r\n\t\t\t\tcalcX,\r\n\t\t\t\tcalcY,\r\n\t\t\t\tboxDrawObj.pixelWidth,\r\n\t\t\t\tboxDrawObj.pixelHeight\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn usingMatrix;\r\n};\r\nclass PixelNode {\r\n\tconstructor(xStart, yStart, color = '#020') {\r\n\t\tthis.xStart = xStart;\r\n\t\tthis.yStart = yStart;\r\n\t\tthis.color = color;\r\n\t}\r\n}\r\nclass InputNode {\r\n\tconstructor(ctx, ctx2, matrix, pixelWidth, pixelHeight) {\r\n\t\tthis.ctx = ctx;\r\n\t\tthis.ctx2 = ctx2;\r\n\t\tthis.matrix = matrix;\r\n\t\tthis.pixelWidth = pixelWidth;\r\n\t\tthis.pixelHeight = pixelHeight;\r\n\t}\r\n}\r\n\r\nconst whatToPlace = (boxDrawObj, xStart, yStart) => {\r\n\tconst rollColor = roll(3);\r\n\tlet pixel = new PixelNode(xStart, yStart);\r\n\tswitch (rollColor) {\r\n\t\tcase 1:\r\n\t\t\tpixel.color = boxDrawObj.backgroundColor;\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tpixel.color = boxDrawObj.primaryColor;\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tpixel.color = boxDrawObj.secondaryColor;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error, sorry');\r\n\t}\r\n\treturn pixel;\r\n};\r\n\r\nconst createPixelMap = (boxDrawObj, patternOverride) => {\r\n\tconst newMatrix = [];\r\n\tif (patternOverride === 'noPattern') {\r\n\t\t//this will cycle through y axis on pixel height\r\n\t\tfor (\r\n\t\t\tlet y = 0;\r\n\t\t\ty < boxDrawObj.canvasHeight;\r\n\t\t\ty += boxDrawObj.pixelHeight\r\n\t\t) {\r\n\t\t\tlet row = [];\r\n\t\t\t//this will cycle through x axis on pixel width\r\n\t\t\tfor (\r\n\t\t\t\tlet x = 0;\r\n\t\t\t\tx < boxDrawObj.canvasWidth;\r\n\t\t\t\tx += boxDrawObj.pixelWidth\r\n\t\t\t) {\r\n\t\t\t\t// console.log(`${x} starting pixel draw,`);\r\n\t\t\t\tconst pixel = whatToPlace(boxDrawObj, x, y);\r\n\t\t\t\trow.push(pixel);\r\n\t\t\t}\r\n\t\t\tnewMatrix.push(row);\r\n\t\t}\r\n\t} else {\r\n\t\t//this will cycle through y axis on pixel height\r\n\t\tfor (\r\n\t\t\tlet y = 0;\r\n\t\t\ty < boxDrawObj.drawSectionHeight;\r\n\t\t\ty += boxDrawObj.pixelHeight\r\n\t\t) {\r\n\t\t\tlet row = [];\r\n\t\t\t//this will cycle through x axis on pixel width\r\n\t\t\tfor (\r\n\t\t\t\tlet x = 0;\r\n\t\t\t\tx < boxDrawObj.drawSectionWidth;\r\n\t\t\t\tx += boxDrawObj.pixelWidth\r\n\t\t\t) {\r\n\t\t\t\t// console.log(`${x} starting pixel draw,`);\r\n\t\t\t\tconst pixel = whatToPlace(boxDrawObj, x, y);\r\n\t\t\t\trow.push(pixel);\r\n\t\t\t}\r\n\t\t\tnewMatrix.push(row);\r\n\t\t}\r\n\t}\r\n\treturn newMatrix;\r\n};\r\n\r\nconst combineMatrixTopHalf = (matrix1, matrix2) => {\r\n\tlet combinedMatrix = [];\r\n\tfor (let i = 0; i < matrix1.length; i++) {\r\n\t\tconst combine = [...matrix1[i], ...matrix2[i]];\r\n\t\tcombinedMatrix.push(combine);\r\n\t}\r\n\treturn combinedMatrix;\r\n};\r\nconst combineMatrixLeftHalf = (matrix1, matrix2) => {\r\n\treturn [...matrix1, ...matrix2];\r\n};\r\n\r\nconst findQuadrantOrder = (boxDrawObj) => {\r\n\t// console.log(boxDrawObj);\r\n\tlet order = [];\r\n\tlet quadrantArray = [];\r\n\r\n\twhile (order.length < 4) {\r\n\t\tlet test = roll(4);\r\n\t\tif (!order.includes(test)) {\r\n\t\t\tlet quadrant = {};\r\n\t\t\tswitch (test) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tquadrant.x = 0;\r\n\t\t\t\t\tquadrant.y = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tquadrant.x = boxDrawObj.drawSectionWidth;\r\n\t\t\t\t\tquadrant.y = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tquadrant.x = boxDrawObj.drawSectionWidth;\r\n\t\t\t\t\tquadrant.y = boxDrawObj.drawSectionHeight;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tquadrant.x = 0;\r\n\t\t\t\t\tquadrant.y = boxDrawObj.drawSectionHeight;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log('error in findQuadrantOrder');\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\torder.push(test);\r\n\t\t\tquadrantArray.push(quadrant);\r\n\t\t}\r\n\t}\r\n\treturn quadrantArray;\r\n};\r\n\r\nexport {\r\n\tboxDraw,\r\n\tPixelNode,\r\n\tInputNode,\r\n\tcreatePixelMap,\r\n\tcombineMatrixTopHalf,\r\n\tcombineMatrixLeftHalf,\r\n\tfindQuadrantOrder,\r\n};\r\n","import { PixelNode } from '../boxDrawingUtilities.js';\r\n\r\nconst clone = (boxDrawObj, xOffset = 0, yOffset = 0) => {\r\n\tconst usingMatrix = boxDrawObj.matrix;\r\n\tlet xPos = xOffset;\r\n\tlet yPos = yOffset;\r\n\tlet tempMatrix = [];\r\n\r\n\tfor (let matrixRow = 0; matrixRow < usingMatrix.length; matrixRow++) {\r\n\t\tlet rowArr = [];\r\n\t\tfor (\r\n\t\t\tlet matrixColumn = 0;\r\n\t\t\tmatrixColumn < usingMatrix[matrixRow].length;\r\n\t\t\tmatrixColumn++\r\n\t\t) {\r\n\t\t\tconst pixel = usingMatrix[matrixRow][matrixColumn];\r\n\t\t\tconst newPixel = new PixelNode(xPos, yPos, pixel.color);\r\n\r\n\t\t\trowArr.push(newPixel);\r\n\t\t\txPos += boxDrawObj.pixelWidth;\r\n\t\t}\r\n\t\ttempMatrix.push(rowArr);\r\n\t\txPos = xOffset;\r\n\t\tyPos += boxDrawObj.pixelHeight;\r\n\t}\r\n\tyPos = yOffset;\r\n\r\n\treturn tempMatrix;\r\n};\r\n\r\nexport default clone;\r\n","import { boxDraw, InputNode } from '../boxDrawingUtilities.js';\r\nimport clone from '../singles/clone.js';\r\n\r\nconst fullClone = (boxDrawObj) => {\r\n\tlet cloneMatrix1 = [];\r\n\tlet cloneMatrix2 = [];\r\n\tlet cloneMatrix3 = [];\r\n\r\n\tlet inputNode = new InputNode(\r\n\t\tboxDrawObj.ctx,\r\n\t\tboxDrawObj.ctx2,\r\n\t\tboxDrawObj.matrix,\r\n\t\tboxDrawObj.pixelWidth,\r\n\t\tboxDrawObj.pixelHeight\r\n\t);\r\n\r\n\tboxDraw(boxDrawObj);\r\n\r\n\tcloneMatrix1 = clone(boxDrawObj, boxDrawObj.drawSectionWidth, 0);\r\n\r\n\tinputNode.matrix = cloneMatrix1;\r\n\r\n\tboxDraw(inputNode);\r\n\r\n\tcloneMatrix2 = clone(\r\n\t\tboxDrawObj,\r\n\t\tboxDrawObj.drawSectionWidth,\r\n\t\tboxDrawObj.drawSectionHeight\r\n\t);\r\n\r\n\tinputNode.matrix = cloneMatrix2;\r\n\r\n\tboxDraw(inputNode);\r\n\r\n\tcloneMatrix3 = clone(boxDrawObj, 0, boxDrawObj.drawSectionHeight);\r\n\r\n\tinputNode.matrix = cloneMatrix3;\r\n\r\n\tboxDraw(inputNode);\r\n};\r\n\r\nexport default fullClone;\r\n","import { PixelNode } from '../boxDrawingUtilities.js';\r\n\r\nconst rotateClockwise = (boxDrawObj, xOffset = 0, yOffset = 0) => {\r\n\tconst useMatrix = boxDrawObj.matrix;\r\n\tlet xPos = xOffset;\r\n\tlet yPos = yOffset;\r\n\tlet tempMatrix = [];\r\n\tlet rotatedMatrix = [];\r\n\r\n\tfor (let column = 0; column < useMatrix[0].length; column++) {\r\n\t\tlet rowArr = [];\r\n\r\n\t\tfor (let row = useMatrix.length - 1; row >= 0; row--) {\r\n\t\t\tconst pixel = useMatrix[row][column];\r\n\t\t\tconst newPixel = new PixelNode(xPos, yPos, pixel.color);\r\n\r\n\t\t\trowArr.push(newPixel);\r\n\t\t\txPos += boxDrawObj.pixelWidth;\r\n\t\t}\r\n\t\ttempMatrix.push(rowArr);\r\n\t\txPos = xOffset;\r\n\t\tyPos += boxDrawObj.pixelHeight;\r\n\t}\r\n\tyPos = yOffset;\r\n\trotatedMatrix = [...tempMatrix];\r\n\r\n\treturn rotatedMatrix;\r\n};\r\n\r\nconst rotateCounterClockwise = (boxDrawObj, xOffset = 0, yOffset = 0) => {\r\n\tconst useMatrix = boxDrawObj.matrix;\r\n\t//loop columns reverse\r\n\t//loop over rows in order\r\n\tlet xPos = xOffset;\r\n\tlet yPos = yOffset;\r\n\tlet tempMatrix = [];\r\n\tlet rotatedMatrix = [];\r\n\r\n\tfor (let column = useMatrix[0].length - 1; column >= 0; column--) {\r\n\t\tlet rowArr = [];\r\n\r\n\t\tfor (let row = 0; row < useMatrix.length; row++) {\r\n\t\t\tconst pixel = useMatrix[row][column];\r\n\t\t\tconst newPixel = new PixelNode(xPos, yPos, pixel.color);\r\n\r\n\t\t\trowArr.push(newPixel);\r\n\t\t\txPos += boxDrawObj.pixelWidth;\r\n\t\t}\r\n\t\ttempMatrix.push(rowArr);\r\n\t\txPos = xOffset;\r\n\t\tyPos += boxDrawObj.pixelHeight;\r\n\t}\r\n\tyPos = yOffset;\r\n\trotatedMatrix = [...tempMatrix];\r\n\r\n\treturn rotatedMatrix;\r\n};\r\n\r\nexport { rotateClockwise, rotateCounterClockwise };\r\n","import { rotateClockwise } from '../singles/rotate.js';\r\nimport { boxDraw, InputNode } from '../boxDrawingUtilities.js';\r\n\r\nconst fullRotate = (boxDrawObj) => {\r\n\tlet rotatedMatrix1 = [];\r\n\tlet rotatedMatrix2 = [];\r\n\tlet rotatedMatrix3 = [];\r\n\r\n\tboxDraw(boxDrawObj);\r\n\r\n\tlet inputNode = new InputNode(\r\n\t\tboxDrawObj.ctx,\r\n\t\tboxDrawObj.ctx2,\r\n\t\tboxDrawObj.matrix,\r\n\t\tboxDrawObj.pixelWidth,\r\n\t\tboxDrawObj.pixelHeight\r\n\t);\r\n\r\n\trotatedMatrix1 = rotateClockwise(boxDrawObj);\r\n\r\n\tinputNode.matrix = rotatedMatrix1;\r\n\r\n\tboxDraw(inputNode, boxDrawObj.drawSectionWidth, 0);\r\n\r\n\trotatedMatrix2 = rotateClockwise(inputNode);\r\n\r\n\tinputNode.matrix = rotatedMatrix2;\r\n\r\n\tboxDraw(\r\n\t\tinputNode,\r\n\t\tboxDrawObj.drawSectionWidth,\r\n\t\tboxDrawObj.drawSectionHeight\r\n\t);\r\n\r\n\trotatedMatrix3 = rotateClockwise(inputNode);\r\n\r\n\tinputNode.matrix = rotatedMatrix3;\r\n\r\n\tboxDraw(inputNode, 0, boxDrawObj.drawSectionHeight);\r\n};\r\n\r\nexport default fullRotate;\r\n","import { PixelNode } from '../boxDrawingUtilities.js';\r\n\r\nconst reflectVerticalAxis = (boxDrawObj, xOffset = 0, yOffset = 0) => {\r\n\tconst useMatrix = boxDrawObj.matrix;\r\n\tlet xPos = xOffset;\r\n\tlet yPos = yOffset;\r\n\tlet tempMatrix = [];\r\n\tfor (let row = 0; row < useMatrix.length; row++) {\r\n\t\tlet rowArr = [];\r\n\t\tfor (let column = useMatrix[row].length - 1; column >= 0; column--) {\r\n\t\t\tconst pixel = useMatrix[row][column];\r\n\t\t\tconst newPixel = new PixelNode(xPos, yPos, pixel.color);\r\n\r\n\t\t\trowArr.push(newPixel);\r\n\t\t\txPos += boxDrawObj.pixelWidth;\r\n\t\t}\r\n\t\ttempMatrix.push(rowArr);\r\n\t\txPos = xOffset;\r\n\t\tyPos += boxDrawObj.pixelHeight;\r\n\t}\r\n\tyPos = yOffset;\r\n\r\n\treturn tempMatrix;\r\n};\r\n\r\nconst reflectHorizontalAxis = (boxDrawObj, xOffset = 0, yOffset = 0) => {\r\n\tconst useMatrix = boxDrawObj.matrix;\r\n\tlet xPos = xOffset;\r\n\tlet yPos = yOffset;\r\n\tlet tempMatrix = [];\r\n\tfor (let row = useMatrix.length - 1; row >= 0; row--) {\r\n\t\tlet rowArr = [];\r\n\t\tfor (let column = 0; column < useMatrix[row].length; column++) {\r\n\t\t\tconst pixel = useMatrix[row][column];\r\n\t\t\tconst newPixel = new PixelNode(xPos, yPos, pixel.color);\r\n\r\n\t\t\trowArr.push(newPixel);\r\n\t\t\txPos += boxDrawObj.pixelWidth;\r\n\t\t}\r\n\t\ttempMatrix.push(rowArr);\r\n\t\txPos = xOffset;\r\n\t\tyPos += boxDrawObj.pixelHeight;\r\n\t}\r\n\tyPos = yOffset;\r\n\r\n\treturn tempMatrix;\r\n};\r\n\r\nexport { reflectVerticalAxis, reflectHorizontalAxis };\r\n","import {\r\n\treflectVerticalAxis,\r\n\treflectHorizontalAxis,\r\n} from '../singles/reflect.js';\r\nimport {\r\n\tboxDraw,\r\n\tInputNode,\r\n\tcombineMatrixTopHalf,\r\n} from '../boxDrawingUtilities.js';\r\n\r\nconst fullReflect = (boxDrawObj) => {\r\n\tlet adjustedMatrix = [];\r\n\tlet combinedMatrix = [];\r\n\tlet reflectedMatrix = [];\r\n\r\n\tlet inputNode = new InputNode(\r\n\t\tboxDrawObj.ctx,\r\n\t\tboxDrawObj.ctx2,\r\n\t\tboxDrawObj.matrix,\r\n\t\tboxDrawObj.pixelWidth,\r\n\t\tboxDrawObj.pixelHeight\r\n\t);\r\n\r\n\tboxDraw(inputNode);\r\n\r\n\tadjustedMatrix = reflectVerticalAxis(\r\n\t\tboxDrawObj,\r\n\t\tboxDrawObj.drawSectionWidth,\r\n\t\t0\r\n\t);\r\n\r\n\tinputNode.matrix = adjustedMatrix;\r\n\r\n\tboxDraw(inputNode);\r\n\r\n\tcombinedMatrix = combineMatrixTopHalf(boxDrawObj.matrix, adjustedMatrix);\r\n\r\n\tinputNode.matrix = combinedMatrix;\r\n\r\n\treflectedMatrix = reflectHorizontalAxis(\r\n\t\tinputNode,\r\n\t\t0,\r\n\t\tboxDrawObj.drawSectionHeight\r\n\t);\r\n\r\n\tinputNode.matrix = reflectedMatrix;\r\n\r\n\tboxDraw(inputNode);\r\n};\r\n\r\nexport default fullReflect;\r\n","import { roll } from '../../utilities.js';\r\nimport {\r\n\tboxDraw,\r\n\tInputNode,\r\n\tcombineMatrixLeftHalf,\r\n\tcombineMatrixTopHalf,\r\n} from '../boxDrawingUtilities.js';\r\nimport clone from '../singles/clone.js';\r\nimport {\r\n\treflectVerticalAxis,\r\n\treflectHorizontalAxis,\r\n} from '../singles/reflect.js';\r\n\r\nconst halfReflect = (boxDrawObj) => {\r\n\tboxDraw(boxDrawObj);\r\n\tlet clonedMatrix = [];\r\n\tlet combinedMatrix = [];\r\n\tlet reflectedMatrix = [];\r\n\r\n\tlet inputNode = new InputNode(\r\n\t\tboxDrawObj.ctx,\r\n\t\tboxDrawObj.ctx2,\r\n\t\tboxDrawObj.matrix,\r\n\t\tboxDrawObj.pixelWidth,\r\n\t\tboxDrawObj.pixelHeight\r\n\t);\r\n\r\n\tconst quadrantDice = roll(2);\r\n\tswitch (quadrantDice) {\r\n\t\tcase 1:\r\n\t\t\t//horizontal reflect\r\n\t\t\tclonedMatrix = clone(boxDrawObj, boxDrawObj.drawSectionWidth, 0);\r\n\r\n\t\t\tinputNode.matrix = clonedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\r\n\t\t\tcombinedMatrix = combineMatrixTopHalf(\r\n\t\t\t\tboxDrawObj.matrix,\r\n\t\t\t\tclonedMatrix\r\n\t\t\t);\r\n\r\n\t\t\tinputNode.matrix = combinedMatrix;\r\n\r\n\t\t\treflectedMatrix = reflectHorizontalAxis(\r\n\t\t\t\tinputNode,\r\n\t\t\t\t0,\r\n\t\t\t\tboxDrawObj.drawSectionHeight\r\n\t\t\t);\r\n\r\n\t\t\tinputNode.matrix = reflectedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\t//vertical reflect\r\n\t\t\tclonedMatrix = clone(boxDrawObj, 0, boxDrawObj.drawSectionHeight);\r\n\r\n\t\t\tinputNode.matrix = clonedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\r\n\t\t\tcombinedMatrix = combineMatrixLeftHalf(\r\n\t\t\t\tboxDrawObj.matrix,\r\n\t\t\t\tclonedMatrix\r\n\t\t\t);\r\n\r\n\t\t\tinputNode.matrix = combinedMatrix;\r\n\r\n\t\t\treflectedMatrix = reflectVerticalAxis(\r\n\t\t\t\tinputNode,\r\n\t\t\t\tboxDrawObj.drawSectionWidth,\r\n\t\t\t\t0\r\n\t\t\t);\r\n\r\n\t\t\tinputNode.matrix = reflectedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in halfReflect switch');\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nexport default halfReflect;\r\n","import { boxDraw, InputNode, createPixelMap } from '../boxDrawingUtilities.js';\r\n\r\nconst noPattern = (boxDrawObj) => {\r\n\tlet inputNode = new InputNode(\r\n\t\tboxDrawObj.ctx,\r\n\t\tboxDrawObj.ctx2,\r\n\t\tboxDrawObj.matrix,\r\n\t\tboxDrawObj.pixelWidth,\r\n\t\tboxDrawObj.pixelHeight\r\n\t);\r\n\r\n\tlet getMatrix = createPixelMap(boxDrawObj, 'noPattern');\r\n\tinputNode.matrix = getMatrix;\r\n\r\n\tboxDraw(inputNode);\r\n};\r\n\r\nexport default noPattern;\r\n","import { roll } from '../../utilities.js';\r\nimport fullClone from './fullClone.js';\r\nimport fullRotate from './fullRotate.js';\r\nimport fullReflect from './fullReflect.js';\r\nimport halfReflect from './halfReflect.js';\r\nimport noPattern from './noPattern.js';\r\n\r\nconst specials = (boxDrawObj) => {\r\n\tif (!boxDrawObj.drawStyle || boxDrawObj.drawStyle === 'random') {\r\n\t\tconst dice = roll(5);\r\n\t\tswitch (dice) {\r\n\t\t\tcase 1:\r\n\t\t\t\tfullClone(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tfullRotate(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tfullReflect(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4:\r\n\t\t\t\thalfReflect(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 5:\r\n\t\t\t\tnoPattern(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('error in layout variable');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t} else {\r\n\t\tswitch (boxDrawObj.drawStyle) {\r\n\t\t\tcase 'fullClone':\r\n\t\t\t\tfullClone(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'fullReflect':\r\n\t\t\t\tfullReflect(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'fullRotate':\r\n\t\t\t\tfullRotate(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'halfReflect':\r\n\t\t\t\thalfReflect(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'noPattern':\r\n\t\t\t\tnoPattern(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('error in forcedraw of specials');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default specials;\r\n","import { roll } from '../../utilities.js';\r\nimport {\r\n\tfindQuadrantOrder,\r\n\tboxDraw,\r\n\tInputNode,\r\n} from '../boxDrawingUtilities.js';\r\nimport clone from './clone.js';\r\nimport { reflectVerticalAxis, reflectHorizontalAxis } from './reflect.js';\r\nimport { rotateClockwise, rotateCounterClockwise } from './rotate.js';\r\n\r\nconst singles = (boxDrawObj) => {\r\n\tconst quadrantDice = findQuadrantOrder(boxDrawObj);\r\n\tconst styleDice = [1, roll(3), roll(3), roll(3)];\r\n\r\n\tstyleDice.forEach((number, index) => {\r\n\t\tconst xPos = quadrantDice[index].x;\r\n\t\tconst yPos = quadrantDice[index].y;\r\n\t\tlet adjustedMatrix = [];\r\n\r\n\t\tlet inputNode = new InputNode(\r\n\t\t\tboxDrawObj.ctx,\r\n\t\t\tboxDrawObj.ctx2,\r\n\t\t\tboxDrawObj.matrix,\r\n\t\t\tboxDrawObj.pixelWidth,\r\n\t\t\tboxDrawObj.pixelHeight\r\n\t\t);\r\n\r\n\t\tswitch (number) {\r\n\t\t\tcase 1:\r\n\t\t\t\t//clone\r\n\t\t\t\tadjustedMatrix = clone(boxDrawObj, xPos, yPos);\r\n\r\n\t\t\t\tinputNode.matrix = adjustedMatrix;\r\n\r\n\t\t\t\tboxDraw(inputNode);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\t//reflect\r\n\t\t\t\tconst directionDiceReflect = roll(2); // 1 = vertical axis reflect. 2 = horizontal axis reflect\r\n\r\n\t\t\t\tdirectionDiceReflect === 1\r\n\t\t\t\t\t? (adjustedMatrix = reflectVerticalAxis(\r\n\t\t\t\t\t\t\tboxDrawObj,\r\n\t\t\t\t\t\t\txPos,\r\n\t\t\t\t\t\t\tyPos\r\n\t\t\t\t\t  ))\r\n\t\t\t\t\t: (adjustedMatrix = reflectHorizontalAxis(\r\n\t\t\t\t\t\t\tboxDrawObj,\r\n\t\t\t\t\t\t\txPos,\r\n\t\t\t\t\t\t\tyPos\r\n\t\t\t\t\t  ));\r\n\r\n\t\t\t\tinputNode.matrix = adjustedMatrix;\r\n\r\n\t\t\t\tboxDraw(inputNode);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\t//rotate\r\n\t\t\t\tconst directionDiceRotate = roll(2); // 1 = clockwise rotate. 2 = counter clockwise rotate\r\n\r\n\t\t\t\tdirectionDiceRotate === 1\r\n\t\t\t\t\t? (adjustedMatrix = rotateClockwise(boxDrawObj, xPos, yPos))\r\n\t\t\t\t\t: (adjustedMatrix = rotateCounterClockwise(\r\n\t\t\t\t\t\t\tboxDrawObj,\r\n\t\t\t\t\t\t\txPos,\r\n\t\t\t\t\t\t\tyPos\r\n\t\t\t\t\t  ));\r\n\r\n\t\t\t\tinputNode.matrix = adjustedMatrix;\r\n\r\n\t\t\t\tboxDraw(inputNode);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('error in number variable');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t});\r\n};\r\n\r\nexport default singles;\r\n","import { roll } from '../../utilities.js';\r\nimport { InputNode } from '../boxDrawingUtilities.js';\r\nimport {\r\n\tboxDraw,\r\n\tcombineMatrixTopHalf,\r\n\tcombineMatrixLeftHalf,\r\n} from '../boxDrawingUtilities.js';\r\nimport clone from '../singles/clone.js';\r\nimport {\r\n\treflectHorizontalAxis,\r\n\treflectVerticalAxis,\r\n} from '../singles/reflect.js';\r\nimport { rotateClockwise, rotateCounterClockwise } from '../singles/rotate.js';\r\n\r\nconst doubles = (boxDrawObj) => {\r\n\tboxDraw(boxDrawObj);\r\n\tconst quadrantDice = roll(2); // 1 = q2. 2 = q3\r\n\tconst styleDice = roll(3); // 1= clone, 2= rotate, 3= reflect\r\n\tconst doubleDice = roll(3); // 1= clone, 2= rotate x2, 3= reflect\r\n\tlet directionDice = 0;\r\n\tlet adjustedMatrix = [];\r\n\r\n\tconst quadrant =\r\n\t\tquadrantDice === 1\r\n\t\t\t? { x: boxDrawObj.drawSectionWidth, y: 0 }\r\n\t\t\t: { x: 0, y: boxDrawObj.drawSectionHeight };\r\n\tconst quadrantDouble =\r\n\t\tquadrantDice === 1\r\n\t\t\t? { x: 0, y: boxDrawObj.drawSectionHeight }\r\n\t\t\t: { x: boxDrawObj.drawSectionWidth, y: 0 };\r\n\r\n\tlet inputNode = new InputNode(\r\n\t\tboxDrawObj.ctx,\r\n\t\tboxDrawObj.ctx2,\r\n\t\tboxDrawObj.matrix,\r\n\t\tboxDrawObj.pixelWidth,\r\n\t\tboxDrawObj.pixelHeight\r\n\t);\r\n\r\n\tswitch (styleDice) {\r\n\t\tcase 1:\r\n\t\t\t//clone\r\n\t\t\tadjustedMatrix = clone(boxDrawObj, quadrant.x, quadrant.y);\r\n\r\n\t\t\tinputNode.matrix = adjustedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\t//rotate\r\n\t\t\tdirectionDice = roll(2); // 1 = clockwise. 2 = counter clockwise\r\n\t\t\tdirectionDice === 1\r\n\t\t\t\t? (adjustedMatrix = rotateClockwise(\r\n\t\t\t\t\t\tinputNode,\r\n\t\t\t\t\t\tquadrant.x,\r\n\t\t\t\t\t\tquadrant.y\r\n\t\t\t\t  ))\r\n\t\t\t\t: (adjustedMatrix = rotateCounterClockwise(\r\n\t\t\t\t\t\tinputNode,\r\n\t\t\t\t\t\tquadrant.x,\r\n\t\t\t\t\t\tquadrant.y\r\n\t\t\t\t  ));\r\n\r\n\t\t\tinputNode.matrix = adjustedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\t//reflect\r\n\r\n\t\t\tdirectionDice = roll(2); // 1 = vertical axis reflect. 2 = horizontal axis reflect\r\n\t\t\tdirectionDice === 1\r\n\t\t\t\t? (adjustedMatrix = reflectVerticalAxis(\r\n\t\t\t\t\t\tinputNode,\r\n\t\t\t\t\t\tquadrant.x,\r\n\t\t\t\t\t\tquadrant.y\r\n\t\t\t\t  ))\r\n\t\t\t\t: (adjustedMatrix = reflectHorizontalAxis(\r\n\t\t\t\t\t\tinputNode,\r\n\t\t\t\t\t\tquadrant.x,\r\n\t\t\t\t\t\tquadrant.y\r\n\t\t\t\t  ));\r\n\r\n\t\t\tinputNode.matrix = adjustedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in style dice variable');\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tlet combinedMatrix = [];\r\n\tquadrantDice === 1\r\n\t\t? (combinedMatrix = combineMatrixTopHalf(\r\n\t\t\t\tboxDrawObj.matrix,\r\n\t\t\t\tadjustedMatrix\r\n\t\t  ))\r\n\t\t: (combinedMatrix = combineMatrixLeftHalf(\r\n\t\t\t\tboxDrawObj.matrix,\r\n\t\t\t\tadjustedMatrix\r\n\t\t  ));\r\n\tlet rotatedMatrix = [];\r\n\tlet reflectedMatrix = [];\r\n\r\n\tinputNode.matrix = combinedMatrix;\r\n\r\n\tswitch (doubleDice) {\r\n\t\tcase 1:\r\n\t\t\t//clone\r\n\r\n\t\t\tboxDraw(inputNode, quadrantDouble.x, quadrantDouble.y);\r\n\t\t\tbreak;\r\n\t\tcase 2: //quadrantDice === 1, combine top\r\n\t\t\t//rotate\r\n\r\n\t\t\trotatedMatrix = rotateClockwise(inputNode);\r\n\t\t\tinputNode.matrix = rotatedMatrix;\r\n\t\t\trotatedMatrix = rotateClockwise(\r\n\t\t\t\tinputNode,\r\n\t\t\t\tquadrantDouble.x,\r\n\t\t\t\tquadrantDouble.y\r\n\t\t\t); // rotate twice\r\n\r\n\t\t\tinputNode.matrix = rotatedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\t\t\tbreak;\r\n\t\tcase 3: // quadrantDice === 1, reflect horizontal : reflect vertical\r\n\t\t\t//reflect\r\n\t\t\treflectedMatrix =\r\n\t\t\t\tquadrantDice === 1\r\n\t\t\t\t\t? reflectHorizontalAxis(\r\n\t\t\t\t\t\t\tinputNode,\r\n\t\t\t\t\t\t\tquadrantDouble.x,\r\n\t\t\t\t\t\t\tquadrantDouble.y\r\n\t\t\t\t\t  )\r\n\t\t\t\t\t: reflectVerticalAxis(\r\n\t\t\t\t\t\t\tinputNode,\r\n\t\t\t\t\t\t\tquadrantDouble.x,\r\n\t\t\t\t\t\t\tquadrantDouble.y\r\n\t\t\t\t\t  );\r\n\r\n\t\t\tinputNode.matrix = reflectedMatrix;\r\n\r\n\t\t\tboxDraw(inputNode);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in style dice variable');\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\nexport default doubles;\r\n","import specials from './specials/specials.js';\r\nimport singles from './singles/singles.js';\r\nimport doubles from './doubles/doubles.js';\r\nimport { roll, clear, randomColor } from '../utilities.js';\r\nimport { boxDraw, createPixelMap } from './boxDrawingUtilities.js';\r\n\r\nimport { createCanvasTemplate, createCanvasDraw } from '../utilities.js';\r\n\r\nconst BoxDrawing = (forceDesignObj) => {\r\n\t// if(forceDesignObj)\r\n\tlet { dimensions, boxDrawObj } = forceDesignObj;\r\n\tlet width, height;\r\n\tif (dimensions) {\r\n\t\twidth = dimensions.width;\r\n\t\theight = dimensions.height;\r\n\t}\r\n\r\n\tconst canvasWidth = width ? width : 500;\r\n\tconst canvasHeight = height ? height : 500;\r\n\tconst matrix = [];\r\n\tconst boxCount = boxDrawObj.boxCount || 10;\r\n\tconst pixelWidth = canvasWidth / boxCount || 250;\r\n\tconst pixelHeight = canvasHeight / boxCount || 250;\r\n\tconst drawSectionWidth = Math.floor(canvasWidth / 2);\r\n\tconst drawSectionHeight = Math.floor(canvasHeight / 2);\r\n\r\n\tconst primaryToggle = boxDrawObj.primaryToggle || 'default';\r\n\tconst secondaryToggle = boxDrawObj.secondaryToggle || 'default';\r\n\tconst backgroundToggle = boxDrawObj.backgroundToggle || 'default';\r\n\r\n\tconst [canvasTemplate, ctx] = createCanvasTemplate(\r\n\t\tdrawSectionWidth,\r\n\t\tdrawSectionHeight\r\n\t);\r\n\tconst [canvasDraw, ctx2] = createCanvasDraw(canvasWidth, canvasHeight);\r\n\r\n\tswitch (primaryToggle) {\r\n\t\tcase 'default':\r\n\t\t\tboxDrawObj.primaryColor = '#000000';\r\n\t\t\tbreak;\r\n\t\tcase 'random':\r\n\t\t\tboxDrawObj.primaryColor = randomColor();\r\n\t\t\tbreak;\r\n\t\tcase 'choose':\r\n\t\t\tlet inputColor;\r\n\t\t\tif (!boxDrawObj.primaryColor) {\r\n\t\t\t\tinputColor = '#000000';\r\n\t\t\t} else {\r\n\t\t\t\tinputColor = boxDrawObj.primaryColor;\r\n\t\t\t}\r\n\t\t\tboxDrawObj.primaryColor = inputColor;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in primarytoggle');\r\n\t\t\tboxDrawObj.primaryColor = '#000000';\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tswitch (secondaryToggle) {\r\n\t\tcase 'default':\r\n\t\tcase 'random':\r\n\t\t\tboxDrawObj.secondaryColor = randomColor(); //new color seed on refresh;\r\n\t\t\tbreak;\r\n\t\tcase 'choose':\r\n\t\t\tlet inputColor;\r\n\t\t\tif (!boxDrawObj.secondaryColor) {\r\n\t\t\t\tinputColor = '#8C00FF';\r\n\t\t\t} else {\r\n\t\t\t\tinputColor = boxDrawObj.secondaryColor;\r\n\t\t\t}\r\n\t\t\tboxDrawObj.secondaryColor = inputColor;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in secondaryToggle');\r\n\t\t\tboxDrawObj.secondaryColor = randomColor();\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tswitch (backgroundToggle) {\r\n\t\tcase 'default':\r\n\t\t\tboxDrawObj.backgroundColor = '#ffffff00';\r\n\t\t\tbreak;\r\n\t\tcase 'random':\r\n\t\t\tboxDrawObj.backgroundColor = randomColor();\r\n\t\t\tbreak;\r\n\t\tcase 'choose':\r\n\t\t\tlet inputColor;\r\n\t\t\tif (!boxDrawObj.backgroundColor) {\r\n\t\t\t\tinputColor = '#ffffff00';\r\n\t\t\t} else {\r\n\t\t\t\tinputColor = boxDrawObj.backgroundColor;\r\n\t\t\t}\r\n\t\t\tboxDrawObj.backgroundColor = inputColor;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in backgroundToggle');\r\n\t\t\tboxDrawObj.backgroundColor = '#ffffff00';\r\n\t\t\tbreak;\r\n\t}\r\n\t//build up input obj\r\n\tboxDrawObj = {\r\n\t\t...boxDrawObj,\r\n\t\tcanvasWidth,\r\n\t\tcanvasHeight,\r\n\t\tmatrix,\r\n\t\tboxCount,\r\n\t\tpixelWidth,\r\n\t\tpixelHeight,\r\n\t\tdrawSectionWidth,\r\n\t\tdrawSectionHeight,\r\n\t\tcanvasTemplate,\r\n\t\tctx,\r\n\t\tcanvasDraw,\r\n\t\tctx2,\r\n\t};\r\n\r\n\tif (boxDrawObj.canvasDraw.getContext) {\r\n\t\t//clear previous matrix\r\n\t\tboxDrawObj.matrix = clear(boxDrawObj);\r\n\t\t//create new matrix\r\n\t\tboxDrawObj.matrix = [...createPixelMap(boxDrawObj)];\r\n\r\n\t\tboxDraw(boxDrawObj); // draw on ctx not ctx2\r\n\r\n\t\tswitch (boxDrawObj.drawStyle || 'random') {\r\n\t\t\tcase 'random':\r\n\t\t\t\tlet dice = roll(3);\r\n\t\t\t\tswitch (dice) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tspecials(boxDrawObj);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tsingles(boxDrawObj);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tdoubles(boxDrawObj);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.log('error in layout variable no dice');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tspecials(boxDrawObj);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t} else {\r\n\t\talert('You need Safari or Firefox 1.5+ to see this demo.');\r\n\t}\r\n\t//convert canvas to an image\r\n\t//return image\r\n\t// return ctx2;\r\n\r\n\tconst dataURL = boxDrawObj.canvasDraw.toDataURL('image/png');\r\n\treturn dataURL;\r\n};\r\n\r\nexport { BoxDrawing };\r\n","import { roll } from '../../utilities.js';\r\nconst getStrokeWidth = (shapeCount) => {\r\n    let dice;\r\n    switch (shapeCount) {\r\n        case shapeCount > 100:\r\n            dice = 1;\r\n            break;\r\n        case shapeCount > 90:\r\n            dice = roll(2);\r\n            break;\r\n        case shapeCount > 60:\r\n            dice = roll(3);\r\n            break;\r\n        case shapeCount > 40:\r\n            dice = roll(4);\r\n            break;\r\n        default:\r\n            dice = roll(5);\r\n            break;\r\n    }\r\n    return dice;\r\n};\r\n\r\nexport default getStrokeWidth;\r\n","import { randomColor, lightColor, darkColor } from '../../utilities.js';\r\n\r\nconst getColorType = (inputs) => {\r\n    if (inputs.clearSwitch) {\r\n        return randomColor();\r\n    }\r\n\r\n    if (inputs.blendMode === 'screen') {\r\n        return darkColor(inputs.shapeCount);\r\n    } else if (inputs.blendMode === 'multiply') {\r\n        return lightColor(inputs.shapeCount);\r\n    } else {\r\n        return randomColor();\r\n    }\r\n    // return inputs;\r\n};\r\nexport default getColorType;\r\n","import { coinFlip } from '../../utilities.js';\r\nimport getStrokeWidth from './_getStrokeWidth.js';\r\nimport getColorType from './_getColorType.js';\r\n\r\nconst checkIndividualSwitches = (type, inputs) => {\r\n    if (!type) {\r\n        console.log('error in checkIndividual switch, no type');\r\n        return inputs;\r\n    }\r\n    if (type === 'clear') {\r\n        if (inputs.clearIndividual) {\r\n            inputs.clearSwitch = coinFlip();\r\n        }\r\n    }\r\n    if (type === 'fill') {\r\n        // if (inputs.fillIndividual) {\r\n        //     inputs.fillSwitch = coinFlip();\r\n        // }\r\n        if (inputs.fillSwitch) {\r\n            if (inputs.fillColorIndividual) {\r\n                inputs.fillColor = getColorType(inputs);\r\n            }\r\n        }\r\n    }\r\n    if (type === 'stroke') {\r\n        // if (inputs.strokeIndividual) {\r\n        //     inputs.strokeSwitch = coinFlip();\r\n        // }\r\n        if (inputs.strokeSwitch) {\r\n            if (inputs.strokeColorIndividual) {\r\n                inputs.strokeColor = getColorType(inputs);\r\n            }\r\n            if (inputs.strokeWidthIndividual) {\r\n                inputs.strokeWidth = getStrokeWidth(inputs.shapeCount);\r\n            }\r\n        }\r\n    }\r\n\r\n    return inputs;\r\n};\r\nexport default checkIndividualSwitches;\r\n","// import { ctx2 } from '../../MandalaDrawing.js';\r\n// import { roll } from '../../../utilities.js';\r\n\r\nconst starburst = (inputs) => {\r\n\t//starburst\r\n\tinputs.ctx2.save();\r\n\tinputs.ctx2.moveTo(inputs.pathRadius - inputs.shapeSize, 0);\r\n\tinputs.ctx2.lineTo(inputs.shapeSize, 0);\r\n\tinputs.ctx2.restore();\r\n\t//starburst\r\n};\r\nconst slant = (inputs) => {\r\n\t//slant\r\n\tinputs.ctx2.save();\r\n\tinputs.ctx2.moveTo(\r\n\t\tinputs.pathRadius - inputs.shapeSize,\r\n\t\tinputs.pathRadius - inputs.shapeSize\r\n\t);\r\n\tinputs.ctx2.lineTo(-inputs.shapeSize / 2, inputs.shapeSize / 2);\r\n\tinputs.ctx2.restore();\r\n\t// ctx2.stroke();\r\n\t//slant\r\n};\r\n\r\nexport { starburst, slant };\r\n","// import { ctx2 } from '../../mandalaDrawing.js';\r\nimport checkIndividualSwitches from '../_checkIndividualSwitches.js';\r\nimport { slant, starburst } from './drawLine.js';\r\n\r\nconst clearLoop = (inputs) => {\r\n\tconst shapeFunction = inputs.shapeArr[inputs.currentLoop - 1];\r\n\tif (shapeFunction === slant || shapeFunction === starburst) return;\r\n\r\n\tfor (let clearShape = 1; clearShape <= inputs.shapeCount; clearShape++) {\r\n\t\tinputs = checkIndividualSwitches('clear', inputs);\r\n\r\n\t\tinputs.ctx2.globalCompositeOperation = 'destination-out';\r\n\t\tinputs.ctx2.beginPath();\r\n\t\tshapeFunction(inputs);\r\n\t\tinputs.ctx2.fillStyle = inputs.color;\r\n\t\tinputs.ctx2.fill();\r\n\t\tinputs.ctx2.closePath();\r\n\t\tinputs.ctx2.globalCompositeOperation = 'source-over';\r\n\t\tinputs.ctx2.rotate((2 * Math.PI) / inputs.shapeCount);\r\n\t}\r\n};\r\n\r\nexport default clearLoop;\r\n","// import { ctx2 } from '../../mandalaDrawing.js';\r\nimport checkIndividualSwitches from '../_checkIndividualSwitches.js';\r\nimport { slant, starburst } from './drawLine.js';\r\n\r\nconst fillLoop = (inputs) => {\r\n\tconst shapeFunction = inputs.shapeArr[inputs.currentLoop - 1];\r\n\tif (shapeFunction === slant || shapeFunction === starburst) return;\r\n\tfor (let fillShape = 1; fillShape <= inputs.shapeCount; fillShape++) {\r\n\t\tinputs = checkIndividualSwitches('fill', inputs);\r\n\r\n\t\tinputs.ctx2.globalCompositeOperation = inputs.blendMode; // great for clear first\r\n\t\t// ctx2.globalCompositeOperation = 'multiply'; // great for clear first\r\n\t\t// ctx2.globalCompositeOperation = 'screen'; // also good option for both\r\n\t\t// ctx2.globalCompositeOperation = 'difference'; // cool chaos option both ways\r\n\t\t// ctx2.globalCompositeOperation = inputs.blendMode || 'source-over';\r\n\t\t// ctx2.globalCompositeOperation = 'source-over';\r\n\t\tinputs.ctx2.beginPath();\r\n\t\tshapeFunction(inputs);\r\n\t\tinputs.ctx2.fillStyle = inputs.fillColor;\r\n\t\tinputs.ctx2.fill();\r\n\t\tinputs.ctx2.closePath();\r\n\t\tinputs.ctx2.globalCompositeOperation = 'source-over';\r\n\t\tinputs.ctx2.rotate((2 * Math.PI) / inputs.shapeCount);\r\n\t}\r\n};\r\n\r\nexport default fillLoop;\r\n","// import { ctx2 } from '../../mandalaDrawing.js';\r\nimport checkIndividualSwitches from '../_checkIndividualSwitches.js';\r\n\r\nconst strokeLoop = (inputs) => {\r\n\tconst shapeFunction = inputs.shapeArr[inputs.currentLoop - 1];\r\n\r\n\tfor (let strokeShape = 1; strokeShape <= inputs.shapeCount; strokeShape++) {\r\n\t\tinputs = checkIndividualSwitches('stroke', inputs);\r\n\r\n\t\tinputs.ctx2.globalCompositeOperation = 'source-over';\r\n\t\tinputs.ctx2.beginPath();\r\n\t\tshapeFunction(inputs);\r\n\r\n\t\tinputs.ctx2.lineWidth = inputs.strokeWidth;\r\n\t\tinputs.ctx2.strokeStyle = inputs.strokeColor;\r\n\t\tinputs.ctx2.stroke();\r\n\t\tinputs.ctx2.closePath();\r\n\t\tinputs.ctx2.globalCompositeOperation = 'source-over';\r\n\t\tinputs.ctx2.rotate((2 * Math.PI) / inputs.shapeCount);\r\n\t}\r\n};\r\n// ctx2.beginPath();\r\n// drawCircle(shapeSize, pathRadius);\r\n// ctx2.lineWidth = 1;\r\n// ctx2.strokeStyle = randomColorValue;\r\n// ctx2.stroke();\r\n// ctx2.closePath();\r\n// ctx2.rotate((2 * Math.PI) / inputs.shapeCount);\r\n\r\nexport default strokeLoop;\r\n","import { roll, rollRange, randomColor, lightColor } from '../../utilities.js';\r\n\r\nimport checkIndividualSwitches from '../functionPool/_checkIndividualSwitches.js';\r\n\r\n// import { ctx2, halfWidth, halfHeight } from '../mandalaDrawing.js';\r\n\r\nimport clearLoop from '../functionPool/draw/clearLoop.js';\r\nimport fillLoop from '../functionPool/draw/fillLoop.js';\r\nimport strokeLoop from '../functionPool/draw/strokeLoop.js';\r\n\r\nconst loop = (inputs) => {\r\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ check clear fill stroke ~~~~~~~~~~~\r\n\r\n\tinputs.ctx2.save();\r\n\tinputs.ctx2.translate(inputs.halfWidth, inputs.halfHeight); // move to center\r\n\r\n\tinputs.clearSwitch && clearLoop(inputs);\r\n\r\n\tinputs.fillSwitch && fillLoop(inputs);\r\n\r\n\tinputs.strokeSwitch && strokeLoop(inputs);\r\n\r\n\tinputs.ctx2.restore();\r\n\t//******MOVE CENTER POINT BACK*********** */\r\n\t//******ENDING DRAW*********** */\r\n\t//******ENDING DRAW*********** */\r\n\t//******ENDING DRAW*********** */\r\n\t//******ENDING DRAW*********** */\r\n\treturn inputs;\r\n};\r\n\r\nexport default loop;\r\n","// import { ctx2, width, height } from '../../mandalaDrawing.js';\r\n\r\nconst clearDrawingArea = (inputs) => {\r\n\tinputs.ctx2.clearRect(0, 0, inputs.width, inputs.height);\r\n};\r\n\r\nexport default clearDrawingArea;\r\n","// import { ctx2, width, height } from '../../mandalaDrawing.js';\r\nconst drawBackground = (inputs) => {\r\n\tinputs.ctx2.rect(0, 0, inputs.width, inputs.height);\r\n\tinputs.ctx2.fillStyle = '#fff';\r\n\tinputs.ctx2.fill();\r\n};\r\nexport default drawBackground;\r\n","import { rollRange } from '../../utilities.js';\r\nimport drawBackground from './draw/drawBackground.js';\r\nimport getColorType from './_getColorType.js';\r\n\r\nconst getBackgroundStats = (inputs) => {\r\n\tinputs.shapeCount = rollRange(inputs.minShapeCount, inputs.maxShapeCount);\r\n\tinputs.pathRadius = rollRange(inputs.maxPathRadius, inputs.maxFullPath);\r\n\tinputs.shapeSize = inputs.pathRadius;\r\n\t// //****************INSIDE FIRST ROLL****************\r\n\t// //****************INSIDE FIRST ROLL****************\r\n\t// console.log(inputs);\r\n\t// force white background\r\n\tif (inputs.drawType === 'outline') {\r\n\t\tdrawBackground(inputs);\r\n\t}\r\n\tif (inputs.customBackgroundSwitch) {\r\n\t\tinputs.fillColor = inputs.customBackgroundColor;\r\n\t\tinputs.strokeColor = inputs.customStrokeColor;\r\n\t} else {\r\n\t\tinputs.fillColor = getColorType(inputs);\r\n\t\tinputs.strokeColor = getColorType(inputs);\r\n\t}\r\n\r\n\tinputs.fillSwitch = true;\r\n\tinputs.backgroundLoopSwitch = false; // switch off\r\n\treturn inputs;\r\n};\r\nexport default getBackgroundStats;\r\n","import { lightColor, coinFlip, roll } from '../../utilities.js';\r\nimport getStrokeWidth from './_getStrokeWidth.js';\r\nimport getColorType from './_getColorType.js';\r\n\r\nconst checkLoopSwitches = (inputs) => {\r\n    //clear\r\n    if (inputs.clearRandomLoops) {\r\n        inputs.clearSwitch = coinFlip();\r\n    }\r\n    //clear\r\n    //fill\r\n    if (inputs.FillRandomLoops) {\r\n        inputs.fillSwitch = coinFlip();\r\n    }\r\n    if (inputs.fillSwitch) {\r\n        if (inputs.fillColorRandomLoops) {\r\n            inputs.fillColor = getColorType(inputs);\r\n        }\r\n    }\r\n    //fill\r\n    //stroke\r\n    if (inputs.strokeRandomLoops) {\r\n        inputs.strokeSwitch = coinFlip();\r\n    }\r\n    if (inputs.strokeSwitch) {\r\n        if (inputs.strokeColorRandomLoops) {\r\n            inputs.strokeColor = getColorType(inputs);\r\n            //chance for randomIndividual color to be a single loop choice\r\n            inputs.strokeColorIndividual = roll(10) === 1 ? true : false;\r\n        }\r\n        if (inputs.strokeWidthRandomLoops) {\r\n            inputs.strokeWidth = getStrokeWidth(inputs.shapeCount);\r\n            //chance for randomIndividual width to be a single loop choice\r\n            inputs.strokeWidthIndividual = roll(10) === 1 ? true : false;\r\n        }\r\n    }\r\n    //stroke\r\n    //individual\r\n    if (inputs.strokeIndividual) {\r\n        inputs.strokeSwitch = true;\r\n    }\r\n    if (inputs.fillIndividual) {\r\n        inputs.fillSwitch = true;\r\n    }\r\n    //individual\r\n\r\n    return inputs;\r\n};\r\nexport default checkLoopSwitches;\r\n","import { rollRange } from '../../utilities.js';\r\n\r\nconst checkShapeSpacing = (inputs) => {\r\n    let newPath = inputs.pathRadius;\r\n    let improperSpacing = inputs.shapeSize - inputs.pathRadius;\r\n\r\n    while (improperSpacing >= -5 && improperSpacing <= 5) {\r\n        console.log('improperspacing while loop, changing pathRadius variable');\r\n\r\n        newPath = rollRange(inputs.minPathRadius, inputs.maxPathRadius);\r\n        improperSpacing = newPath - inputs.pathRadius;\r\n    }\r\n    inputs.pathRadius = newPath;\r\n    return inputs;\r\n};\r\n\r\nexport default checkShapeSpacing;\r\n","import { rollRange, lightColor, coinFlip } from '../../utilities.js';\r\nimport checkLoopSwitches from './_checkLoopSwitches.js';\r\n\r\nimport checkShapeSpacing from './_checkShapeSpacing.js';\r\n\r\nconst getFollowingLoopStats = (inputs) => {\r\n\t//****************INSIDE OTHER ROLLS****************\r\n\t//          things changing per loop\r\n\t//****************INSIDE OTHER ROLLS****************\r\n\t//default\r\n\tlet definedShapeRange = inputs.maxShapeSize * inputs.percent;\r\n\t//if user selected a min shape size\r\n\tif (inputs.minShapeSize) {\r\n\t\tdefinedShapeRange = rollRange(inputs.minShapeSize, inputs.maxShapeSize);\r\n\t}\r\n\r\n\tinputs.pathRadius = rollRange(inputs.minPathRadius, inputs.maxPathRadius);\r\n\tinputs.shapeSize = definedShapeRange;\r\n\tinputs.shapeCount = rollRange(inputs.minShapeCount, inputs.maxShapeCount);\r\n\tinputs = checkShapeSpacing(inputs);\r\n\r\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ check clear fill stroke ~~~~~~~~~~~\r\n\tinputs = checkLoopSwitches(inputs);\r\n\t//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ check clear fill stroke ~~~~~~~~~~~\r\n\tif (inputs.customBackgroundSwitch) {\r\n\t\tinputs.fillColor = inputs.customBackgroundColor;\r\n\t\tinputs.strokeColor = inputs.customStrokeColor;\r\n\t}\r\n\r\n\treturn inputs;\r\n};\r\n\r\nexport default getFollowingLoopStats;\r\n","// import { ctx2 } from '../../MandalaDrawing.js';\r\n\r\nconst square = (inputs) => {\r\n\t// ctx.rect(x, y, width, height);\r\n\tinputs.ctx2.rect(\r\n\t\tinputs.shapeSize / 2,\r\n\t\tinputs.pathRadius,\r\n\t\t-inputs.shapeSize,\r\n\t\t-inputs.shapeSize\r\n\t);\r\n};\r\nconst diamond = (inputs) => {\r\n\tinputs.ctx2.save();\r\n\tinputs.ctx2.rotate(Math.PI / 4);\r\n\tinputs.ctx2.rect(\r\n\t\tinputs.pathRadius,\r\n\t\tinputs.pathRadius,\r\n\t\t-inputs.shapeSize,\r\n\t\t-inputs.shapeSize\r\n\t);\r\n\tinputs.ctx2.restore();\r\n};\r\n\r\nexport { square, diamond };\r\n","// import { ctx2 } from '../../MandalaDrawing.js';\r\n\r\nconst circle = (inputs) => {\r\n\tinputs.ctx2.arc(\r\n\t\t0,\r\n\t\tinputs.pathRadius,\r\n\t\tinputs.shapeSize,\r\n\t\t0,\r\n\t\t2 * Math.PI,\r\n\t\tfalse\r\n\t);\r\n};\r\n\r\nconst oval = (inputs) => {\r\n\t// ctx.ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle [, anticlockwise]);\r\n\tinputs.ctx2.ellipse(\r\n\t\t0,\r\n\t\tinputs.pathRadius,\r\n\t\tinputs.shapeSize / 5,\r\n\t\tinputs.shapeSize,\r\n\t\t0,\r\n\t\t0,\r\n\t\t2 * Math.PI\r\n\t);\r\n};\r\n\r\nexport { circle, oval };\r\n","import { roll } from '../../utilities.js';\r\nimport { slant, starburst } from './draw/drawLine.js';\r\nimport { square, diamond } from './draw/drawSquare.js';\r\nimport { circle, oval } from './draw/drawEllipse.js';\r\n\r\nconst getShapeFunction = (inputs) => {\r\n\tconst diceRange = 3; // length of cases when ready\r\n\tlet dice;\r\n\t//forceNumber should increment, lets the invoke call the case\r\n\tif (inputs.shapeNumber) {\r\n\t\twhile (inputs.shapeNumber && inputs.shapeNumber > diceRange) {\r\n\t\t\tinputs.shapeNumber = inputs.shapeNumber - diceRange;\r\n\t\t}\r\n\t\tdice = inputs.shapeNumber;\r\n\t} else if (inputs.customShape) {\r\n\t\t// debugger;\r\n\t\tswitch (inputs.customShape) {\r\n\t\t\tcase 'circle':\r\n\t\t\t\treturn circle;\r\n\t\t\tcase 'oval':\r\n\t\t\t\treturn oval;\r\n\t\t\tcase 'square':\r\n\t\t\t\treturn square;\r\n\t\t\tcase 'diamond':\r\n\t\t\t\treturn diamond;\r\n\t\t\tcase 'starburst':\r\n\t\t\t\treturn starburst;\r\n\t\t\tcase 'slant':\r\n\t\t\t\treturn slant;\r\n\t\t\tcase 'noLine':\r\n\t\t\t\tdice = roll(2);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('default in customshape, get shapefunction');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t} else {\r\n\t\tdice = roll(3);\r\n\t}\r\n\r\n\tswitch (dice) {\r\n\t\tcase 1: // draw ellipse\r\n\t\t\tconst ellipseDice = roll(2);\r\n\t\t\t// ellipseDice = 2;\r\n\t\t\tswitch (ellipseDice) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\treturn circle;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\treturn oval;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log('error in getShapeFunction ellipse');\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t// return drawCircle;\r\n\t\tcase 2: // draw square\r\n\t\t\tlet squareDice = roll(2);\r\n\t\t\tswitch (squareDice) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\treturn square;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\treturn diamond;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log('error in getShapeFunction square');\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\tcase 3: // draw line\r\n\t\t\tlet lineDice = roll(2);\r\n\t\t\tswitch (lineDice) {\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\treturn starburst;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\treturn slant;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log('error in getShapeFunction line');\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in getShapeType');\r\n\t\t\treturn;\r\n\t}\r\n};\r\nexport default getShapeFunction;\r\n","import { roll } from '../../utilities.js';\r\nimport getShapeFunction from './_getShapeFunction.js';\r\n\r\nconst getShapeArr = (inputs) => {\r\n\tlet shapeStyleDice;\r\n\r\n\tif (inputs.shapeType) {\r\n\t\tif (inputs.shapeType === 'random') shapeStyleDice = 1;\r\n\t\tif (inputs.shapeType === 'same') shapeStyleDice = 2;\r\n\t\tif (inputs.shapeType === 'increment') shapeStyleDice = 3;\r\n\t} else {\r\n\t\tshapeStyleDice = roll(3);\r\n\t}\r\n\tlet shapeArr = [];\r\n\tswitch (shapeStyleDice) {\r\n\t\tcase 1:\r\n\t\t\tfor (let loop = 0; loop < inputs.loopCount; loop++) {\r\n\t\t\t\tshapeArr.push(getShapeFunction(inputs));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tconst sameShape = getShapeFunction(inputs);\r\n\t\t\tfor (let loop = 0; loop < inputs.loopCount; loop++) {\r\n\t\t\t\tshapeArr.push(sameShape);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tfor (let loop = 0; loop < inputs.loopCount; loop++) {\r\n\t\t\t\tinputs.shapeNumber = loop + 1;\r\n\t\t\t\tshapeArr.push(getShapeFunction(inputs));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in getShapeArr');\r\n\t\t\tbreak;\r\n\t}\r\n\treturn shapeArr;\r\n};\r\n\r\nexport default getShapeArr;\r\n","import getColorType from './_getColorType.js';\r\n\r\nconst checkResetBackgroundSwitches = (inputs) => {\r\n    if (inputs.clearAll) {\r\n        inputs.clearSwitch = true;\r\n    } else {\r\n        inputs.clearSwitch = false;\r\n    }\r\n    if (inputs.fillAll) {\r\n        inputs.fillSwitch = true;\r\n\r\n        if (inputs.fillColorAll) {\r\n            inputs.fillColor = getColorType(inputs);\r\n        }\r\n    } else {\r\n        inputs.fillSwitch = false;\r\n    }\r\n    if (inputs.strokeAll) {\r\n        inputs.strokeSwitch = true;\r\n\r\n        if (inputs.strokeColorAll) {\r\n            inputs.strokeColor = getColorType(inputs);\r\n        }\r\n        if (inputs.strokeWidthAll) {\r\n            inputs.strokeWidth = 1;\r\n            //stroke all needs 1 because some loops may have high shape count\r\n        }\r\n    } else {\r\n        inputs.strokeSwitch = false;\r\n    }\r\n\r\n    return inputs;\r\n};\r\nexport default checkResetBackgroundSwitches;\r\n","import loop from './special/loop.js';\r\n// import getInputStats from './functionPool/_getInputStats.js';\r\nimport clearDrawingArea from './functionPool/draw/clearDrawingArea.js';\r\nimport getBackgroundLoopStats from './functionPool/_getBackgroundLoopStats.js';\r\n// import getInitLoopStats from '../functionPool/_getInitLoopStats.js';\r\nimport getFollowingLoopStats from './functionPool/_getFollowingLoopStats.js';\r\nimport getShapeArr from './functionPool/_getShapeArr.js';\r\n// import getDrawType from './functionPool/_getDrawType.js';\r\nimport checkBackgroundSwitches from './functionPool/_checkBackgroundSwitches.js';\r\n// import getBlendMode from './functionPool/_getBlendMode.js';\r\n\r\nconst runMandalaDraw = (inputStats) => {\r\n\t// clear canvas\r\n\tclearDrawingArea(inputStats);\r\n\t// clear canvas\r\n\t//|||||||||||||||||||||||||||||||||stats|||||||||||||||||||\r\n\t//init stats\r\n\r\n\t// let inputStats = getInputStats();\r\n\r\n\t//'strokeOnly','fillOnly','fillAndStroke','individual','chaos','outline'\r\n\t// inputStats = getBlendMode(inputStats);\r\n\t//overrides\r\n\t// inputStats = getDrawType(inputStats, 'outline');\r\n\t// inputStats = getDrawType(inputStats);\r\n\t//build arr\r\n\t// inputStats.shapeArr = getShapeArr(inputStats);\r\n\r\n\t//start looping\r\n\tfor (\r\n\t\tlet currentLoop = inputStats.loopCount;\r\n\t\tcurrentLoop > 0;\r\n\t\tcurrentLoop--\r\n\t) {\r\n\t\tinputStats.currentLoop = currentLoop;\r\n\t\tinputStats.percent = currentLoop / inputStats.loopCount;\r\n\t\tif (!inputStats.customShape) {\r\n\t\t\tinputStats.maxShapeCount = Math.ceil(\r\n\t\t\t\tinputStats.useHalfSize * inputStats.percent\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (inputStats.backgroundLoopSwitch) {\r\n\t\t\tinputStats = getBackgroundLoopStats(inputStats);\r\n\t\t\t// } else if (inputStats.initLoopSwitch) {\r\n\t\t\t//     inputStats = getInitLoopStats(inputStats);\r\n\t\t} else {\r\n\t\t\tinputStats = getFollowingLoopStats(inputStats);\r\n\t\t}\r\n\t\t//call loop\r\n\t\t// console.log({ ...inputStats });\r\n\t\t// console.log(inputStats.pathRadius, inputStats.shapeSize);\r\n\t\t// debugger;\r\n\t\tinputStats = loop(inputStats);\r\n\t\t//reset loop stats\r\n\t\tif (inputStats.percent === 1) {\r\n\t\t\tinputStats = checkBackgroundSwitches(inputStats);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default runMandalaDraw;\r\n","// #################################### idea ######################################\r\n// stacking effect when you use rollRange(0, threshRadius50) for every pass\r\n\r\n// move this to edges for one of the effects being on the sides off center\r\n// ctx2.translate(halfWidth, halfHeight)\r\n\r\n// outer circle\r\n// ctx2.translate(halfWidth, halfHeight);\r\n// drawCircle(width, halfHeight);\r\n// drawCircle(halfWidth, height);\r\n//\r\n// top left is center inside begin path, bot right web outside of beginpath\r\n// ctx2.translate(0, 0);\r\n// drawCircle(width, height);\r\n// #################################### idea ######################################\r\n\r\nclass PointNode {\r\n\tconstructor(x, y) {\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t}\r\n}\r\n\r\n// const randomStartingPoint = () => {\r\n// \tconst dice = roll(halfWidth);\r\n// \treturn new PointNode(dice, halfWidth);\r\n// };\r\n\r\nconst findHypotenuse = (width, height) => {\r\n\tconst hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\r\n\treturn Math.round(hypotenuse);\r\n};\r\n\r\n// const mandalaDraw = () => {\r\n// \t// const mandalaType = roll(5);\r\n// \tconst mandalaType = 1;\r\n// \tswitch (mandalaType) {\r\n// \t\tcase 1:\r\n// \t\t\tspecialShape();\r\n// \t\t\tbreak;\r\n// \t\tcase 2:\r\n// \t\t\toneShape();\r\n// \t\t\tbreak;\r\n// \t\tcase 3:\r\n// \t\t\tmultiShapes();\r\n// \t\t\tbreak;\r\n// \t\tdefault:\r\n// \t\t\tbreak;\r\n// \t}\r\n\r\n// };\r\n\r\nexport {\r\n\tPointNode,\r\n\t// mandalaDraw,\r\n\tfindHypotenuse,\r\n};\r\n","import { roll } from '../../utilities.js';\r\n\r\nconst getBlendMode = () => {\r\n\t// debugger;\r\n\t// const blends = ['source-over', 'screen', 'difference', 'multiply'];\r\n\t// if (inputs.blendMode && blends.includes(inputs.blendMode)) return;\r\n\r\n\tlet blend;\r\n\tconst dice = roll(3);\r\n\tswitch (dice) {\r\n\t\tcase 1:\r\n\t\t\tblend = 'difference';\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\tblend = 'screen';\r\n\t\t\tbreak;\r\n\t\tcase 3:\r\n\t\t\tblend = 'multiply';\r\n\t\t\tbreak;\r\n\t\t// case 4:\r\n\t\t//     blend = 'source-over';\r\n\t\t//     break;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in getBlendMode');\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn blend;\r\n};\r\n\r\nexport default getBlendMode;\r\n","// import { roll, randomColor, lightColor } from '../../utilities.js';\r\n// import { halfWidth, halfHeight, height, width } from '../mandalaDrawing.js';\r\nimport { findHypotenuse } from '../mandalaDrawingUtilities.js';\r\nimport getBlendMode from './_getBlendMode.js';\r\nimport getShapeArr from './_getShapeArr.js';\r\n\r\nconst getInputStats = (mandalaDrawObj) => {\r\n\t//|||||||||||||||||||||||||||||||||stats|||||||||||||||||||\r\n\t// console.log(mandalaDrawObj);\r\n\tconst { canvasWidth, canvasHeight } = mandalaDrawObj;\r\n\tlet inputObj = {\r\n\t\twidth: canvasWidth || 500,\r\n\t\theight: canvasHeight || 500,\r\n\t\thalfWidth: Math.floor(canvasWidth / 2) || 250,\r\n\t\thalfHeight: Math.floor(canvasHeight / 2) || 250,\r\n\r\n\t\tloopCount: 5, //roll(5)\r\n\t\tcurrentLoop: null,\r\n\t\tpercent: null, // created in loop\r\n\r\n\t\tbackgroundLoopSwitch: true,\r\n\t\tinitLoopSwitch: false,\r\n\r\n\t\tcustomBackgroundSwitch: false,\r\n\t\tcustomBackgroundColor: null,\r\n\t\tcustomStrokeColor: null,\r\n\t\tcustomShape: null,\r\n\r\n\t\tclearSwitch: false,\r\n\t\tclearAll: false,\r\n\t\tclearRandomLoops: false,\r\n\t\tclearIndividual: false,\r\n\r\n\t\tdrawType: null,\r\n\r\n\t\tfillSwitch: false,\r\n\t\tfillAll: false,\r\n\t\tfillRandomLoops: false,\r\n\t\tfillIndividual: false,\r\n\t\tfillColor: null,\r\n\t\tfillColorAll: false,\r\n\t\tfillColorRandomLoops: false,\r\n\t\tfillColorIndividual: false,\r\n\r\n\t\tstrokeSwitch: false,\r\n\t\tstrokeAll: false,\r\n\t\tstrokeRandomLoops: false,\r\n\t\tstrokeIndividual: false,\r\n\t\tstrokeColor: null,\r\n\t\tstrokeColorAll: false,\r\n\t\tstrokeColorRandomLoops: false,\r\n\t\tstrokeColorIndividual: false,\r\n\t\tstrokeWidth: 1,\r\n\t\tstrokeWidthAll: false,\r\n\t\tstrokeWidthRandomLoops: false,\r\n\t\tstrokeWidthIndividual: false,\r\n\r\n\t\tuseSize: canvasWidth > canvasHeight ? canvasWidth : canvasHeight,\r\n\t\tuseHalfSize: null,\r\n\t\tmaxFullPath: findHypotenuse(canvasWidth, canvasHeight),\r\n\r\n\t\tpathRadius: null,\r\n\t\tminPathRadius: 20,\r\n\t\tmaxPathRadius: null,\r\n\t\tminShapeCount: 4,\r\n\t\tmaxShapeCount: 200,\r\n\t\tmaxShapeSize: 200,\r\n\r\n\t\tshapeCount: null, // default, randomize\r\n\t\tshapeSize: null, //default, shape size needs to be adjusted based on path\r\n\t\tshapeArr: null,\r\n\r\n\t\tshapeType: null,\r\n\t\tshapeNumber: null,\r\n\t\tblendMode: getBlendMode(), // have to find in loop\r\n\r\n\t\t...mandalaDrawObj, // override input stats\r\n\t};\r\n\tinputObj.useHalfSize = inputObj.useSize / 2;\r\n\tinputObj.maxPathRadius = findHypotenuse(\r\n\t\tinputObj.halfWidth,\r\n\t\tinputObj.halfHeight\r\n\t);\r\n\tinputObj.shapeArr = getShapeArr(inputObj);\r\n\r\n\t// console.log(inputObj.shapeArr);\r\n\t// debugger;\r\n\treturn inputObj;\r\n};\r\n\r\nexport default getInputStats;\r\n","import { createCanvasDraw } from '../utilities.js';\r\nimport runMandalaDraw from './runMandalaDraw.js';\r\nimport getInputStats from './functionPool/_getInputStats.js';\r\nimport getDrawType from './functionPool/_getDrawType.js';\r\n\r\nconst MandalaDrawing = (forceDesignObj) => {\r\n\tlet { dimensions, mandalaDrawObj } = forceDesignObj;\r\n\tlet width, height;\r\n\tif (dimensions) {\r\n\t\twidth = dimensions.width;\r\n\t\theight = dimensions.height;\r\n\t}\r\n\r\n\tconst canvasWidth = width ? width : 500;\r\n\tconst canvasHeight = height ? height : 500;\r\n\tconst [canvasDraw, ctx2] = createCanvasDraw(canvasWidth, canvasHeight);\r\n\tlet mandalaInput = {\r\n\t\t...mandalaDrawObj,\r\n\t\tcanvasWidth,\r\n\t\tcanvasHeight,\r\n\t\tcanvasDraw,\r\n\t\tctx2,\r\n\t};\r\n\t//get and place stats\r\n\tmandalaInput = getInputStats(mandalaInput);\r\n\t// debugger;\r\n\tmandalaInput = getDrawType(mandalaInput);\r\n\r\n\trunMandalaDraw(mandalaInput);\r\n\r\n\t//convert canvas to an image\r\n\t//return image\r\n\t// return ctx2;\r\n\tconst dataURL = mandalaInput.canvasDraw.toDataURL('image/png');\r\n\treturn dataURL;\r\n};\r\n\r\nexport { MandalaDrawing };\r\n","import RandomDrawing from './randomDrawing.js';\r\nimport { BoxDrawing } from './boxDrawing/BoxDrawing.js';\r\nimport { MandalaDrawing } from './mandalaDrawing/MandalaDrawing.js';\r\n\r\nconst randomInterface = {\r\n    RandomDrawing,\r\n    BoxDrawing,\r\n    MandalaDrawing,\r\n};\r\n\r\nexport default randomInterface;\r\n","import { roll } from './utilities.js';\r\nimport { BoxDrawing } from './boxDrawing/BoxDrawing.js';\r\nimport { MandalaDrawing } from './mandalaDrawing/MandalaDrawing.js';\r\n\r\nconst RandomDrawing = (forceDesignObj) => {\r\n\tconst dice = roll(2);\r\n\tlet returnRandomDrawing;\r\n\tswitch (dice) {\r\n\t\tcase 1:\r\n\t\t\treturnRandomDrawing = BoxDrawing;\r\n\t\t\tbreak;\r\n\t\tcase 2:\r\n\t\t\treturnRandomDrawing = MandalaDrawing;\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tconsole.log('error in randomDraw random dice');\r\n\t\t\tbreak;\r\n\t}\r\n\treturn returnRandomDrawing(forceDesignObj);\r\n};\r\n\r\nexport default RandomDrawing;\r\n","import randomInterface from './codeBank/randomInterface.js';\r\n\r\nconst BoxDrawing = randomInterface.BoxDrawing;\r\nconst MandalaDrawing = randomInterface.MandalaDrawing;\r\nconst RandomDrawing = randomInterface.RandomDrawing;\r\n\r\nlet max = 20;\r\nlet sequence = [];\r\n\r\nconst pushSequence = (design) => {\r\n\tsequence.push(design);\r\n\twhile (sequence.length > max) {\r\n\t\tsequence.shift();\r\n\t}\r\n};\r\nconst getSequence = (suggestMax) => {\r\n\t// debugger;\r\n\tmax = suggestMax;\r\n\twhile (sequence.length > max) {\r\n\t\tsequence.shift();\r\n\t}\r\n\treturn sequence;\r\n};\r\nconst getImage = () => {\r\n\tlet image;\r\n\t// second to last\r\n\t// if (sequence.length > 1) {\r\n\t// \timage = sequence[sequence.length - 2];\r\n\t// \treturn image;\r\n\t// }\r\n\t// last\r\n\tif (sequence.length > 0) {\r\n\t\timage = sequence[sequence.length - 1];\r\n\t\treturn image;\r\n\t}\r\n\t// const image = sequence[sequence.length - 1];\r\n\treturn null;\r\n};\r\n\r\nconst randomDraw = (forceDesignObj = {}) => {\r\n\tconst { typeOfDrawer } = forceDesignObj;\r\n\tif (!forceDesignObj.boxDrawObj) {\r\n\t\tforceDesignObj.boxDrawObj = {};\r\n\t}\r\n\tif (!forceDesignObj.mandalaDrawObj) {\r\n\t\tforceDesignObj.mandalaDrawObj = {};\r\n\t}\r\n\tswitch (typeOfDrawer) {\r\n\t\tcase 'boxDraw':\r\n\t\t\tconst box = BoxDrawing(forceDesignObj);\r\n\t\t\tpushSequence(box);\r\n\t\t\treturn;\r\n\t\tcase 'mandalaDraw':\r\n\t\t\tconst mandala = MandalaDrawing(forceDesignObj);\r\n\t\t\tpushSequence(mandala);\r\n\t\t\treturn;\r\n\t\tdefault:\r\n\t\t\tconst random = RandomDrawing(forceDesignObj);\r\n\t\t\tpushSequence(random);\r\n\t\t\treturn;\r\n\t}\r\n};\r\n\r\nexport { randomDraw, getSequence, getImage };\r\n","import React, { useState } from 'react';\r\nimport Sequence from './sequence/Sequence';\r\nimport { getImage } from '../../randomDraw';\r\n\r\nconst Head = ({ sequence }) => {\r\n\tconst [showSequence, setShowSequence] = useState(false);\r\n\tlet iconImage;\r\n\tif (sequence.length > 0) {\r\n\t\ticonImage = sequence[0];\r\n\t} else {\r\n\t\ticonImage = getImage();\r\n\t}\r\n\r\n\tconst handleSequence = (event) => {\r\n\t\tsetShowSequence(!showSequence);\r\n\t};\r\n\r\n\tlet sequenceArrow;\r\n\tif (showSequence) {\r\n\t\tsequenceArrow = '↑ sequence ↑';\r\n\t} else {\r\n\t\tsequenceArrow = '↓ sequence ↓';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<header id='head'>\r\n\t\t\t<section className='headContainer'>\r\n\t\t\t\t<img id='icon' src={iconImage} />\r\n\t\t\t\t<h1>randomDraw</h1>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName='btns toggleSequence'\r\n\t\t\t\t\tonClick={handleSequence}\r\n\t\t\t\t>\r\n\t\t\t\t\t{sequenceArrow}\r\n\t\t\t\t</button>\r\n\t\t\t</section>\r\n\t\t\t{showSequence && <Sequence sequence={sequence} />}\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Head;\r\n","const cloneObj = (obj) => {\r\n\treturn JSON.parse(JSON.stringify(obj));\r\n};\r\nconst clearEmpties = (obj) => {\r\n\tfor (let key in obj) {\r\n\t\tif (!obj[key] || typeof obj[key] !== 'object') {\r\n\t\t\t//remove strings null and undefined\r\n\t\t\tif (\r\n\t\t\t\tobj[key] === undefined ||\r\n\t\t\t\tobj[key] === null ||\r\n\t\t\t\tobj[key] === false ||\r\n\t\t\t\tobj[key] === ''\r\n\t\t\t) {\r\n\t\t\t\tdelete obj[key];\r\n\t\t\t}\r\n\t\t\tcontinue; // If null or not an object, skip to the next iteration\r\n\t\t}\r\n\t\t// The property is an object\r\n\t\tclearEmpties(obj[key]); // <-- Make a recursive call on the nested object\r\n\t\tif (Object.keys(obj[key]).length === 0) {\r\n\t\t\tdelete obj[key]; // The object had no properties, so delete that property\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n};\r\nconst writeInputCode = (obj) => {\r\n\tclearEmpties(obj);\r\n\tconst tab = `  `;\r\n\tlet html = `randomDraw(${JSON.stringify(obj, null, tab)});`;\r\n\treturn html;\r\n};\r\n\r\nconst resetDefaults = (\r\n\tstate,\r\n\tadjustState,\r\n\tadjustDimensions,\r\n\tadjustBoxState,\r\n\tadjustMandalaState\r\n) => {\r\n\t// const state = cloneObj(inputState);\r\n\tconsole.log('in resetDefaults');\r\n\tconsole.log('testing for infinite loop');\r\n\t// ======= dimensions adjustments\r\n\t// ~~~~~~~~~~~~~~~ reset default values of typeOfDrawer\r\n\tif (state.typeOfDrawer && state.typeOfDrawer === 'random') {\r\n\t\tadjustState({ typeOfDrawer: null });\r\n\t}\r\n\t// ~~~~~~~~~~~~~~~ reset default values of typeOfDrawer\r\n\t// ~~~~~~~~~~~~~~~ reset default values of width and height\r\n\tif (state.dimensions) {\r\n\t\tif (state.dimensions.width === 500) {\r\n\t\t\tadjustDimensions({ width: null });\r\n\t\t}\r\n\t\tif (state.dimensions.height === 500) {\r\n\t\t\tadjustDimensions({ height: null });\r\n\t\t}\r\n\t}\r\n\t// ~~~~~~~~~~~~~~~ reset default values of width and height\r\n\t// ======= dimensions adjustments\r\n\t// ======= boxDrawObj adjustments\r\n\tif (state.boxDrawObj) {\r\n\t\tif (state.boxDrawObj.boxCount && state.boxDrawObj.boxCount === 10) {\r\n\t\t\tadjustBoxState({ boxCount: null });\r\n\t\t}\r\n\t\t// ~~~~~~~~~~~~~~~ off 'choose' toggle remove color value\r\n\t\tif (state.boxDrawObj.primaryToggle) {\r\n\t\t\tif (\r\n\t\t\t\tstate.boxDrawObj.primaryToggle === 'default' ||\r\n\t\t\t\tstate.boxDrawObj.primaryToggle === 'random'\r\n\t\t\t) {\r\n\t\t\t\t//remove toggle\r\n\t\t\t\tif (state.boxDrawObj.primaryToggle === 'default') {\r\n\t\t\t\t\tadjustBoxState({ primaryToggle: null });\r\n\t\t\t\t}\r\n\t\t\t\t//remove color\r\n\t\t\t\tif (state.boxDrawObj.primaryColor) {\r\n\t\t\t\t\tadjustBoxState({ primaryColor: null });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (state.boxDrawObj.secondaryToggle) {\r\n\t\t\tif (\r\n\t\t\t\tstate.boxDrawObj.secondaryToggle === 'default' ||\r\n\t\t\t\tstate.boxDrawObj.secondaryToggle === 'random'\r\n\t\t\t) {\r\n\t\t\t\t//remove toggle\r\n\t\t\t\tif (state.boxDrawObj.secondaryToggle === 'default') {\r\n\t\t\t\t\tadjustBoxState({ secondaryToggle: null });\r\n\t\t\t\t}\r\n\t\t\t\t//remove color\r\n\t\t\t\tif (state.boxDrawObj.secondaryColor) {\r\n\t\t\t\t\tadjustBoxState({ secondaryColor: null });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (state.boxDrawObj.backgroundToggle) {\r\n\t\t\tif (\r\n\t\t\t\tstate.boxDrawObj.backgroundToggle === 'default' ||\r\n\t\t\t\tstate.boxDrawObj.backgroundToggle === 'random'\r\n\t\t\t) {\r\n\t\t\t\t//remove toggle\r\n\t\t\t\tif (state.boxDrawObj.backgroundToggle === 'default') {\r\n\t\t\t\t\tadjustBoxState({ backgroundToggle: null });\r\n\t\t\t\t}\r\n\t\t\t\t//remove color\r\n\t\t\t\tif (state.boxDrawObj.backgroundColor) {\r\n\t\t\t\t\tadjustBoxState({ backgroundColor: null });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// ~~~~~~~~~~~~~~~ off 'choose' toggle remove color value\r\n\t\t// ~~~~~~~~~~~~~~~ if color is same as default, remove property\r\n\t\tif (\r\n\t\t\tstate.boxDrawObj.primaryColor &&\r\n\t\t\tstate.boxDrawObj.primaryColor === '#000000'\r\n\t\t) {\r\n\t\t\tadjustBoxState({ primaryColor: null });\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.boxDrawObj.secondaryColor &&\r\n\t\t\tstate.boxDrawObj.secondaryColor === '#8C00FF'\r\n\t\t) {\r\n\t\t\tadjustBoxState({ secondaryColor: null });\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.boxDrawObj.backgroundColor &&\r\n\t\t\tstate.boxDrawObj.backgroundColor === '#FFFFFF00'\r\n\t\t) {\r\n\t\t\tadjustBoxState({ backgroundColor: null });\r\n\t\t}\r\n\t\t// ~~~~~~~~~~~~~~~ if color is same as default, remove property\r\n\t\t// ~~~~~~~~~~~~~~~ reset drawStyle default\r\n\t\tif (state.boxDrawObj.drawStyle === 'random') {\r\n\t\t\tadjustBoxState({ drawStyle: null });\r\n\t\t}\r\n\t\t// ======= boxDrawObj adjustments\r\n\t}\r\n\t// ======= mandalaDrawObj adjustments\r\n\tif (state.mandalaDrawObj) {\r\n\t\t// ~~~~~~~~~~~~~~~ reset drawType\r\n\t\tif (state.mandalaDrawObj.drawType) {\r\n\t\t\tif (state.mandalaDrawObj.drawType === 'random') {\r\n\t\t\t\tadjustMandalaState({ drawType: null });\r\n\t\t\t} else if (state.mandalaDrawObj.drawType !== 'custom') {\r\n\t\t\t\t//delete all mods in <MandalaCustomDrawOptions />\r\n\t\t\t\tstate.mandalaDrawObj.clearAll &&\r\n\t\t\t\t\tadjustMandalaState({ clearAll: false });\r\n\t\t\t\tstate.mandalaDrawObj.clearRandomLoops &&\r\n\t\t\t\t\tadjustMandalaState({ clearRandomLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.clearIndividualLoops &&\r\n\t\t\t\t\tadjustMandalaState({ clearIndividualLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.fillAll &&\r\n\t\t\t\t\tadjustMandalaState({ fillAll: false });\r\n\t\t\t\tstate.mandalaDrawObj.fillRandomLoops &&\r\n\t\t\t\t\tadjustMandalaState({ fillRandomLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.fillIndividualLoops &&\r\n\t\t\t\t\tadjustMandalaState({ fillIndividualLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.fillColorAll &&\r\n\t\t\t\t\tadjustMandalaState({ fillColorAll: false });\r\n\t\t\t\tstate.mandalaDrawObj.fillColorRandomLoops &&\r\n\t\t\t\t\tadjustMandalaState({ fillColorRandomLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.fillColorIndividualLoops &&\r\n\t\t\t\t\tadjustMandalaState({ fillColorIndividualLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeAll &&\r\n\t\t\t\t\tadjustMandalaState({ strokeAll: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeRandomLoops &&\r\n\t\t\t\t\tadjustMandalaState({ strokeRandomLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeIndividualLoops &&\r\n\t\t\t\t\tadjustMandalaState({ strokeIndividualLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeColorAll &&\r\n\t\t\t\t\tadjustMandalaState({ strokeColorAll: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeColorRandomLoops &&\r\n\t\t\t\t\tadjustMandalaState({ strokeColorRandomLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeColorIndividualLoops &&\r\n\t\t\t\t\tadjustMandalaState({ strokeColorIndividualLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeWidthAll &&\r\n\t\t\t\t\tadjustMandalaState({ strokeWidthAll: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeWidthRandomLoops &&\r\n\t\t\t\t\tadjustMandalaState({ strokeWidthRandomLoops: false });\r\n\t\t\t\tstate.mandalaDrawObj.strokeWidthIndividualLoops &&\r\n\t\t\t\t\tadjustMandalaState({ strokeWidthIndividualLoops: false });\r\n\t\t\t\t// ~~~~~~~~~~~~~~~ reset drawType\r\n\t\t\t\t// ~~~~~~~~~~~~~~~ reset drawType insides\r\n\t\t\t} else if (state.mandalaDrawObj.drawType === 'custom') {\r\n\t\t\t\tif (state.mandalaDrawObj.customBackgroundSwitch === false) {\r\n\t\t\t\t\tadjustMandalaState({\r\n\t\t\t\t\t\tcustomBackgroundSwitch: null,\r\n\t\t\t\t\t\tchooseBackgroundColor: null,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// ~~~~~~~~~~~~~~~ reset drawType insides\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.mandalaDrawObj.shapeType &&\r\n\t\t\tstate.mandalaDrawObj.shapeType === 'random'\r\n\t\t) {\r\n\t\t\tadjustMandalaState({ shapeType: null });\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.mandalaDrawObj.blendMode &&\r\n\t\t\tstate.mandalaDrawObj.blendMode === 'default'\r\n\t\t) {\r\n\t\t\tadjustMandalaState({ blendMode: null });\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.mandalaDrawObj.loopCount &&\r\n\t\t\tstate.mandalaDrawObj.loopCount === 5\r\n\t\t) {\r\n\t\t\tadjustMandalaState({ loopCount: null });\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.mandalaDrawObj.minShapeSize &&\r\n\t\t\tstate.mandalaDrawObj.minShapeSize === 20\r\n\t\t) {\r\n\t\t\tadjustMandalaState({ minShapeSize: null });\r\n\t\t}\r\n\t\t// if (\r\n\t\t// \tstate.mandalaDrawObj.maxShapeSize &&\r\n\t\t// \tstate.mandalaDrawObj.maxShapeSize === 200\r\n\t\t// ) {\r\n\t\t// \tadjustMandalaState({ maxShapeSize: null });\r\n\t\t// }\r\n\t\tif (\r\n\t\t\tstate.mandalaDrawObj.minShapeCount &&\r\n\t\t\tstate.mandalaDrawObj.minShapeCount === 4\r\n\t\t) {\r\n\t\t\tadjustMandalaState({ minShapeCount: null });\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.mandalaDrawObj.maxShapeCount &&\r\n\t\t\tstate.mandalaDrawObj.maxShapeCount === 200\r\n\t\t) {\r\n\t\t\tadjustMandalaState({ maxShapeCount: null });\r\n\t\t}\r\n\t\tif (\r\n\t\t\tstate.mandalaDrawObj.minPathRadius &&\r\n\t\t\tstate.mandalaDrawObj.minPathRadius === 20\r\n\t\t) {\r\n\t\t\tadjustMandalaState({ minPathRadius: null });\r\n\t\t}\r\n\t\t// if (\r\n\t\t// \tstate.mandalaDrawObj.maxPathRadius &&\r\n\t\t// \tstate.mandalaDrawObj.maxPathRadius === 200\r\n\t\t// ) {\r\n\t\t// \tadjustMandalaState({ maxPathRadius: null });\r\n\t\t// }\r\n\r\n\t\t// ~~~~~~~~~~~~~~~ reset loopCount\r\n\r\n\t\t// ======= mandalaDrawObj adjustments\r\n\t}\r\n\t// return state;\r\n};\r\n\r\nconst checkSequenceSize = (sequence, setSequence, maxSize = 20) => {\r\n\tif (maxSize === null) maxSize = 20;\r\n\tif (sequence.length > maxSize - 1) {\r\n\t\tconst adjustedArr = [...sequence];\r\n\t\tsequence.pop();\r\n\t\tsetSequence([...adjustedArr]);\r\n\t}\r\n};\r\n\r\nconst changeFavicon = (imgURI) => {\r\n\tconst favicon = document.querySelector('#favicon');\r\n\tfavicon.href = imgURI;\r\n};\r\nexport {\r\n\tcloneObj,\r\n\tclearEmpties,\r\n\twriteInputCode,\r\n\tresetDefaults,\r\n\tcheckSequenceSize,\r\n\tchangeFavicon,\r\n};\r\n","import React from 'react';\r\nimport { cloneObj, writeInputCode } from '../../functions/functions.js';\r\n\r\nconst CodeInjector = ({ state }) => {\r\n\t//get code\r\n\tlet displayCode = cloneObj(state);\r\n\t// clearEmpties(displayCode);\r\n\tdisplayCode = writeInputCode(displayCode);\r\n\t// console.log(displayCode);\r\n\r\n\treturn (\r\n\t\t<section id='codeInjectionContainer'>\r\n\t\t\t<pre>\r\n\t\t\t\t<code className='codeInjection'>{displayCode}</code>\r\n\t\t\t</pre>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default CodeInjector;\r\n","import React from 'react';\r\n\r\nconst Main = ({ children }) => {\r\n\treturn <main>{children}</main>;\r\n};\r\n\r\nexport default Main;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nconst initialState = {\r\n\tboxCount: 10,\r\n\tchoosePrimaryColor: '#000000',\r\n\tchooseSecondaryColor: '#8C00FF',\r\n\tchooseBackgroundColor: '#FFFFFF00',\r\n};\r\n\r\nconst BoxDropDownMarkUp = ({ adjustBoxState }) => {\r\n\tconst [input, setInput] = useState(initialState);\r\n\tconst [activePrimary, setActivePrimary] = useState(\r\n\t\t'defaultPrimaryColorBtn'\r\n\t);\r\n\tconst [activeSecondary, setActiveSecondary] = useState(\r\n\t\t'defaultSecondaryColorBtn'\r\n\t);\r\n\tconst [activeBackground, setActiveBackground] = useState(\r\n\t\t'defaultBackgroundColorBtn'\r\n\t);\r\n\tconst [activeStyle, setActiveStyle] = useState('random');\r\n\r\n\t// useEffect(() => {\r\n\t// \tconsole.log('refresh dropdown');\r\n\t// \t//prevent input state refreshing component,\r\n\t// }, []);\r\n\r\n\tconst handleChange = (event) => {\r\n\t\t// debugger;\r\n\t\tlet value = event.target.value;\r\n\t\tlet keyName = event.target.id;\r\n\t\tif (keyName === 'boxCount') {\r\n\t\t\tvalue = Number(value);\r\n\t\t\tadjustBoxState({ [keyName]: value });\r\n\t\t}\r\n\t\tsetInput({\r\n\t\t\t...input,\r\n\t\t\t[keyName]: value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleBtns = (event) => {\r\n\t\tconst id = event.target.id;\r\n\t\tswitch (id) {\r\n\t\t\tcase 'defaultPrimaryColorBtn':\r\n\t\t\t\tsetActivePrimary(id);\r\n\t\t\t\tadjustBoxState({ primaryToggle: 'default' });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'randomPrimaryColorBtn':\r\n\t\t\t\tsetActivePrimary(id);\r\n\t\t\t\tadjustBoxState({ primaryToggle: 'random' });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'choosePrimaryColorBtn':\r\n\t\t\t\tsetActivePrimary(id);\r\n\t\t\t\tadjustBoxState({\r\n\t\t\t\t\tprimaryToggle: 'choose',\r\n\t\t\t\t\tprimaryColor: input.choosePrimaryColor,\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'defaultSecondaryColorBtn':\r\n\t\t\t\tsetActiveSecondary(id);\r\n\t\t\t\tadjustBoxState({ secondaryToggle: 'default' });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'chooseSecondaryColorBtn':\r\n\t\t\t\tsetActiveSecondary(id);\r\n\t\t\t\tadjustBoxState({\r\n\t\t\t\t\tsecondaryToggle: 'choose',\r\n\t\t\t\t\tsecondaryColor: input.chooseSecondaryColor,\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'defaultBackgroundColorBtn':\r\n\t\t\t\tsetActiveBackground(id);\r\n\t\t\t\tadjustBoxState({ backgroundToggle: 'default' });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'randomBackgroundColorBtn':\r\n\t\t\t\tsetActiveBackground(id);\r\n\t\t\t\tadjustBoxState({ backgroundToggle: 'random' });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'chooseBackgroundColorBtn':\r\n\t\t\t\tsetActiveBackground(id);\r\n\t\t\t\tadjustBoxState({\r\n\t\t\t\t\tbackgroundToggle: 'choose',\r\n\t\t\t\t\tbackgroundColor: input.chooseBackgroundColor,\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('error in handleBtns');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleStyleBtns = (event) => {\r\n\t\tconst word = event.target.innerText;\r\n\t\tconst convertedWord =\r\n\t\t\tword.charAt(0).toLowerCase() + word.replace(/\\s/g, '').slice(1);\r\n\t\tsetActiveStyle(convertedWord);\r\n\t\tadjustBoxState({ drawStyle: convertedWord });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section id='boxSubControls'>\r\n\t\t\t<div className='separatorContainer'>\r\n\t\t\t\t<div className='separators boxCountSeparator'>\r\n\t\t\t\t\t<p>Box Count:</p>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='boxCount'\r\n\t\t\t\t\t\tclassName='inputField'\r\n\t\t\t\t\t\tname='boxCount'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.boxCount}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tstep='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='separators'>\r\n\t\t\t\t\t<p>Primary Color:</p>\r\n\t\t\t\t\t<div className='primaryColorContainer btnContainer'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='defaultPrimaryColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactivePrimary === 'defaultPrimaryColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDefault\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='randomPrimaryColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactivePrimary === 'randomPrimaryColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tRandom\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='choosePrimaryColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactivePrimary === 'choosePrimaryColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tChoose\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='choosePrimaryColor'\r\n\t\t\t\t\t\t\t\tname='choosePrimaryColor'\r\n\t\t\t\t\t\t\t\tclassName='colorInput'\r\n\t\t\t\t\t\t\t\ttype='color'\r\n\t\t\t\t\t\t\t\tvalue={input.choosePrimaryColor}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='separators'>\r\n\t\t\t\t\t<p>Secondary Color:</p>\r\n\t\t\t\t\t<div className='secondaryColorContainer btnContainer'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='defaultSecondaryColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveSecondary === 'defaultSecondaryColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDefault Random\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='chooseSecondaryColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveSecondary === 'chooseSecondaryColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tChoose\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='chooseSecondaryColor'\r\n\t\t\t\t\t\t\t\tclassName='colorInput'\r\n\t\t\t\t\t\t\t\ttype='color'\r\n\t\t\t\t\t\t\t\tvalue={input.chooseSecondaryColor}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='separators'>\r\n\t\t\t\t\t<p>Background Color:</p>\r\n\t\t\t\t\t<div className='backgroundColorContainer btnContainer'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='defaultBackgroundColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveBackground === 'defaultBackgroundColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tDefault\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='randomBackgroundColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveBackground === 'randomBackgroundColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tRandom\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='chooseBackgroundColorBtn'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveBackground === 'chooseBackgroundColorBtn'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tChoose\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tid='chooseBackgroundColor'\r\n\t\t\t\t\t\t\t\tclassName='colorInput'\r\n\t\t\t\t\t\t\t\ttype='color'\r\n\t\t\t\t\t\t\t\tvalue={input.chooseBackgroundColor}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='styleContainer btnContainer'>\r\n\t\t\t\t<p>Styles</p>\r\n\t\t\t\t<div className='btnContainer'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='randomBtn'\r\n\t\t\t\t\t\tclassName={`btns boxPatternBtns ${\r\n\t\t\t\t\t\t\tactiveStyle === 'random' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleStyleBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRandom\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='fullCloneBtn'\r\n\t\t\t\t\t\tclassName={`btns boxPatternBtns ${\r\n\t\t\t\t\t\t\tactiveStyle === 'fullClone' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleStyleBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tFull Clone\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='fullReflectBtn'\r\n\t\t\t\t\t\tclassName={`btns boxPatternBtns ${\r\n\t\t\t\t\t\t\tactiveStyle === 'fullReflect' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleStyleBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tFull Reflect\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='fullRotateBtn'\r\n\t\t\t\t\t\tclassName={`btns boxPatternBtns ${\r\n\t\t\t\t\t\t\tactiveStyle === 'fullRotate' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleStyleBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tFull Rotate\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='halfReflectBtn'\r\n\t\t\t\t\t\tclassName={`btns boxPatternBtns ${\r\n\t\t\t\t\t\t\tactiveStyle === 'halfReflect' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleStyleBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tHalf Reflect\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='noPatternBtn'\r\n\t\t\t\t\t\tclassName={`btns boxPatternBtns ${\r\n\t\t\t\t\t\t\tactiveStyle === 'noPattern' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleStyleBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tNo Pattern\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default BoxDropDownMarkUp;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nconst initialState = {\r\n\tclear: {\r\n\t\tclearAll: false,\r\n\t\tclearRandomLoops: false,\r\n\t\tclearIndividual: false,\r\n\t},\r\n\tfill: {\r\n\t\tfillAll: false,\r\n\t\tfillRandomLoops: false,\r\n\t\tfillIndividual: false,\r\n\t},\r\n\tfillColor: {\r\n\t\tfillColorAll: false,\r\n\t\tfillColorRandomLoops: false,\r\n\t\tfillColorIndividual: false,\r\n\t},\r\n\tstroke: {\r\n\t\tstrokeAll: false,\r\n\t\tstrokeRandomLoops: false,\r\n\t\tstrokeIndividual: false,\r\n\t},\r\n\tstrokeColor: {\r\n\t\tstrokeColorAll: false,\r\n\t\tstrokeColorRandomLoops: false,\r\n\t\tstrokeColorIndividual: false,\r\n\t},\r\n\tstrokeWidth: {\r\n\t\tstrokeWidthAll: false,\r\n\t\tstrokeWidthRandomLoops: false,\r\n\t\tstrokeWidthIndividual: false,\r\n\t},\r\n};\r\n\r\nconst MandalaCustomDrawOptions = ({ adjustMandalaState }) => {\r\n\tconst [input, setInput] = useState(initialState);\r\n\tconst [showBackgroundOptions, setShowBackgroundOptions] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(\r\n\t\t\t'refresh on input change so it does not take two submits to show'\r\n\t\t);\r\n\t\tadjustMandalaState({ ...collapseState(input) });\r\n\t\t//prevent input state refreshing component,\r\n\t}, [input]);\r\n\r\n\tconst collapseState = (state) => {\r\n\t\tlet collapsedState = {};\r\n\t\tfor (let lvl1Key in state) {\r\n\t\t\tfor (let lvl2Key in state[lvl1Key]) {\r\n\t\t\t\tcollapsedState[lvl2Key] = state[lvl1Key][lvl2Key];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn collapsedState;\r\n\t};\r\n\tconst handleChange = (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tlet id = event.target.id;\r\n\t\tlet name = event.target.name;\r\n\r\n\t\tif (event.target.checked && input[name][id]) {\r\n\t\t\tevent.target.checked = false;\r\n\t\t\tsetInput({\r\n\t\t\t\t...input,\r\n\t\t\t\t[name]: {\r\n\t\t\t\t\t...initialState[name],\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\t// //update this state\r\n\t\t\tsetInput({\r\n\t\t\t\t...input,\r\n\t\t\t\t[name]: {\r\n\t\t\t\t\t...initialState[name],\r\n\t\t\t\t\t[id]: true,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section id='customContainer'>\r\n\t\t\t<section className='customInputs'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='clearAll'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='clear'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='all'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='clearRandomLoops'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='clear'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='random'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='clearIndividual'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='clear'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='individual'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='fillAll'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='fill'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='all'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='fillRandomLoops'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='fill'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='random'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='fillIndividual'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='fill'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='individual'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='fillColorAll'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='fillColor'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='all'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='fillColorRandomLoops'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='fillColor'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='random'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='fillColorIndividual'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='fillColor'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='individual'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeAll'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='stroke'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='all'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeRandomLoops'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='stroke'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='random'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeIndividual'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='stroke'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='individual'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeColorAll'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='strokeColor'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='all'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeColorRandomLoops'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='strokeColor'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='random'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeColorIndividual'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='strokeColor'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='individual'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeWidthAll'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='strokeWidth'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='all'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeWidthRandomLoops'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='strokeWidth'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='random'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='strokeWidthIndividual'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='strokeWidth'\r\n\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\tvalue='individual'\r\n\t\t\t\t\t\tonClick={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t\t<section className='customLabels'>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor='clearAll'>Clear All Loops:</label>\r\n\t\t\t\t\t<label htmlFor='clearRandomLoops'>\r\n\t\t\t\t\t\tClear Random Loops:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor='clearIndividual'>Clear Individual:</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor='fillAll'>Fill All Loops:</label>\r\n\t\t\t\t\t<label htmlFor='fillRandomLoops'>Fill Random Loops:</label>\r\n\t\t\t\t\t<label htmlFor='fillIndividual'>Fill Individual:</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor='fillColorAll'>Fill Color All Loops:</label>\r\n\t\t\t\t\t<label htmlFor='fillColorRandomLoops'>\r\n\t\t\t\t\t\tFill Color Random Loops:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor='fillColorIndividual'>\r\n\t\t\t\t\t\tFill Color Individual:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor='strokeAll'>Stroke All Loops:</label>\r\n\t\t\t\t\t<label htmlFor='strokeRandomLoops'>\r\n\t\t\t\t\t\tStroke Random Loops:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor='strokeIndividual'>Stroke Individual:</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor='strokeColorAll'>\r\n\t\t\t\t\t\tStroke Color All Loops:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor='strokeColorRandomLoops'>\r\n\t\t\t\t\t\tStroke Color Random Loops:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor='strokeColorIndividual'>\r\n\t\t\t\t\t\tStroke Color Individual:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor='strokeWidthAll'>\r\n\t\t\t\t\t\tStroke Width All Loops:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor='strokeWidthRandomLoops'>\r\n\t\t\t\t\t\tStroke Width Random Loops:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor='strokeWidthIndividual'>\r\n\t\t\t\t\t\tStroke Width Individual:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default MandalaCustomDrawOptions;\r\n","import React, { useState } from 'react';\r\n\r\nconst initialState = {\r\n\tblendMode: 'random',\r\n\tloopCount: 5,\r\n\tminShapeSize: 20,\r\n\tmaxShapeSize: '',\r\n\tminShapeCount: 4,\r\n\tmaxShapeCount: 200,\r\n\tminPathRadius: 20,\r\n\tmaxPathRadius: '',\r\n\tchooseBackgroundColor: '#8C00FF',\r\n};\r\n\r\nconst MandalaDetailOptions = ({ adjustMandalaState }) => {\r\n\tconst [input, setInput] = useState(initialState);\r\n\r\n\tconst handleReset = () => {\r\n\t\tsetInput({\r\n\t\t\t...initialState,\r\n\t\t});\r\n\t\tadjustMandalaState({\r\n\t\t\tloopCount: null,\r\n\t\t\tminShapeSize: null,\r\n\t\t\tmaxShapeSize: null,\r\n\t\t\tminShapeCount: null,\r\n\t\t\tmaxShapeCount: null,\r\n\t\t\tminPathRadius: null,\r\n\t\t\tmaxPathRadius: null,\r\n\t\t\tblendMode: null,\r\n\t\t\tchooseBackgroundColor: null,\r\n\t\t});\r\n\t};\r\n\tconst handleChange = (event) => {\r\n\t\tconst id = event.target.id;\r\n\t\tlet value = event.target.value;\r\n\t\tif (initialState[id] === value) {\r\n\t\t\tvalue = null;\r\n\t\t}\r\n\t\t//defaults\r\n\t\tswitch (id) {\r\n\t\t\tcase 'blendMode':\r\n\t\t\t\tadjustMandalaState({ [id]: value });\r\n\t\t\t\tsetInput({\r\n\t\t\t\t\t...input,\r\n\t\t\t\t\t[id]: value,\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'loopCount':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'minShapeSize':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'maxShapeSize':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'minShapeCount':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'maxShapeCount':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'minPathRadius':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'maxPathRadius':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'chooseBackgroundColor':\r\n\t\t\t\tsetInput({\r\n\t\t\t\t\t...input,\r\n\t\t\t\t\t[id]: value,\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'customBackgroundSwitch':\r\n\t\t\t\tconst checked = event.target.checked;\r\n\t\t\t\tadjustMandalaState({\r\n\t\t\t\t\t[id]: checked,\r\n\t\t\t\t\tchooseBackgroundColor: input.chooseBackgroundColor,\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log(\r\n\t\t\t\t\t'in default in handle change of mandala detail options'\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\t// if (initialState[id] === value) {\r\n\t\t// adjustMandalaState({ [id]: null });\r\n\t\t// setInput({\r\n\t\t// ...input,\r\n\t\t// [id]: value,\r\n\t\t// });\r\n\t\t// return;\r\n\t\t// }\r\n\t\t//custom\r\n\t\tif (id === 'customBackgroundSwitch') {\r\n\t\t\tconst checked = event.target.checked;\r\n\t\t\tadjustMandalaState({\r\n\t\t\t\t[id]: checked,\r\n\t\t\t\tchooseBackgroundColor: input.chooseBackgroundColor,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t//update this state\r\n\t\tif (id !== 'blendMode') {\r\n\t\t\tvalue = Number(value);\r\n\t\t}\r\n\t\tsetInput({\r\n\t\t\t...input,\r\n\t\t\t[id]: value,\r\n\t\t});\r\n\r\n\t\tif (id === 'chooseBackgroundColor') return;\r\n\t\t//update main state\r\n\t\tadjustMandalaState({ [id]: value });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section id='detailsContainer'>\r\n\t\t\t<header>\r\n\t\t\t\tDetails: <span>(some of these values are calculated)</span>\r\n\t\t\t</header>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<section className='detailsInputs'>\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tname='blendMode'\r\n\t\t\t\t\t\tid='blendMode'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<option value='random'>random</option>\r\n\t\t\t\t\t\t<option value='difference'>difference</option>\r\n\t\t\t\t\t\t<option value='screen'>screen</option>\r\n\t\t\t\t\t\t<option value='multiply'>multiply</option>\r\n\t\t\t\t\t</select>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='loopCount'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='loopCount'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.loopCount}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='minShapeSize'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='minShapeSize'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.minShapeSize}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='maxShapeSize'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='maxShapeSize'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.maxShapeSize}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tplaceholder='200'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='minShapeCount'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='minShapeCount'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.minShapeCount}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='maxShapeCount'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='maxShapeCount'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.maxShapeCount}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='minPathRadius'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='minPathRadius'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.minPathRadius}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='maxPathRadius'\r\n\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\tname='maxPathRadius'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.maxPathRadius}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tplaceholder='500'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid='chooseBackgroundColor'\r\n\t\t\t\t\t\t\tname='chooseBackgroundColor'\r\n\t\t\t\t\t\t\ttype='color'\r\n\t\t\t\t\t\t\tvalue={input.chooseBackgroundColor}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tid='customBackgroundSwitch'\r\n\t\t\t\t\t\t\tclassName='mandalaInputs'\r\n\t\t\t\t\t\t\tname='customBackgroundSwitch'\r\n\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section className='detailsLabels'>\r\n\t\t\t\t\t<label htmlFor='blendMode'>Blend Mode</label>\r\n\t\t\t\t\t<label htmlFor='loopCount'>Loop Count</label>\r\n\t\t\t\t\t<label htmlFor='minShapeSize'>Min Shape Size</label>\r\n\t\t\t\t\t<label htmlFor='maxShapeSize'>Max Shape Size</label>\r\n\t\t\t\t\t<label htmlFor='minShapeCount'>Min Shape Count</label>\r\n\t\t\t\t\t<label htmlFor='maxShapeCount'>Max Shape Count</label>\r\n\t\t\t\t\t<label htmlFor='minPathRadius'>Min Path Radius</label>\r\n\t\t\t\t\t<label htmlFor='maxPathRadius'>Max Path Radius</label>\r\n\t\t\t\t\t<label htmlFor='backgroundColor'>Background Color</label>\r\n\t\t\t\t</section>\r\n\t\t\t\t<section className='detailsReset'>\r\n\t\t\t\t\t<button className='resetBtn' onClick={handleReset}>\r\n\t\t\t\t\t\tReset\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default MandalaDetailOptions;\r\n","import React, { useState } from 'react';\r\nimport MandalaCustomDrawOptions from './mandalaCustomDrawOptions/MandalaCustomDrawOptions';\r\nimport MandalaDetailOptions from './mandalaDetailsOptions/MandalaDetailOptions';\r\n\r\nconst MandalaDropDownMarkUp = ({ adjustMandalaState }) => {\r\n\tconst [showDrawOptions, setShowDrawOptions] = useState(false);\r\n\r\n\tconst [activeDrawType, setActiveDrawType] = useState('random');\r\n\tconst [activeShapeType, setActiveShapeType] = useState('shapeTypeRandom');\r\n\r\n\tconst handleShapeTypeBtns = (event) => {\r\n\t\tconst id = event.target.id;\r\n\t\tswitch (id) {\r\n\t\t\tcase 'shapeTypeRandom':\r\n\t\t\t\tsetActiveShapeType(id);\r\n\t\t\t\tadjustMandalaState({ shapeType: null });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'shapeTypeSame':\r\n\t\t\t\tsetActiveShapeType(id);\r\n\t\t\t\tadjustMandalaState({ shapeType: 'same' });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'shapeTypeIncrement':\r\n\t\t\t\tsetActiveShapeType(id);\r\n\t\t\t\tadjustMandalaState({ shapeType: 'increment' });\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\tconst handleDrawTypeBtns = (event) => {\r\n\t\tlet id = event.target.id;\r\n\t\tswitch (id) {\r\n\t\t\tcase 'random':\r\n\t\t\t\tsetShowDrawOptions(false);\r\n\t\t\t\tsetActiveDrawType(id);\r\n\t\t\t\tadjustMandalaState({ drawType: null });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mandalaCustom':\r\n\t\t\t\tsetShowDrawOptions(true);\r\n\t\t\t\tsetActiveDrawType('custom');\r\n\t\t\t\tadjustMandalaState({ drawType: 'custom' });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'strokeOnly':\r\n\t\t\tcase 'fillOnly':\r\n\t\t\tcase 'fillAndStroke':\r\n\t\t\tcase 'individual':\r\n\t\t\tcase 'chaos':\r\n\t\t\tcase 'outline':\r\n\t\t\t\tsetShowDrawOptions(false);\r\n\t\t\t\tsetActiveDrawType(id);\r\n\t\t\t\tadjustMandalaState({ drawType: id });\r\n\t\t\tdefault:\r\n\t\t\t\tsetShowDrawOptions(false);\r\n\t\t\t\tconsole.log('in default of mandala dropdown markup');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section id='mandalaSubControls'>\r\n\t\t\t<div className='separatorContainer'>\r\n\t\t\t\t<div className='separators'>\r\n\t\t\t\t\t<MandalaDetailOptions\r\n\t\t\t\t\t\tadjustMandalaState={adjustMandalaState}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='separators drawTypeSeparator'>\r\n\t\t\t\t\t<p>Draw Type:</p>\r\n\t\t\t\t\t<div className='btnContainer'>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='random'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns boxPatternBtns ${\r\n\t\t\t\t\t\t\t\tactiveDrawType === 'random' ? 'active' : ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleDrawTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tRandom\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='strokeOnly'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveDrawType === 'strokeOnly' ? 'active' : ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleDrawTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tStroke Only\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='fillOnly'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveDrawType === 'fillOnly' ? 'active' : ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleDrawTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tFill Only\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='fillAndStroke'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveDrawType === 'fillAndStroke'\r\n\t\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleDrawTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tFill and Stroke\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='individual'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveDrawType === 'individual' ? 'active' : ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleDrawTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tIndividual\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='chaos'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveDrawType === 'chaos' ? 'active' : ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleDrawTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tChaos\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='outline'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\t\tactiveDrawType === 'outline' ? 'active' : ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleDrawTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tOutline\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tid='mandalaCustom'\r\n\t\t\t\t\t\t\tname='drawType'\r\n\t\t\t\t\t\t\tclassName={`btns custom ${\r\n\t\t\t\t\t\t\t\tactiveDrawType === 'custom' ? 'active' : ''\r\n\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\tonClick={handleDrawTypeBtns}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<p>Custom</p>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='separators  customSeparator'>\r\n\t\t\t\t\t{showDrawOptions ? (\r\n\t\t\t\t\t\t<MandalaCustomDrawOptions\r\n\t\t\t\t\t\t\tadjustMandalaState={adjustMandalaState}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : null}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='separators closingSeparator'>\r\n\t\t\t\t<p>Shape Type:</p>\r\n\t\t\t\t<div className='shapeType btnContainer'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='shapeTypeRandom'\r\n\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\tactiveShapeType === 'shapeTypeRandom'\r\n\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleShapeTypeBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRandom\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='shapeTypeSame'\r\n\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\tactiveShapeType === 'shapeTypeSame' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleShapeTypeBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tSame\r\n\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='shapeTypeIncrement'\r\n\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\tactiveShapeType === 'shapeTypeIncrement'\r\n\t\t\t\t\t\t\t\t? 'active'\r\n\t\t\t\t\t\t\t\t: ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleShapeTypeBtns}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tIncrement\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default MandalaDropDownMarkUp;\r\n","import React, { useState } from 'react';\r\nimport BoxDropDownMarkUp from './boxDropdownMarkUp/BoxDropDownMarkUp';\r\nimport MandalaDropDownMarkUp from './mandalaDropDownMarkUp/MandalaDropDownMarkUp';\r\n\r\nconst initialInputState = {\r\n\twidth: 500,\r\n\theight: 500,\r\n};\r\n\r\nconst Controls = ({\r\n\tadjustState,\r\n\tadjustDimensions,\r\n\tadjustBoxState,\r\n\tadjustMandalaState,\r\n}) => {\r\n\tconst [input, setInput] = useState(initialInputState);\r\n\tconst [active, setActive] = useState('randomDrawerBtn');\r\n\tconst [dropDown, setDropDown] = useState(false);\r\n\tconst [whichDropDown, setWhichDropDown] = useState(''); //'draw', 'mandala'\r\n\r\n\tconst handleBtnClick = (event) => {\r\n\t\tlet id = event.target.id;\r\n\t\tswitch (id) {\r\n\t\t\tcase 'boxDrawerBtn':\r\n\t\t\t\tsetDropDown(true);\r\n\t\t\t\tsetWhichDropDown('box');\r\n\t\t\t\tsetActive(id);\r\n\t\t\t\tadjustState({ typeOfDrawer: 'boxDraw' });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'mandalaDrawerBtn':\r\n\t\t\t\tsetDropDown(true);\r\n\t\t\t\tsetWhichDropDown('mandala');\r\n\t\t\t\tsetActive(id);\r\n\t\t\t\tadjustState({ typeOfDrawer: 'mandalaDraw' });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'randomDrawerBtn':\r\n\t\t\t\tsetDropDown(false);\r\n\t\t\t\tsetActive('randomDrawerBtn');\r\n\t\t\t\tadjustState({ typeOfDrawer: null });\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.log('error in handlebtnclick in controls');\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\tconst handleChange = (event) => {\r\n\t\tconst name = event.target.name;\r\n\t\tlet value = Number(event.target.value);\r\n\r\n\t\tsetInput({\r\n\t\t\t...input,\r\n\t\t\t[name]: event.target.value,\r\n\t\t});\r\n\t\tif (value === 500) {\r\n\t\t\tvalue = null;\r\n\t\t}\r\n\r\n\t\tadjustDimensions({ [name]: value });\r\n\t};\r\n\r\n\tlet dropDownMarkUp;\r\n\tswitch (whichDropDown) {\r\n\t\tcase 'box':\r\n\t\t\tdropDownMarkUp = (\r\n\t\t\t\t<BoxDropDownMarkUp adjustBoxState={adjustBoxState} />\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tcase 'mandala':\r\n\t\t\tdropDownMarkUp = (\r\n\t\t\t\t<MandalaDropDownMarkUp\r\n\t\t\t\t\tadjustMandalaState={adjustMandalaState}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tdropDownMarkUp = null;\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<section id='controls'>\r\n\t\t\t<section className='mainControls'>\r\n\t\t\t\t<div className='drawerContainer btnContainer'>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='randomDrawerBtn'\r\n\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\tactive === 'randomDrawerBtn' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleBtnClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tRandom Draw\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='boxDrawerBtn'\r\n\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\tactive === 'boxDrawerBtn' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleBtnClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tBox Draw\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tid='mandalaDrawerBtn'\r\n\t\t\t\t\t\tclassName={`btns ${\r\n\t\t\t\t\t\t\tactive === 'mandalaDrawerBtn' ? 'active' : ''\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\tonClick={handleBtnClick}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tMandala Draw\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tDimensions:\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='dimensionWidth'\r\n\t\t\t\t\t\tname='width'\r\n\t\t\t\t\t\tclassName='inputField'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.width}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tstep='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\tx\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid='dimensionHeight'\r\n\t\t\t\t\t\tname='height'\r\n\t\t\t\t\t\tclassName='inputField'\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tvalue={input.height}\r\n\t\t\t\t\t\tmin='2'\r\n\t\t\t\t\t\tstep='2'\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</p>\r\n\t\t\t</section>\r\n\t\t\t{dropDown && dropDownMarkUp}\r\n\t\t</section>\r\n\t);\r\n};\r\nexport default Controls;\r\n","import React, { useState } from 'react';\r\n\r\nconst initialState = {\r\n\tisScrolling: false,\r\n\tcanvasWidth: 0,\r\n\tcanvasHeight: 0,\r\n\tendX: 0,\r\n\tendY: 0,\r\n\tstartX: 0,\r\n\tstartY: 0,\r\n};\r\n\r\nconst MainDisplay = () => {\r\n\tconst [scroll, setScroll] = useState(initialState);\r\n\tconst html = document.querySelector('html');\r\n\r\n\tconst handleMouseMove = (event) => {\r\n\t\tif (scroll.isScrolling) {\r\n\t\t\tconst windowScrollX = window.scrollX;\r\n\t\t\tconst windowScrollY = window.scrollY;\r\n\t\t\tconst pageX = event.pageX;\r\n\t\t\tconst pageY = event.pageY;\r\n\t\t\tconst calcMoveX = scroll.startX - pageX + windowScrollX;\r\n\t\t\tconst calcMoveY = scroll.startY - pageY + windowScrollY;\r\n\t\t\t//move\r\n\t\t\thtml.scrollLeft = calcMoveX;\r\n\t\t\thtml.scrollTop = calcMoveY;\r\n\t\t}\r\n\t};\r\n\tconst handleMouseDown = (event) => {\r\n\t\t// //mouse coords\r\n\t\tconst pageX = event.pageX;\r\n\t\tconst pageY = event.pageY;\r\n\t\tsetScroll({\r\n\t\t\t...scroll,\r\n\t\t\tisScrolling: true,\r\n\t\t\tstartX: pageX,\r\n\t\t\tstartY: pageY,\r\n\t\t});\r\n\t};\r\n\tconst handleMouseUp = (event) => {\r\n\t\tsetScroll({\r\n\t\t\t...scroll,\r\n\t\t\tisScrolling: false,\r\n\t\t\tstartX: scroll.endX,\r\n\t\t\tstartY: scroll.endY,\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section\r\n\t\t\tid='randomDraw'\r\n\t\t\tonMouseDown={handleMouseDown}\r\n\t\t\tonMouseLeave={handleMouseUp}\r\n\t\t\tonMouseUp={handleMouseUp}\r\n\t\t\tonMouseOut={handleMouseUp}\r\n\t\t\tonMouseMove={handleMouseMove}\r\n\t\t>\r\n\t\t\tDrawing will go here\r\n\t\t</section>\r\n\t);\r\n};\r\nexport default MainDisplay;\r\n","import React, { useState, useEffect } from 'react';\nimport Head from './components/head/Head';\nimport Sequence from './components/head/sequence/Sequence';\nimport CodeInjector from './components/codeInjector/CodeInjector';\nimport Main from './components/main/Main';\nimport Controls from './components/main/controls/Controls';\nimport MainDisplay from './components/main/mainDisplay/MainDisplay';\n\nimport { randomDraw, getImage } from './randomDraw.js';\nimport {\n\tcloneObj,\n\twriteInputCode,\n\tresetDefaults,\n\tclearEmpties,\n\tcheckSequenceSize,\n\tchangeFavicon,\n} from './functions/functions.js';\n\nfunction App() {\n\t// let forceDesignObj = {\n\t// \t\ttypeOfDrawer: 'random',\n\t// \t\t\tdimensions: {\n\t// \t\t\t\twidth: null,\n\t// \t\t\t\theight: null,\n\t// \t\t\t},\n\t// \t\ttestStr: '',\n\t// \t\tboxDrawObj: {},\n\t// \t\tmandalaDrawObj: {},\n\t// };\n\t// let forceDesignObj = {};\n\tconst [designState, setDesignState] = useState({});\n\tconst [sequence, setSequence] = useState([]);\n\n\tuseEffect(() => {\n\t\t//reset defaults\n\t\t//updates the state then runs again\n\t\tresetDefaults(\n\t\t\tdesignState,\n\t\t\tadjustState,\n\t\t\tadjustDimensions,\n\t\t\tadjustBoxState,\n\t\t\tadjustMandalaState\n\t\t);\n\t\t//clear clone state and clear empty regions\n\t\tlet inputObj = clearEmpties(cloneObj(designState));\n\n\t\t//draw\n\t\trandomDraw(inputObj);\n\t\t// make sure arr isnt over max (default 20)\n\t\tcheckSequenceSize(sequence, setSequence, null);\n\t\t//getImg\n\t\tlet grabImg = getImage();\n\t\t//update sequence\n\t\tgrabImg && setSequence([grabImg, ...sequence]);\n\t\t//also update faviocon\n\t\tgrabImg && changeFavicon(grabImg);\n\t\t// }\n\t}, [designState]);\n\n\tconst adjustState = (obj) => {\n\t\tsetDesignState({\n\t\t\t...designState,\n\t\t\t...obj,\n\t\t});\n\t};\n\n\tconst adjustDimensions = (obj) => {\n\t\tsetDesignState({\n\t\t\t...designState,\n\t\t\tdimensions: {\n\t\t\t\t...designState.dimensions,\n\t\t\t\t...obj,\n\t\t\t},\n\t\t});\n\t};\n\tconst adjustBoxState = (obj) => {\n\t\tsetDesignState({\n\t\t\t...designState,\n\t\t\tboxDrawObj: {\n\t\t\t\t...designState.boxDrawObj,\n\t\t\t\t...obj,\n\t\t\t},\n\t\t});\n\t};\n\tconst adjustMandalaState = (obj) => {\n\t\tsetDesignState({\n\t\t\t...designState,\n\t\t\tmandalaDrawObj: {\n\t\t\t\t...designState.mandalaDrawObj,\n\t\t\t\t...obj,\n\t\t\t},\n\t\t});\n\t};\n\n\tconst draw = () => {\n\t\trandomDraw(designState);\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Head sequence={sequence} />\n\t\t\t<CodeInjector state={designState} />\n\t\t\t<Main>\n\t\t\t\t<Controls\n\t\t\t\t\tdraw={draw}\n\t\t\t\t\tstate={designState}\n\t\t\t\t\tadjustState={adjustState}\n\t\t\t\t\tadjustDimensions={adjustDimensions}\n\t\t\t\t\tadjustBoxState={adjustBoxState}\n\t\t\t\t\tadjustMandalaState={adjustMandalaState}\n\t\t\t\t/>\n\t\t\t\t<MainDisplay />\n\t\t\t</Main>\n\t\t</div>\n\t);\n}\n\nexport default App;\n\n//maybe add fractals\n//maybe add pixel trails\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/App.scss';\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}